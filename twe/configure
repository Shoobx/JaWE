# Together Workflow Editor 
# Copyright (C) 2011 Together Teamsolutions Co., Ltd.
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or 
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful, 
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program. If not, see http://www.gnu.org/licenses
#
#######################################################################

#!/bin/bash
#
#
#

function help {
   echo "configure              - Creates build.properties file with default values for all possible parameters."
   echo "                         It can work only if there is a default JAVA registered with the system."
   echo "configure -help        - Displays Help screen"
   echo "configure -appname     - Sets the short name for the project."
   echo "configure -appfullname - Sets the full name for the project."
   echo "configure -version     - Sets the version number for the project."
   echo "configure -release     - Sets the release number for the project."
   echo "configure -buildid     - Sets the build id for the project."
   echo "configure -jdkhome     - Sets the "JAVA HOME" location of Java to be used to compile the project."
   echo "configure -instdir     - Sets the location of the installation dir used when executing make script"
   echo "                         with install target specified."
   echo "configure -rebranding  - Flag that determines if the project will be "rebranded" with the context of branding folder."
   echo "                         Possible values [true/false]."
   echo "configure -brandingdir - Sets the location of the branding folder used when re-branding application."
   echo "configure -language    - Used by NSIS when creating setup (normally used for rebranding)." 
   echo "                         Currently possible values [English/Portuguese/PortugueseBR]."
   echo
   echo "Multiple parameters can be specified at once."
   echo
   echo
   echo "Example:"
   echo
   echo "./configure -version 4.5 -release 1 -buildid 20120301-0808 -jdkhome /usr/jdk1.7 -instdir /tmp/JaWE"
}

for n in $*
do
	case $n in
		--help | -help) help
			exit 0
		;;      
	esac            
done                    
                        
buildid=
install_DOT_dir=
rebranding=false
app_DOT_name=twe
project_DOT_name="Together Workflow Editor"

cd $(dirname $0)        
                        
if test -r ./build.properties ; then
    grep -v ^# ./build.properties |grep -v ^$|sed -e 's|\.|_DOT_|g'>./tmp.properties
#    cp build.properties tmp.properties
    dos2unix -n tmp.properties tmp.properties
    . ./tmp.properties
    rm ./tmp.properties
fi

if test -r ./project.properties ; then
#    grep -v ^# ./project.properties |grep -v ^$|sed -e 's|\.|_DOT_|g'>./tmpv.properties
    cp project.properties tmpv.properties
    dos2unix -n tmpv.properties tmpv.properties
    . ./tmpv.properties
    rm ./tmpv.properties
fi

if test -r ./version.properties ; then
    grep -v ^# ./version.properties |grep -v ^$|sed -e 's|\.|_DOT_|g'>./tmpv.properties
#    cp version.properties tmpv.properties
    dos2unix -n tmpv.properties tmpv.properties
    . ./tmpv.properties
    rm ./tmpv.properties
fi

for n in $*             
do
	#if  the previous option needs an argument, assign it
                        
	if
		[[ -n $previous ]]
	then
		eval "$previous=\$n"
		previous=
		continue
	fi
	optarg=$(expr "x$n" : 'x[^=]*=\(.*\)')
	case $n in
		-version | --version)	previous=version;;
		-version=* | --version=*)	version=$optarg;;
		
		-release | --release)	previous=release;;
		-release=* | --release=*)	release=$optarg;;
		
		-appname | --appname)	previous=app_DOT_name;;
		-appname=* | --appname=*)	app_DOT_name=$optarg;;
		
		-appfullname | --appfullname)	previous=app_DOT_full_DOT_name;;
		-appfullname=* | --appfullname=*)	app_DOT_full_DOT_name=$optarg;;
		
		-buildid | --buildid)	previous=buildid;;
		-buildid=* | --buildid=*)	buildid=$optarg;;

		-jdkhome | --jdkhome)		previous=jdk_DOT_dir;;
		-jdkhome=* | --jdkhome=*)	jdk_DOT_dir=$optarg;;

		-instdir | --instdir)		previous=install_DOT_dir;;
		-instdir=* | --instdir=*)	install_DOT_dir=$optarg;;

		-rebranding | --rebranding)	previous=rebranding;;
		-rebranding=* | --rebranding=*)	rebranding=$optarg;;

		-brandingdir | --brandingdir)		previous=branding_DOT_dir;;
		-brandingdir=* | --brandingdir=*)	branding_DOT_dir=$optarg;;

		-language | --language)		previous=language;;
		-language=* | --language=*)	language=$optarg;;

		-projectname | --projectname)		previous=project_DOT_name;;
		-projectname=* | --projectname=*)	project_DOT_name=$optarg;;

	-*)
		{
			echo "$0: Error: unrecognized option $n" >&2
			help
			{(exit 1); exit 1;};
		} ;;
	*=*)
		eval "$n"
	    ;;

	*)
	    {
		echo "$0: error: unrecognized param: $n." >&2
		help
		{ (exit 1); exit 1; };
	    } ;;
    esac
done

if test -n "$jdk_DOT_dir"; then
    jdk_DOT_dir=`echo $jdk_DOT_dir|sed -e 's|_DOT_|\.|g'`
    version=`echo $version|sed -e 's|_DOT_|\.|g'`
else
    if test -n "$JAVA_HOME"; then
      jdk_DOT_dir=$JAVA_HOME
    else
      which_javac=`which javac 2>/dev/null`
       if test -n "$which_javac"; then
	   cd `dirname $which_javac`/..
	   jdk_DOT_dir=$PWD
	   cd -
       else
	   {
	       echo "$0: error: JAVA_HOME not defined
   Try \`$0 --help' for more information." >&2
	       { (exit 1); exit 1; };
	   }
       fi
    fi
fi




if test -d $jdk_DOT_dir -a -x $jdk_DOT_dir/bin/javac ; then
	prefix=${prefix:=/usr/local}
	prefix=$(echo $prefix | sed 's/_DOT_/./g')
    cat >Makefile <<EOF
#
VERSION=$version
PROJECT=$app_DOT_name
PREFIX=$prefix
CLASSPATH=\
$PWD/tools/ant/ant.jar:\
$PWD/tools/ant/ant-launcher.jar:\
$PWD/tools/antcontrib/antcontrib.jar:\
$jdk_DOT_dir/lib/tools.jar

JAVA_HOME=$jdk_DOT_dir
JAVAC=$jdk_DOT_dir/bin/javac
JAVA=$jdk_DOT_dir/bin/java
PATH=$jdk_DOT_dir/bin:\$(shell echo \$\$PATH)

help: FORCE
	@\$(JAVA) -cp \$(CLASSPATH) org.apache.tools.ant.Main \$@

buildAll: FORCE
	@\$(JAVA) -cp \$(CLASSPATH) org.apache.tools.ant.Main \$@

buildNoDoc: FORCE
	@\$(JAVA) -cp \$(CLASSPATH) org.apache.tools.ant.Main \$@

buildDoc: FORCE
	@\$(JAVA) -cp \$(CLASSPATH) org.apache.tools.ant.Main \$@

debug: FORCE
	@\$(JAVA) -cp \$(CLASSPATH) org.apache.tools.ant.Main \$@

install: FORCE
	@\$(JAVA) -cp \$(CLASSPATH) org.apache.tools.ant.Main \$@

clean: FORCE
	@\$(JAVA) -cp \$(CLASSPATH) org.apache.tools.ant.Main \$@

buildOutput: FORCE
	@\$(JAVA) -cp \$(CLASSPATH) org.apache.tools.ant.Main \$@
  
distributions:
	@rm -fr installation/Unix/rpm
	@java -Xmx512M -XX:MaxPermSize=192M -jar tools/ant/ant-launcher.jar distSourceUnix
	@chmod +x installation/unix/dist.sh
	@JAVA_HOME=\$(JAVA_HOME) installation/unix/dist.sh \$(VERSION) $release $app_DOT_name $rebranding community $buildid

FORCE:

EOF
else
    {
	echo "$0: error: JAVA_HOME=$jdk_DOT_dir not valid
Try \`$0 --help' for more information." >&2
	{ (exit 1); exit 1; };
    }
fi

rm -f ./build.properties

echo "# Configured on "`uname -n`" at "`date` >build.properties
(
    echo ""
    echo "### ----------        Build Id    --------- ###"
    echo "buildid=$buildid"
    echo "### ----------   jdk dir                ---------- ###"
    echo "jdk.dir=$jdk_DOT_dir"
    echo "### ----------      Install directory   --------- ###"
    echo "install.dir=$install_DOT_dir"
    echo "### ----------      Rebranding   --------- ###"
    echo "rebranding=$rebranding"
    echo "### ----------      branding directory   --------- ###"
    echo "branding.dir=$branding_DOT_dir"
    echo "### ----------      language   --------- ###"
    echo "language=$language"
    echo "#####################"
)|sed -e 's|_DOT_|\.|g'>>build.properties 

rm -f ./project.properties

(
    echo "#####################"
    echo "app.name=$app_DOT_name"
    echo "app.full.name=$app_DOT_full_DOT_name"
    echo "#####################"
)|sed -e 's|_DOT_|\.|g'>>project.properties 

rm -f ./version.properties

(
    echo "#####################"
    echo "version=$version"
    echo "release=$release"
    echo "#####################"
)|sed -e 's|_DOT_|\.|g'>>version.properties 
