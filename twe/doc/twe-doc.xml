<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook V5.0//EN"
"../tools/docbook-dtd/dtd/docbook.dtd">
<!--
	Together Workflow Editor
	Copyright (C) 2011 Together Teamsolutions Co., Ltd.
	
	This program is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation, either version 3 of the License, or
	(at your option) any later version.
	
	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
	GNU General Public License for more details.
	
	You should have received a copy of the GNU General Public License
	along with this program. If not, see http://www.gnu.org/licenses
-->
<book status="work in progress" version="5.0" xml:id="tweug" xml:lang="en"
      xmlns="http://docbook.org/ns/docbook">
  <title><inlinemediaobject>
      <imageobject>
        <imagedata contentdepth="100%" fileref="Images/cover8.jpg"
                   scalefit="1" valign="middle" width="100%"/>
      </imageobject>
    </inlinemediaobject> <replaceable><?coverdetail ?></replaceable></title>

  <titleabbrev>Together Workflow Editor</titleabbrev>

  <info>
    <title>Together Workflow Editor</title>

    <subtitle>User Manual</subtitle>

    <authorgroup>
      <author>
        <personname>Together Teamsolutions Co., Ltd. in Thailand.</personname>
      </author>
    </authorgroup>

    <!--    
    <publisher>
      <publishername>to be determined</publishername>

      <address><city>some City</city>xxxx</address>
    </publisher>

    <printhistory>
      <para>xxxx 2007: First Edition</para>
    </printhistory>

    <isbn>xxxxxx-xxx-x</isbn>

    <releaseinfo>Version 2.1-2</releaseinfo>

    <pubdate>2007-xx-xx</pubdate>
-->

    <copyright>
      <year>2011</year>

      <holder>Together Teamsolutions Co., Ltd. in Thailand. Permission is
      granted to copy, distribute and/or modify this document under the terms
      of the GNU Free Documentation License, Version 1.3 or any later version
      published by the Free Software Foundation; with the Invariant Sections
      being <remark>"Introduction", "Installation Guide", "User Interface",
      "Dialogs and Property Panels", "XPDL Elements","XPDL from Scratch",
      "Configuration", "Customization", "Extended Attribute Reference", "Build
      Guide", "Release Notes", and with the Front-Cover Texts. A copy of the
      license is included in the section entitled "GNU Free Documentation
      License"</remark>.</holder>
    </copyright>

    <legalnotice>
      <para>Together Teamsolutions Co., Ltd DISCLAIMS ALL WARRANTIES, EXPRESS
      OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF
      THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED
      WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR
      PURPOSE.</para>

      <para>While every precaution has been taken in the preparation of this
      book, the publisher assumes no responsibility for errors or omissions,
      or for damages resulting from the use of the information contained in
      this book.</para>

      <para>The Together logos are registered trademarks of GrECo
      International Holding AG in Austria / Europe. Java and all Java-based
      trademarks or logos are trademarks or registered trademarks of Oracle
      Corporation, in the United States States and other countries. Together
      Teamsolutions Co., Ltd. is independent of Oracle Corporation.</para>

      <para>In this document parts of the original XPDL 2.1 specification -
      <link
      xlink:href="http://www.wfmc.org/Download-document/WFMC-TC-1025-Oct-10-08-A-Final-XPDL-2.1-Specification.html"
      xmlns:xlink="http://www.w3.org/1999/xlink">WfMC XPDL 2.1
      Specification</link> are used. The Workflow Management Coalition and its
      members are the owners of the copyright of this specification.</para>
    </legalnotice>
  </info>

  <toc/>

  <preface>
    <title>Preface</title>

    <para><link xlink:href="http://www.together.at/prod/workflow/twe"
    xmlns:xlink="http://www.w3.org/1999/xlink">Together Workflow Editor</link>
    is a visual tool for creating, managing and reviewing process definitions
    stored in WfMC XPDL syntax, using BPMN graphical notation.</para>

    <para>Put simple, Together Workflow Editor allows you to quickly create or
    view XPDL workflow definition files, check and store them for the further
    use. Once a definition is proven valid, it can be referenced by new
    definitions, thus shortening the time and effort needed to define workflow
    processes or imported into workflow engines capable of XPDL for
    execution.</para>

    <sect1>
      <title>About Workflow</title>

      <para>From the <link xlink:href="http://www.wfmc.org"
      xmlns:xlink="http://www.w3.org/1999/xlink">Workflow Management Coalition
      website</link>:</para>

      <sect2>
        <title>Why Should a Business Use Workflow ?</title>

        <para>The Evolution of Workflow Workflow Management consists of the
        automation of business procedures or "workflows" during which
        documents, information or tasks are passed from one participant to
        another in a way that is governed by rules or procedures. Workflow
        software products, like other software technologies, have evolved from
        diverse origins. While some offerings have been developed as pure
        workflow software, many have evolved from image management systems,
        document management systems, relational or object database systems,
        and electronic mail systems.</para>
      </sect2>

      <sect2>
        <title>The Key Benefits</title>

        <itemizedlist>
          <listitem>
            <para>Improved efficiency - automation of many business processes
            results in the elimination of many unnecessary steps</para>
          </listitem>

          <listitem>
            <para>Better process control - improved management of business
            processes achieved through standardizing working methods and the
            availability of audit trails</para>
          </listitem>

          <listitem>
            <para>Improved customer service - consistency in the processes
            leads to greater predictability in levels of response to
            customers</para>
          </listitem>

          <listitem>
            <para>Flexibility - software control over processes enables their
            re-design in line with changing business needs</para>
          </listitem>

          <listitem>
            <para>Business process improvement - focus on business processes
            leads to their streamlining and simplification</para>
          </listitem>
        </itemizedlist>
      </sect2>
    </sect1>

    <sect1>
      <title>Open source</title>

      <para>Together Workflow Editor is available as an Open Source as the
      Enhydra JaWE (Java Workflow Editor) project under the GPL V3
      license.</para>

      <para><link xlink:href="http://sourceforge.net/projects/jawe"
      xmlns:xlink="http://www.w3.org/1999/xlink">Enhydra JaWE</link> is an
      <link xlink:href="http://www.opensource.org"
      xmlns:xlink="http://www.w3.org/1999/xlink">open source</link> project
      hosted by <link xlink:href="http://sourceforge.net"
      xmlns:xlink="http://www.w3.org/1999/xlink">SourceForge</link> , with the
      goal to deliver a production quality tool for graphical creation and
      viewing of WfMC XPDL process definitions. It results from real world
      projects in which the painful task of writing XML with general purpose
      XML editors had to be done again and again. This project is developed
      mainly by employees of <link xlink:href="http://www.together.at"
      xmlns:xlink="http://www.w3.org/1999/xlink">Together Teamsolutions Co.,
      Ltd</link> but also contains lots of input and improvements from the
      many users worldwide. Enhydra JaWE has a rapidly growing community and
      is also integrated in other open source projects like <link
      xlink:href="http://www.together.at/prod/server/tas"
      xmlns:xlink="http://www.w3.org/1999/xlink">Enhydra Server</link> - a
      professional Java and J2EE application server and <link
      xlink:href="http://sourceforge.net/projects/sharkwf"
      xmlns:xlink="http://www.w3.org/1999/xlink">Enhydra Shark</link> - the
      most flexible Open Source WfMC XPDL workflow engine available. Its use
      is <link xlink:href="http://www.gnu.org/philosophy/philosophy.html"
      xmlns:xlink="http://www.w3.org/1999/xlink">"Free as in Freedom"</link>
      and licensed under the <link xlink:href="http://www.gnu.org"
      xmlns:xlink="http://www.w3.org/1999/xlink">GNU </link><link
      xlink:href="http://www.gnu.org/copyleft/gpl.html"
      xmlns:xlink="http://www.w3.org/1999/xlink">GPL V3 license</link> defined
      by the <link xlink:href="http://www.gnu.org/fsf/fsf.html"
      xmlns:xlink="http://www.w3.org/1999/xlink">Free Software Foundation
      FSF</link>.</para>
    </sect1>

    <sect1>
      <title>Commercial Support</title>

      <para>Commercial support for Together Workflow Editor including
      development of project specific extensions or integration into other
      environments and projects is offered by Together Teamsolutions Co., Ltd
      located in Pattaya/Thailand/Asia (<link
      xlink:href="mailto: office@together.at"
      xmlns:xlink="http://www.w3.org/1999/xlink">mailto:
      office@together.at</link>).</para>
    </sect1>

    <sect1>
      <title>Why read this book ?</title>

      <para>This book is designed to be the clear, concise explanation and
      reference to Together Workflow Editor and its usage to graphically
      design and view WfMC XPDL process definitions.</para>

      <para>We hope to answer all the questions that you might have about all
      the various XPDL elements, their meanings and how to view and edit them
      with Together Workflow Editor. In particular, this covers the following
      subjects:<itemizedlist>
          <listitem>
            <para>The structure of the editor and its components.</para>
          </listitem>

          <listitem>
            <para>Editing dialogs and property panels for all XPDL
            elements.</para>
          </listitem>

          <listitem>
            <para>The relationship between XPDL and Together Workflow Editor
            including in depth explanantions of all XPDL elements.</para>
          </listitem>

          <listitem>
            <para>Information how to configure and customize Together Workflow
            Editor to your needs.</para>
          </listitem>

          <listitem>
            <para>A step by step introduction how to build XPDL definitions
            from scratch.</para>
          </listitem>
        </itemizedlist></para>
    </sect1>

    <sect1>
      <title>This book's audience</title>

      <para>We expect that most readers will have some familiarity with XML
      and workflow. Even if you just know what processes and activities are,
      you’re in good shape. Although this book provides basic introductions to
      key concepts, it may not suffice as your only tutorial about XPDL, XML,
      and workflow systems.</para>

      <para>Readers of this book are typically developers, workflow modelers
      and workflow system administrators.</para>

      <para>Some sections in this book describe certain environments like
      Microsoft Windows or Linux, although there is nothing about Together
      Workflow Editor that makes it unsuitable for the Mac or any other
      environment of your choice, as long as the defined software
      prerequisites (basically a JRE - Java Runtime Environment 1.7) are
      met.</para>
    </sect1>

    <sect1>
      <title>Organization of this book</title>

      <para>This book is divided into the following chapters:</para>

      <orderedlist>
        <listitem>
          <para>Introduction - What is Together Workflow Editor all about
          ?</para>
        </listitem>

        <listitem>
          <para>Installation Guide - How to install TWE</para>
        </listitem>

        <listitem>
          <para>User Interface - Explanation of the user interface components,
          menus and toolbars</para>
        </listitem>

        <listitem>
          <para>Dialogs and Property Panels - How to handle editor dialogs and
          XPDL property panels</para>
        </listitem>

        <listitem>
          <para>XPDL Elements - What they are, how they are related and how to
          create, edit and view them</para>
        </listitem>

        <listitem>
          <para>XPDL from Scratch - How to create your first XPDL file</para>
        </listitem>

        <listitem>
          <para>Configuration - How to tailor the Editor to your needs</para>
        </listitem>

        <listitem>
          <para>Customization - How to extend the Editor with additional
          functionality</para>
        </listitem>

        <listitem>
          <para>Extended Attribute Reference - XPDL Extended Attributes used
          by the Editor itself</para>
        </listitem>

        <listitem>
          <para>Build Guide - How to compile, build and package your own
          version of TWE from the source code</para>
        </listitem>

        <listitem>
          <para>Release notes - Notes about the major changes in each
          release</para>
        </listitem>
      </orderedlist>
    </sect1>

    <!--
    <sect1>
      <title>Conventions used in this book</title>

      <para>to be done</para>
    </sect1>
-->

    <sect1>
      <title>Request for Comments</title>

      <para>Please help us to improve future editions of this book by
      reporting any errors, inaccuracies, bugs, misleading or confusing
      statements, and plain old typos that you find. Email your findings to
      <link xlink:href="mailto:twe@together.at"
      xmlns:xlink="http://www.w3.org/1999/xlink">twe@togetherteam.co.th</link>.
      Thanks.</para>
    </sect1>

    <sect1>
      <title>Acknowledgements</title>

      <para>Many thanks go to the Swiss company <link
      xlink:href="http://www.abacus.ch"
      xmlns:xlink="http://www.w3.org/1999/xlink">ABACUS</link> for sponsoring
      major parts of the Together Workflow Editor Version 2.0
      development.</para>
    </sect1>

    <sect1>
      <title>About the Authors</title>

      <para>All authors are directly involved in one way or the other into the
      core development of Together Workflow Editor and Enhydra JaWE.</para>
    </sect1>

    <sect1>
      <title>Together Teamsolutions Co., Ltd</title>

      <para>Together Teamsolutions Co., Ltd has been active for many years
      primarily in the area of workflow, database and document management
      solutions.</para>

      <para>In addition to the organizational and implementation services,
      these application areas are supplemented by the operation of solutions
      (system rollout, 24x7 hotline, training) as well as product development,
      consulting services (business process analysis and modelling),
      publications and presentations. The associated topics needed for real
      world projects, e.g. imaging, OCR, host integration, archiving, computer
      telephone integration, digital signatures, backup, performance tuning,
      reporting, systems administration and hardware sizing are also covered,
      continuously maintained and expanded.</para>

      <para>Together Teamsolutions Co., Ltd is directly involved into the
      development of the XPDL standards specification.</para>
    </sect1>

    <sect1>
      <title>Enhydra</title>

      <para>The Enhydra.org project has its focus on E-Business middleware
      software. It now consists of many developers from over 50 countries.
      Many of these are able to offer commercial products, support, consulting
      and training.</para>

      <para>Enhydra.org started with Enhydra, the first and leading Open
      Source Java/XML application server. It was initially created by Lutris
      Technologies, Inc. which already disappeared from the market. After 4
      years in development it was open sourced on Janurary 15th 1999. They
      named the technology "Enhydra" after the California sea otter (Enhydra
      Lutris) - a popular inhabitant of Santa Cruz.</para>

      <para>Big parts of Enhydra development are now sponsored by Together
      Teamsolutions Co., Ltd located in Thailand. One of the outcomes of this
      sponsorship is Enhydra JaWE / Together Workflow Editor.</para>
    </sect1>

    <sect1>
      <title>JaWE</title>

      <para>JaWE - Java Workflow Editor - is the Open Source project of
      Together Workflow Editor. It is fully useable to edit, view and save
      complete XPDL files and licensed under GPL V3. Sources are publicly
      available in the projects CVS repository hosted at SourceForge</para>
    </sect1>

    <sect1>
      <title>WfMC - The Workflow Management Coalition</title>

      <para>Founded in August 1993, the Workflow Management Coalition (WfMC)
      is a non-profit, global organization of adopters, developers,
      consultants, analysts and university/research groups engaged in Business
      Process Management (BPM). Workflow or BPM is the technology that
      supports people to do their work. Resulting benefit is more efficiency,
      traceability,and quality improvements.</para>

      <para>WfMC creates and contributes to process related standards and
      educates on the benefits of process automation. WfMC is the only
      standards organization that concentrates purely on process. WfMC created
      XPDL and Wf-XML and had influence on BPMN, OMG workflow interface, ASAP
      and many other process related standards.</para>
    </sect1>

    <sect1>
      <title>JGraph</title>

      <para><link xlink:href="http://www.jgraph.com"
      xmlns:xlink="http://www.w3.org/1999/xlink">JGraph</link> is a powerful,
      easy-to-use, feature-rich and standards-compliant open source graph
      component available for Java. This library is used in Together Workflow
      Editor for graphical representation of process layouts (graph
      component).</para>
    </sect1>

    <sect1>
      <title>Docbook</title>

      <para>This book was written using <link
      xlink:href="http://www.docbook.org"
      xmlns:xlink="http://www.w3.org/1999/xlink">DocBook</link> and the <link
      xlink:href="http://www.xmlmind.com/xmleditor"
      xmlns:xlink="http://www.w3.org/1999/xlink">XML Mind XML
      Editor</link>.</para>
    </sect1>
  </preface>

  <chapter>
    <title>Introduction</title>

    <sect1>
      <title>What is Together Workflow Editor ?</title>

      <para>Together Workflow Editor (TWE) is a graphical editor for creating,
      editing, managing and reviewing WfMC XPDL process definition
      files.</para>

      <para>Workflow management is an evolving technology with lots of vendors
      claiming their approach is the best. We have chosen an approach which
      relies on WfMC and XPDL, thus supporting efforts to establish the
      standard. Together Workflow Editor is based on version 2.1 of the XPDL
      XML schema published by WfMC.</para>

      <para>The editor makes creating and editing XPDL easy. It represents all
      XPDL elements graphically through property panels and a graph component
      using BPMN graphical notation, to give the user a better understanding
      and an overview of the process definitions. Various functions help in
      finding specific activities, participants, applications, errors in the
      model, etc.</para>

      <para>The final output of the editor is an XML file (using the
      standardized WfMC XPDL schema) which can then be interpreted and
      executed by all WfMC XPDL compliant workflow engines.</para>

      <para>Together Workflow Editor accomplishes three main goals:</para>

      <itemizedlist>
        <listitem>
          <para>Reading of WfMC XPDL files (no matter from which tool they
          initially come from) from the filesystem or from the Wf-XML
          server</para>
        </listitem>

        <listitem>
          <para>Graphical representation and guided editing/modelling of
          process definitions</para>
        </listitem>

        <listitem>
          <para>Writing WfMC XPDL process definition XML files to the
          filesystem or to the Wf-XML server</para>
        </listitem>
      </itemizedlist>
    </sect1>

    <sect1>
      <title>History, Presence and Future Goals</title>

      <para>Before version 4.x, Together Workflow Editor was XPDL 1 editor
      that coverd the whole XPDL 1 Meta-Model. It was the best open-source
      (and we believe also the best of all) editor which allowed any vendor to
      create the XPDL 1 based workflow processes for their workflow engines.
      It was used by many vendors to (graphically) design their process
      definitions. Beside that, it was always the example for other
      implementors of such editors to see how to correctly interpret XPDL
      specification.</para>

      <para>Beside the core features that allows anyone to easily model XPDL
      processes, the flexibility and configurability of the editor, that
      includes configuration by only changing the existing component's
      properties, branding, and writting a special "configuration" modes for
      an editor, makes TWE powerful, and easily adjustable for the usage with
      any specific workflow engine.</para>

      <para>The version 4.x brings XPDL 2 and BPMN support. Although not fully
      covering XPDL 2 and BPMN, TWE now allows users to use the old powers of
      the editor and new BPMN notation which goal is to standardize graphical
      process representations, and thus making them uniform accross different
      editor tools, and understandable by the users knowing BPMN
      standard.</para>

      <para>The great feature of this new version is that it automatically
      converts XPDL 1 process definitions into XPDL 2 definitions, which
      minimizes the efforts of the migration to XPDL 2. Editor currently
      supports the sub-set of XPDL 2 specification necessary to conform to
      "simple" BPMN requirements.</para>

      <para>In the future, editor will support more and more of BPMN and XPDL
      2 specification, but we will always make our focus to first implement
      things that provide the modeler writting the workflow definitions for
      the real life human workflow scenarios.</para>
    </sect1>

    <sect1>
      <title>Useful links</title>

      <para><link xlink:href="http://www.wfmc.org"
      xmlns:xlink="http://www.w3.org/1999/xlink">The WfMC Workflow Management
      Coalition</link> promotes the advancement of process management
      technology standards and their use by the industry.</para>

      <para>The Java 2 SDK or Java 2 JRE can be downloaded from <link
      xlink:href="http://www.oracle.com/technetwork/java"
      xmlns:xlink="http://www.w3.org/1999/xlink">http://www.oracle.com/technetwork/java</link>
      .</para>

      <para>The Together Workflow Editor home page is located at <link
      xlink:href="http://www.together.at/prod/workflow/twe"
      xmlns:xlink="http://www.w3.org/1999/xlink">http://www.together.at/prod/workflow/twe</link>.</para>

      <para><link xlink:href="http://www.jgraph.com"
      xmlns:xlink="http://www.w3.org/1999/xlink">JGraph</link> is an
      open-source swing graph component used in Together Workflow
      Editor.</para>

      <para><link xlink:href="http://sourceforge.net/projects/sharkwf"
      xmlns:xlink="http://www.w3.org/1999/xlink">Enhydra Shark</link> - the
      most flexible Open Source WfMC XPDL workflow engine available</para>
    </sect1>
  </chapter>

  <chapter>
    <title>Installation guide</title>

    <sect1>
      <title>Getting the binaries</title>

      <para>The latest binary packages of Together Workflow Editor can be
      downloaded from <link
      xlink:href="http://sourceforge.net/projects/jawe/files"
      xmlns:xlink="http://www.w3.org/1999/xlink">SourceForge</link></para>
    </sect1>

    <sect1>
      <title>Prerequisites</title>

      <para>The only prerequisite to be able to run TWE on Windows or Linux
      system is Java JRE 1.7 installed on the machine.</para>
    </sect1>

    <sect1>
      <title>Installation</title>

      <para>There are several binary packages for Windows and Linux operating
      systems that can be used to install TWE.</para>

      <para>If TWE is installed on Windows using <emphasis
      role="bold">twe-x.y-z.exe</emphasis> package, just follow the setup
      procedure. The similar is with <emphasis
      role="bold">twe-x.y-z.noarch.rpm</emphasis> package on Linux.</para>

      <para>If TWE is installed from <emphasis
      role="bold">twe-x.y-z.zip</emphasis> or <emphasis
      role="bold">twe-x.y-z.tar.gz</emphasis> package on Windows/Linux
      respectivly, the packages should be un-packed, and in the root of the
      folder where they are unpacked, configure script should be executed. If
      JAVA_HOME environment variable exists, configure script can be executed
      without parameters, otherwise it should be called with a parameter
      specifying JAVA_HOME value, e.g:</para>

      <para><emphasis>configure -jdkhome c:\jdk1.7.0_03</emphasis></para>

      <para>This will create proper <emphasis role="bold">run</emphasis>
      script in bin directory that should be used to run TWE.</para>
    </sect1>

    <sect1>
      <title>Silent Installation</title>

      <para>TWE has possibility to silently install via <emphasis
      role="bold">twe-x.y-z.exe </emphasis>file. To do that, rename the
      <emphasis role="bold">twe-x.y-z.silent.properties.txt</emphasis> file
      comming with TWE distribution into <emphasis
      role="bold">twe-x.y-z.silent.properties</emphasis>, put it into the same
      folder with the <emphasis role="bold">twe-x.y-z.exe</emphasis>, and
      normally start the installation. During the installation, there will be
      no dialogs asking you to chose Java, place to install, etc. This
      information is taken from <emphasis
      role="bold">twe-x.y-z.silent.properties</emphasis> file. Here is the
      content of that file, with the properties you should modify to customize
      your installation:</para>

      <programlisting># Where to install Together Workflow Editor (default value is C:\Program Files\twe-x.y-z)
inst.dir=C:\Program Files\twe-4.5-1

# Path to local java installation (obligated - has no default value)
jdk.dir=C:\Program Files\Java\jdk1.7.0_03

# Startup menu name. (default value - Together Workflow Editor x.y-z)
startup.menu.name=Together Workflow Editor 4.5-1

# Create quick launch icon (on/off)
create.quick.launch.icon=on

# Create start menu entry (on/off)
create.start.menu.entry=on

# Create desktop icon (on/off)
create.desktop.icon=on
</programlisting>
    </sect1>
  </chapter>

  <chapter>
    <title>User Interface</title>

    <para>The Together Workflow Editor user interface consists of several
    parts. The order and the number of the displayed parts depend on the
    actually used configuration. This chapter explains the default
    configuration layout.</para>

    <para>Right below the title line of the editor window you will see the
    main menu, the main tool bar and the info bar. The rest of the window
    contains different components. The components are placed in the
    corresponding are depending on their type.</para>

    <para>Each component is responsible either for providing a different view
    of the WfMC XPDL elements, for displaying some additional information
    about XPDL elements (such as validation problems) or for displaying the
    result of some search.</para>

    <figure>
      <title>Default configuration layout</title>

      <mediaobject>
        <imageobject>
          <imagedata contentdepth="100%"
                     fileref="Images/editorTogWEComments.gif" scalefit="1"
                     width="100%"/>
        </imageobject>
      </mediaobject>
    </figure>

    <para>There are two areas on the left hand side: The upper area (marked as
    "Special Area") contains the <emphasis>Graph overview</emphasis>, the
    <emphasis>External package relations</emphasis> and the
    <emphasis>Transient package pool</emphasis> components. The lower area
    (marked as "Tree Area") contains the tree type components
    <emphasis>Navigator</emphasis> and <emphasis>Package
    tree</emphasis>.</para>

    <para>There are also two areas on the right hand side: The upper area
    (marked as "Main Area") contains the <emphasis>Graph</emphasis> and the
    <emphasis>XPDL View</emphasis> components. The lower area (marked as
    "Other Area") contains the <emphasis>Properties</emphasis>,
    <emphasis>Search</emphasis>, <emphasis>Problems</emphasis><emphasis>,
    WfXML</emphasis> and LDAP components.</para>

    <para>(NOTE: by right-clicking on the tab you are able to close some
    component's view or to move it from one area to another)</para>

    <para>See <xref linkend="togwecontroller.properties"/> for details about
    the configuration of the main frame.</para>

    <para>The rest of this chapter explains all these editor parts in
    detail.</para>

    <sect1>
      <title>Main menu</title>

      <para>This is the core of the Together Workflow Editor. All the actions
      needed for opening, creating and manipulating XPDL files and elements
      are here.</para>

      <para>The actions in the main menu are organized in the following
      groups:</para>

      <orderedlist>
        <listitem>
          <para>File</para>

          <informaltable frame="topbot">
            <tgroup cols="2">
              <tbody valign="middle">
                <row>
                  <entry align="left" valign="middle"><inlinemediaobject>
                      <imageobject>
                        <imagedata fileref="Images/new.gif" format="GIF"/>
                      </imageobject>
                    </inlinemediaobject> New</entry>

                  <entry><para>This action creates a new "empty" XPDL
                  package.</para></entry>
                </row>

                <row>
                  <entry align="left" valign="middle"><inlinemediaobject>
                      <imageobject>
                        <imagedata align="center" fileref="Images/open.gif"
                                   format="GIF"/>
                      </imageobject>
                    </inlinemediaobject> Open</entry>

                  <entry><para>This action opens an existing XPDL file. The
                  file is chosen through the standard file selection
                  dialog.</para></entry>
                </row>

                <row>
                  <entry align="left" valign="middle"><inlinemediaobject>
                      <imageobject>
                        <imagedata fileref="Images/reopen.gif" format="GIF"/>
                      </imageobject>
                    </inlinemediaobject> Reopen</entry>

                  <entry><para>This action reopens the currently edited XPDL
                  file.</para></entry>
                </row>

                <row>
                  <entry align="left" valign="middle"><inlinemediaobject>
                      <imageobject>
                        <imagedata fileref="Images/close.gif" format="GIF"/>
                      </imageobject>
                    </inlinemediaobject> Close</entry>

                  <entry><para>This action closes the currently open XPDL
                  package / file.</para></entry>
                </row>

                <row>
                  <entry align="left" valign="middle"><inlinemediaobject>
                      <imageobject>
                        <imagedata fileref="Images/save.gif" format="GIF"/>
                      </imageobject>
                    </inlinemediaobject> Save</entry>

                  <entry><para>This action saves the currently open XPDL
                  package to the file. If no file name has been specified for
                  the current package, the "Save As..." dialog will be
                  shown.</para></entry>
                </row>

                <row>
                  <entry align="left" valign="middle"><inlinemediaobject>
                      <imageobject>
                        <imagedata fileref="Images/saveas.gif" format="GIF"
                                   valign="middle"/>
                      </imageobject>
                    </inlinemediaobject> Save As...</entry>

                  <entry><para>This action saves the currently open XPDL
                  package into a file with a new filename and location
                  specified through a standard file dialog.</para></entry>
                </row>

                <row>
                  <entry align="left" valign="middle">Recent Files</entry>

                  <entry><para>This action opens a sub-menu with a listing of
                  recently used files which can be re-opened.</para></entry>
                </row>

                <row>
                  <entry align="left" valign="middle"><inlinemediaobject>
                      <imageobject>
                        <imagedata fileref="Images/exit.gif" format="GIF"
                                   valign="middle"/>
                      </imageobject>
                    </inlinemediaobject> Exit</entry>

                  <entry><para>This action exits the editor applciation. An
                  appropriate dialog will appear if the current work hasn't
                  been saved into a file.</para></entry>
                </row>
              </tbody>
            </tgroup>
          </informaltable>
        </listitem>

        <listitem>
          <para>Edit</para>

          <informaltable frame="topbot">
            <tgroup cols="2">
              <tbody valign="middle">
                <row>
                  <entry align="left" valign="middle"><inlinemediaobject>
                      <imageobject>
                        <imagedata fileref="Images/nav_left_blue.gif"
                                   format="GIF"/>
                      </imageobject>
                    </inlinemediaobject> Undo</entry>

                  <entry><para>This action reverts the last operation on the
                  XPDL model. Every operation / change performed to the XPDL
                  model can be undone step-by-step without any
                  limits.</para></entry>
                </row>

                <row>
                  <entry align="left" char=""
                  valign="middle"><inlinemediaobject>
                      <imageobject>
                        <imagedata align="center"
                                   fileref="Images/nav_right_blue.gif"
                                   format="GIF"/>
                      </imageobject>
                    </inlinemediaobject> Redo</entry>

                  <entry><para>This action repeats the previously undone XPDL
                  model operation.</para></entry>
                </row>

                <row>
                  <entry align="left" valign="middle"><inlinemediaobject>
                      <imageobject>
                        <imagedata fileref="Images/cut.gif" format="GIF"/>
                      </imageobject>
                    </inlinemediaobject> Cut</entry>

                  <entry><para>This action will remove the currently selected
                  elements from the model and place them into the clipboard,
                  allowing the user to paste them somewhere else. This
                  operation uses the internal clipboard of the
                  editor.</para><para>Any previous content of the internal
                  clipboard is discarded when this action is executed.
                  </para></entry>
                </row>

                <row>
                  <entry align="left" valign="middle"><inlinemediaobject>
                      <imageobject>
                        <imagedata fileref="Images/copy.gif" format="GIF"/>
                      </imageobject>
                    </inlinemediaobject> Copy</entry>

                  <entry><para>This action will copy the currently selected
                  elements into the clipboard, allowing the user to paste them
                  somewhere else. This operation uses the internal clipboard
                  of the editor.</para><para>Any previous content of the
                  internal clipboard is discarded when this action is
                  executed.</para></entry>
                </row>

                <row>
                  <entry align="left" valign="middle"><inlinemediaobject>
                      <imageobject>
                        <imagedata fileref="Images/paste.gif" format="GIF"
                                   valign="middle"/>
                      </imageobject>
                    </inlinemediaobject> Paste</entry>

                  <entry><para>This action will copy the elements from the
                  internal clipboard to the current location. It will only be
                  enabled if the internal clipboard currently contains at
                  least one element.</para></entry>
                </row>

                <row>
                  <entry align="left" valign="middle"><inlinemediaobject>
                      <imageobject>
                        <imagedata fileref="Images/delete.gif" format="GIF"
                                   valign="middle"/>
                      </imageobject>
                    </inlinemediaobject> Delete</entry>

                  <entry><para>This action removes the currently selected
                  elements from the XPDL model.</para></entry>
                </row>

                <row>
                  <entry align="left" valign="middle"><inlinemediaobject>
                      <imageobject>
                        <imagedata fileref="Images/properties.gif"
                                   format="GIF" valign="middle"/>
                      </imageobject>
                    </inlinemediaobject> Properties</entry>

                  <entry><para>This action opens a dialog to define properties
                  for the currently selected element.</para></entry>
                </row>
              </tbody>
            </tgroup>
          </informaltable>
        </listitem>

        <listitem>
          <para>Search</para>

          <informaltable frame="topbot">
            <tgroup cols="2">
              <tbody valign="middle">
                <row>
                  <entry align="left" valign="middle"><inlinemediaobject>
                      <imageobject>
                        <imagedata fileref="Images/search.gif" format="GIF"/>
                      </imageobject>
                    </inlinemediaobject> Search</entry>

                  <entry><para>This action finds XPDL elements based on
                  certain search criteria.</para></entry>
                </row>

                <row>
                  <entry align="left" valign="middle"><inlinemediaobject>
                      <imageobject>
                        <imagedata fileref="Images/references.gif"
                                   format="GIF" valign="middle"/>
                      </imageobject>
                    </inlinemediaobject> References</entry>

                  <entry><para>This action seaches for all elements in the
                  XPDL model which refer to the currently selected
                  element.</para></entry>
                </row>
              </tbody>
            </tgroup>
          </informaltable>
        </listitem>

        <listitem>
          <para>Package</para>

          <informaltable frame="topbot">
            <tgroup cols="2">
              <tbody valign="middle">
                <row>
                  <entry align="left" valign="middle"><inlinemediaobject>
                      <imageobject>
                        <imagedata fileref="Images/packagecheck.gif"
                                   format="GIF"/>
                      </imageobject>
                    </inlinemediaobject> Check validity</entry>

                  <entry><para>This action runs a check on the XPDL model's
                  validity based on the WfMC specification and produces a
                  problem list.</para></entry>
                </row>

                <row>
                  <entry align="left" valign="middle"><inlinemediaobject>
                      <imageobject>
                        <imagedata fileref="Images/designtimevalidation-start.gif"
                                   format="GIF"/>
                      </imageobject>
                    </inlinemediaobject> Turn-on design time
                  validation</entry>

                  <entry><para>This action turns-on a design time XPDL
                  validation (XPDL model is then checked for validity after
                  any insert/update action)</para></entry>
                </row>

                <row>
                  <entry align="left" valign="middle"><inlinemediaobject>
                      <imageobject>
                        <imagedata fileref="Images/designtimevalidation-stop.gif"
                                   format="GIF"/>
                      </imageobject>
                    </inlinemediaobject> Turn-off design time
                  validation</entry>

                  <entry><para>This action turns-off a design time XPDL
                  validation (XPDL model is checked for validity only when
                  user presses "Check validity" button)</para></entry>
                </row>

                <row>
                  <entry align="left" char=""
                  valign="middle"><inlinemediaobject>
                      <imageobject>
                        <imagedata align="center"
                                   fileref="Images/processnew.gif"
                                   format="GIF"/>
                      </imageobject>
                    </inlinemediaobject> Insert new process</entry>

                  <entry><para>This action inserts a new workflow process
                  definition into the XPDL package.</para></entry>
                </row>

                <row>
                  <entry align="left" valign="middle"><inlinemediaobject>
                      <imageobject>
                        <imagedata fileref="Images/namespaces.gif"
                                   format="GIF"/>
                      </imageobject>
                    </inlinemediaobject> Namespaces</entry>

                  <entry><para>This action shows a dialog for handling the
                  package's namespaces.</para></entry>
                </row>

                <row>
                  <entry align="left" valign="middle"><inlinemediaobject>
                      <imageobject>
                        <imagedata fileref="Images/packageproperties.gif"
                                   format="GIF"/>
                      </imageobject>
                    </inlinemediaobject>Package properties</entry>

                  <entry><para>This action opens a dialog for editing the XPDL
                  package properties.</para></entry>
                </row>

                <row>
                  <entry align="left" valign="middle"><inlinemediaobject>
                      <imageobject>
                        <imagedata fileref="Images/processes.gif" format="GIF"
                                   valign="middle"/>
                      </imageobject>
                    </inlinemediaobject> Processes</entry>

                  <entry><para>This action shows dialog with list of the
                  workflow process definitions defined in selected XPDL
                  package.</para></entry>
                </row>

                <row>
                  <entry align="left" valign="middle"><inlinemediaobject>
                      <imageobject>
                        <imagedata fileref="Images/externalpackages.gif"
                                   format="GIF" valign="middle"/>
                      </imageobject>
                    </inlinemediaobject> External packages</entry>

                  <entry><para>This action opens a dialog to handle references
                  to external XPDL packages.</para></entry>
                </row>

                <row>
                  <entry align="left" valign="middle"><inlinemediaobject>
                      <imageobject>
                        <imagedata fileref="Images/externalpackagesadd.gif"
                                   format="GIF" valign="middle"/>
                      </imageobject>
                    </inlinemediaobject> Add external package</entry>

                  <entry><para>This action opens a dialog to import /
                  reference an external package.</para></entry>
                </row>

                <row>
                  <entry align="left" valign="middle"><inlinemediaobject>
                      <imageobject>
                        <imagedata fileref="Images/externalpackagesremove.gif"
                                   format="GIF" valign="middle"/>
                      </imageobject>
                    </inlinemediaobject> Remove external package</entry>

                  <entry><para>This action removes an external package
                  reference.</para></entry>
                </row>

                <row>
                  <entry align="left" valign="middle"><inlinemediaobject>
                      <imageobject>
                        <imagedata fileref="Images/typedeclarations.gif"
                                   format="GIF" valign="middle"/>
                      </imageobject>
                    </inlinemediaobject> Type declarations</entry>

                  <entry><para>This action shows a dialog to manage type
                  declarations.</para></entry>
                </row>

                <row>
                  <entry align="left" valign="middle"><inlinemediaobject>
                      <imageobject>
                        <imagedata fileref="Images/packageparticipants.gif"
                                   format="GIF" valign="middle"/>
                      </imageobject>
                    </inlinemediaobject> Participants</entry>

                  <entry><para>This action shows a dialog to managing
                  participants.</para></entry>
                </row>

                <row>
                  <entry align="left" valign="middle"><inlinemediaobject>
                      <imageobject>
                        <imagedata fileref="Images/packageapplications.gif"
                                   format="GIF" valign="middle"/>
                      </imageobject>
                    </inlinemediaobject> Applications</entry>

                  <entry><para>This action shows a dialog to manage
                  applications.</para></entry>
                </row>

                <row>
                  <entry align="left" valign="middle"><inlinemediaobject>
                      <imageobject>
                        <imagedata fileref="Images/packageworkflowrelevantdata.gif"
                                   format="GIF" valign="middle"/>
                      </imageobject>
                    </inlinemediaobject> Workflow variables</entry>

                  <entry><para>This action shows a dialog to manage
                  variables.</para></entry>
                </row>

                <row>
                  <entry align="left" valign="middle"><inlinemediaobject>
                      <imageobject>
                        <imagedata fileref="Images/referred_document.gif"
                                   format="GIF" valign="middle"/>
                      </imageobject>
                    </inlinemediaobject> Open referred document</entry>

                  <entry><para>This action opens the document attached to the
                  package.</para></entry>
                </row>
              </tbody>
            </tgroup>
          </informaltable>
        </listitem>

        <listitem>
          <para>Process</para>

          <informaltable frame="topbot">
            <tgroup cols="2">
              <tbody valign="middle">
                <row>
                  <entry align="left" char=""
                  valign="middle"><inlinemediaobject>
                      <imageobject>
                        <imagedata align="center"
                                   fileref="Images/processproperties.gif"
                                   format="GIF"/>
                      </imageobject>
                    </inlinemediaobject> Process properties</entry>

                  <entry><para>This action opens a dialog to edit the
                  properties of the selected process.</para></entry>
                </row>

                <row>
                  <entry align="left" valign="middle"><inlinemediaobject>
                      <imageobject>
                        <imagedata fileref="Images/processparticipants.gif"
                                   format="GIF"/>
                      </imageobject>
                    </inlinemediaobject> Participants</entry>

                  <entry><para>This action shows a dialog to manage
                  participants of the selected process.</para></entry>
                </row>

                <row>
                  <entry align="left" valign="middle"><inlinemediaobject>
                      <imageobject>
                        <imagedata fileref="Images/processapplications.gif"
                                   format="GIF"/>
                      </imageobject>
                    </inlinemediaobject> Applications</entry>

                  <entry><para>This action shows a dialog to manage
                  applications of the selected process.</para></entry>
                </row>

                <row>
                  <entry align="left" valign="middle"><inlinemediaobject>
                      <imageobject>
                        <imagedata fileref="Images/processworkflowrelevantdata.gif"
                                   format="GIF" valign="middle"/>
                      </imageobject>
                    </inlinemediaobject> Workflow variables</entry>

                  <entry><para>This action shows a dialog to manage variables
                  of the selected process.</para></entry>
                </row>

                <row>
                  <entry align="left" valign="middle"><inlinemediaobject>
                      <imageobject>
                        <imagedata fileref="Images/processformalparameters.gif"
                                   format="GIF" valign="middle"/>
                      </imageobject>
                    </inlinemediaobject> Formal parameters</entry>

                  <entry><para>This action shows a dialog to manage parameters
                  of the selected process.</para></entry>
                </row>

                <row>
                  <entry align="left" valign="middle"><inlinemediaobject>
                      <imageobject>
                        <imagedata fileref="Images/activitysets.gif"
                                   format="GIF" valign="middle"/>
                      </imageobject>
                    </inlinemediaobject> Activity sets</entry>

                  <entry><para>This action shows a list of all activity sets
                  contained within the selected process.</para></entry>
                </row>

                <row>
                  <entry align="left" valign="middle"><inlinemediaobject>
                      <imageobject>
                        <imagedata fileref="Images/activities.gif"
                                   format="GIF" valign="middle"/>
                      </imageobject>
                    </inlinemediaobject> Activities</entry>

                  <entry><para>This action shows a list of activities
                  contained within the selected process.</para></entry>
                </row>

                <row>
                  <entry align="left" valign="middle"><inlinemediaobject>
                      <imageobject>
                        <imagedata fileref="Images/transitions.gif"
                                   format="GIF" valign="middle"/>
                      </imageobject>
                    </inlinemediaobject> Transitions</entry>

                  <entry><para>This action shows a list of transitions
                  contained within the selected process.</para></entry>
                </row>
              </tbody>
            </tgroup>
          </informaltable>
        </listitem>

        <listitem>
          <para>External Packages</para>

          <informaltable frame="topbot">
            <tgroup cols="2">
              <tbody valign="middle">
                <row>
                  <entry align="left" valign="middle"><inlinemediaobject>
                      <imageobject>
                        <imagedata fileref="Images/externalparticipants.gif"
                                   format="GIF"/>
                      </imageobject>
                    </inlinemediaobject> External participants</entry>

                  <entry><para>This action shows a list of all participants
                  that are in the external packages.</para></entry>
                </row>

                <row>
                  <entry align="left" char=""
                  valign="middle"><inlinemediaobject>
                      <imageobject>
                        <imagedata align="center"
                                   fileref="Images/externalprocesses.gif"
                                   format="GIF"/>
                      </imageobject>
                    </inlinemediaobject> External processes</entry>

                  <entry><para>This action shows a list of all processes that
                  are in the external packages.</para></entry>
                </row>

                <row>
                  <entry align="left" valign="middle"><inlinemediaobject>
                      <imageobject>
                        <imagedata fileref="Images/externalapplications.gif"
                                   format="GIF"/>
                      </imageobject>
                    </inlinemediaobject> External applications</entry>

                  <entry><para>This action shows a list of all application
                  that are in the external packages.</para></entry>
                </row>

                <row>
                  <entry align="left" valign="middle"><inlinemediaobject>
                      <imageobject>
                        <imagedata fileref="Images/externaltypedeclarations.gif"
                                   format="GIF"/>
                      </imageobject>
                    </inlinemediaobject> External type declarations</entry>

                  <entry><para>This action shows a list of all type
                  declarations that are in the external
                  packages.</para></entry>
                </row>
              </tbody>
            </tgroup>
          </informaltable>
        </listitem>

        <listitem>
          <para>Settings</para>

          <informaltable frame="topbot">
            <tgroup cols="2">
              <tbody valign="middle">
                <row>
                  <entry align="left" valign="middle"><para>Language
                  </para></entry>

                  <entry><para>This menu shows the list of languages you can
                  use (currently English, German, French, Portuguese and
                  Serbian). The selection takes effect after you restart the
                  editor.</para></entry>
                </row>

                <row>
                  <entry align="left" valign="middle"><para>Configuration
                  </para></entry>

                  <entry><para>This menu shows the list of configurations that
                  you can use (currently default, shark and
                  samples-loopactivity configurations are provided). After you
                  select the configuration, the editor is being re-configured
                  to use this new configuration with all of its customizations
                  (special validation, restrictions, etc.)</para></entry>
                </row>
              </tbody>
            </tgroup>
          </informaltable>
        </listitem>

        <listitem>
          <para>Help</para>

          <informaltable frame="topbot">
            <tgroup cols="2">
              <tbody valign="middle">
                <row>
                  <entry align="left" char=""
                  valign="middle"><inlinemediaobject>
                      <imageobject>
                        <imagedata align="center" fileref="Images/manual.gif"
                                   format="GIF"/>
                      </imageobject>
                    </inlinemediaobject> Manual</entry>

                  <entry><para>This action opens the this User
                  Guide.</para></entry>
                </row>

                <row>
                  <entry align="left" valign="middle"><inlinemediaobject>
                      <imageobject>
                        <imagedata fileref="Images/twe16.png"/>
                      </imageobject>
                    </inlinemediaobject>About</entry>

                  <entry><para>This action shows the version, license and
                  other information about the editor. </para></entry>
                </row>
              </tbody>
            </tgroup>
          </informaltable>
        </listitem>
      </orderedlist>
    </sect1>

    <sect1>
      <title>Main tool bar</title>

      <para>As explained in the previous section, the main menu covers all
      actions needed for creating, viewing and editing XPDL definitions. The
      Main tool bar contains shortcuts for various actions of the main
      menu.</para>

      <figure>
        <title>Main tool bar</title>

        <mediaobject>
          <imageobject>
            <imagedata contentdepth="100%" fileref="Images/mainToolbar.jpg"
                       scalefit="1" width="100%"/>
          </imageobject>
        </mediaobject>
      </figure>

      <para>Main tool bar shortcuts are organized similar to the actions in
      the main menu. All actions are explained in the previous section.</para>

      <figure xml:id="mainToolbarOrganization">
        <title>Main tool bar shortcut groups</title>

        <mediaobject>
          <imageobject>
            <imagedata contentdepth="100%"
                       fileref="Images/mainToolbarComments.jpg" scalefit="1"
                       width="100%"/>
          </imageobject>
        </mediaobject>
      </figure>
    </sect1>

    <sect1>
      <title>Info bar</title>

      <para>The Info bar shows some basic information about the selected
      workflow elements. It displays the package name, the process name and
      the file/package that is being edited.</para>

      <figure>
        <title>Info bar</title>

        <mediaobject>
          <imageobject>
            <imagedata contentdepth="100%" fileref="Images/infoBar.gif"
                       scalefit="1" width="100%"/>
          </imageobject>
        </mediaobject>
      </figure>

      <para>The Info bar offers the possibility to select the desired package,
      process or file:</para>

      <itemizedlist>
        <listitem>
          <para>a click on the <inlinemediaobject>
              <imageobject>
                <imagedata fileref="Images/packageselect.gif"/>
              </imageobject>
            </inlinemediaobject> package icon offers a pop-up list of all
          packages (the main package you are editing and all the packages it
          references directly or indirectly).</para>
        </listitem>

        <listitem>
          <para>a click on the <inlinemediaobject>
              <imageobject>
                <imagedata fileref="Images/processselect.gif"/>
              </imageobject>
            </inlinemediaobject> process icon offers a pop-up list of all
          processes (within the currently selected package).</para>
        </listitem>

        <listitem>
          <para>a click on the <inlinemediaobject>
              <imageobject>
                <imagedata fileref="Images/fileselect.gif"/>
              </imageobject>
            </inlinemediaobject> file icon offers a pop-up list of recently
          opened files.</para>
        </listitem>
      </itemizedlist>
    </sect1>

    <sect1>
      <title>Graph Overview</title>

      <para>The Graph Overview is just what its name says - a graphical
      overview of the process and activity set graph. It shows the whole graph
      of the selected process or activity set in a way that you can see all
      the graph elements in the overview area at once.</para>

      <informaltable frame="none">
        <tgroup cols="2">
          <tbody valign="middle">
            <row>
              <entry align="center" colsep="0" valign="middle"><mediaobject>
                  <imageobject>
                    <imagedata align="center" contentdepth="100%"
                               fileref="Images/graphOverview.gif" scalefit="1"
                               valign="middle" width="100%"/>
                  </imageobject>
                </mediaobject></entry>

              <entry align="justify" valign="top"><para>This overview also
              provides an easy way to select elements by clicking on the
              elements or dragging a selection rectangle in the small
              graphics. All selections done in the overview are immdiately
              reflected in the main graph. This way even bigger portions of
              the graph can be selected at once without having to scroll
              through the main graph.</para><para>If the element that is
              currently not visible in the main Graph is selected in the Graph
              Overview, the main graph is automatically scrolling to show the
              selected element thus making graphical navigation in large
              process graphs very easy.</para></entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>

      <para>The Graph Overview can be hidden by clicking on the "Overview" tab
      with the right mouse button and selecting "Close". It can be shown again
      by selecting "Add Overview" in the context menu of the "External package
      relations" tab or the background of the "Special Area".</para>
    </sect1>

    <sect1>
      <title>External Package Relations</title>

      <para>The External Package Relations component gives you a graphical
      tree overview of the current package and all of its directly or
      indirectly referrenced external packages. So it provides you the
      information about the relations between packages starting at the current
      package.</para>

      <informaltable frame="none">
        <tgroup cols="2">
          <tbody valign="middle">
            <row>
              <entry align="center" colsep="0" valign="middle"><mediaobject>
                  <imageobject>
                    <imagedata align="center" contentdepth="100%"
                               fileref="Images/extPackageRelations.gif"
                               valign="middle" width="100%"/>
                  </imageobject>
                </mediaobject></entry>

              <entry align="justify" valign="middle"><para>The picture on the
              left hand side shows a package (called "Business Example") that
              references three other external packages: "Participant
              Repository", "Application Respository" and "Process Repository".
              The external package "Process Repository" again references (the
              same) two external packages: "Participant Repository" and
              "Application Repository".</para><para>The "Expand All" and
              "Collapse All" buttons on top of the tree can be used to show or
              hide the subtree.</para><para>The External Package Relaltions
              can be hidden by clicking on the "Overview" tab with the right
              mouse button and selecting "Close". It can be shown again by
              selecting "Add External package relations" in the context menu
              of the "Overview" tab or the background of the "Special
              Area".</para></entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>

      <para>The External Package relations background color can be changed
      through the extpkgrelations.properties file. (BackgroundColor =
      R=?,G=?,B=?)</para>

      <para>As with all other components you are also able to change the
      content of the toolbar and the order of the toolbar buttons.</para>
    </sect1>

    <sect1>
      <title>Transient Package Pool</title>

      <para>Transient packages are not related to any part of the WfMC XPDL
      specification but are a unique feature of Together Workflow
      Editor.</para>

      <para>Transient packages are always available to the editor user
      (independently of the main package that is currently being edited) and
      the editor user can always copy elements (such as commonly used
      Activities and Transition structures, Applicatons or Participants
      definitions, etc.) from the transiently referrenced package into the
      currently edited package. XPDL Packages imported as transient are
      neither being validated for errors nor are these transient referrences
      stored in the current XPDL file. They are just shown for your
      convenience during modelling work. If a transient package is referencing
      other packages the user must be aware that the referenced packages won't
      be imported automatically.</para>

      <informaltable frame="none">
        <tgroup cols="2">
          <tbody valign="middle">
            <row>
              <entry align="center" colsep="0" valign="middle"><mediaobject>
                  <imageobject>
                    <imagedata align="center" contentdepth="100%"
                               fileref="Images/transPkgPool.gif"
                               valign="middle" width="100%"/>
                  </imageobject>
                </mediaobject></entry>

              <entry align="left" valign="middle"><para>The Transient Package
              Pool displays all the transiently opened packages.
              </para><para>Using the buttons on top you are able to add new or
              remove existing transiently referrenced packages from the
              editor.</para><para>The Transient Package Pool can be hidden by
              clicking on the "Transient package pool" tab with the right
              mouse button and selecting "Close". It can be shown again by
              selecting "Add Transient package pool" in the context menu of
              the "Overview" tab or the background of the "Special
              Area".</para></entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>

      <para>You are able to pre-configure Together Workflow Editor to load
      certain XPDL packages in transient mode (see <xref
      linkend="togwebasic.properties"/>) at startup to have access to most
      commonly needed XPDL elements for copying them into the XPDL package you
      are editing. This feature is typically used for copying certain workflow
      design patterns from a pattern pool into processes. Predefined common
      workflow patterns can be found in the Together Workflow Editor
      installation directory "...\examples\valid\WorkflowPatterns\".</para>

      <para>You should be aware that there is a major difference in reusing
      XPDL elements from external packages and copying XPDL elements from
      other (transiently loaded) XPDL packages. Common subflows, application
      or participant definitions should normally be reused by modelling
      externally referenced packages instead of copying definitions
      redundantly into other packages.</para>

      <para>The Transient Package Pool background color can be changed through
      the transientpkgpool.properties file. (BackgroundColor =
      R=?,G=?,B=?)</para>

      <para>As with all other components you are also able to change the
      content of the toolbar and the order of the toolbar buttons.</para>
    </sect1>

    <sect1 xml:id="graphcomponent">
      <title>Graph</title>

      <para>The Graph is the main component of Together Workflow Editor. It
      displays the graph representing the selected process or activity set. It
      offers the possibility to insert new elements into the graph and to
      visually define the flow / logic of the workflow process you are
      modelling.</para>

      <figure>
        <title>Graph Panel</title>

        <mediaobject>
          <imageobject>
            <imagedata contentdepth="100%" fileref="Images/graphPanel.gif"
                       scalefit="1" width="100%"/>
          </imageobject>
        </mediaobject>
      </figure>

      <para>The Graph has its own toolbars with action Shortcuts to customize
      the view of the process, inserting new process elements or modify
      existing process elements.</para>

      <para>The toolbar on top of the graph component consists of the
      following actions:</para>

      <informaltable frame="topbot">
        <tgroup align="left" cols="2">
          <tbody valign="middle">
            <row>
              <entry align="left" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/saveasjpg.gif" format="GIF"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>This action saves the graphical view of the current
              graph into a JPG format file.</para></entry>
            </row>

            <row>
              <entry align="left" char="" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/saveassvg.gif" format="GIF"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>This action saves the graphical view of the current
              graph into a SVG format file.</para></entry>
            </row>

            <row>
              <entry align="left" char="" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata align="center" fileref="Images/saveaspdf.gif"
                               format="GIF"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>This action saves the graphical view of the current
              graph and process information into a PDF format
              file.</para></entry>
            </row>

            <row>
              <entry align="left" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/zoomin.gif" format="GIF"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>This action zooms into the graph.</para></entry>
            </row>

            <row>
              <entry align="left" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/actualsize.gif" format="GIF"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>This action displays graph in its actual
              size.</para></entry>
            </row>

            <row>
              <entry align="left" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/zoomout.gif" format="GIF"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>This action zooms out of the graph.</para></entry>
            </row>

            <row>
              <entry align="left" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/participantupleft.gif"
                               format="GIF"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>This action moves the selected participant up or
              left depending on the current participant orientation of the
              graph.</para></entry>
            </row>

            <row>
              <entry align="left" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/participantdownright.gif"
                               format="GIF"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>This action moves the selected participant down or
              right depending on the current participant orientation of the
              graph.</para></entry>
            </row>

            <row>
              <entry align="left" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/nav_left_red.gif" format="GIF"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>This action displays the part of the graph shown
              before the current part.</para></entry>
            </row>

            <row>
              <entry align="left" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/nav_right_red.gif" format="GIF"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>This action displays the part of the graph shown
              after the current part.</para></entry>
            </row>

            <row>
              <entry align="left" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/startend.gif" format="GIF"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>This action inserts the missing start and end
              events into the graph.</para></entry>
            </row>

            <row>
              <entry align="left" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/startend_remove.gif"
                               format="GIF"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>This action removes all the start and end events
              from the graph.</para></entry>
            </row>

            <row>
              <entry align="left" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/showtransitioncondition.gif"
                               format="GIF"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>This action makes text describing transition
              condition to be shown in the graph.</para></entry>
            </row>

            <row>
              <entry align="left" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/hidetransitioncondition.gif"
                               format="GIF"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>This action makes text describing transition
              condition to be hidden in the graph.</para></entry>
            </row>

            <row>
              <entry align="left" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/showartifacts.gif" format="GIF"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>This action shows artifacts (and associations) in
              the graph.</para></entry>
            </row>

            <row>
              <entry align="left" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/hideartifacts.gif" format="GIF"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>This action hides artifacts (and associations) from
              the graph.</para></entry>
            </row>

            <row>
              <entry align="left" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/process_rotate.gif"
                               format="GIF"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>This action changes the graph's swimlane
              orientation from left/right to top/bottom and vice
              versa.</para></entry>
            </row>

            <row>
              <entry align="left" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/graph_layout.gif" format="GIF"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>This action performs an automatic layout of the
              graph.</para></entry>
            </row>

            <row>
              <entry align="left" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata align="left" fileref="Images/activityset.gif"
                               format="GIF"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>This action inserts a new activity
              set.</para></entry>
            </row>

            <row>
              <entry align="left" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/lanesselect.gif" format="GIF"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>This action inserts a lane representing an existing
              participant into the graph.</para></entry>
            </row>

            <row>
              <entry align="left" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/activitysetselect.gif"
                               format="GIF"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>This action selects an existing activity
              set.</para></entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>

      <para>The toolbar below the one described above consists of the
      following actions:</para>

      <informaltable frame="topbot">
        <tgroup align="left" cols="2">
          <tbody valign="middle">
            <row>
              <entry align="left" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/select.gif" format="GIF"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>This action switches the mouse cursor to the
              selection mode.</para></entry>
            </row>

            <row>
              <entry align="left" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/lane.gif" format="GIF"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>This action creates a new participant (on the
              package level) and inserts a new lane representing this
              participant into the graph.</para></entry>
            </row>

            <row>
              <entry align="left" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/freetextlane.png"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>This action inserts a new "free text expression"
              lane into the graph.</para></entry>
            </row>

            <row>
              <entry align="left" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/commonexplane.png"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>This action inserts a "common expression lane" into
              the graph.</para></entry>
            </row>

            <row>
              <entry align="left" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/dataobject.gif" format="GIF"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>This action inserts a data object
              artifact.</para></entry>
            </row>

            <row>
              <entry align="left" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/annotation.gif" format="GIF"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>This action inserts a text annotation
              artifact.</para></entry>
            </row>

            <row>
              <entry align="left" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/start.gif" format="GIF"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>This action inserts a start event
              activity.</para></entry>
            </row>

            <row>
              <entry align="left" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/end.gif" format="GIF"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>This action inserts an end event
              activity.</para></entry>
            </row>

            <row>
              <entry align="left" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/genericactivity.gif"
                               format="GIF"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>This action inserts an activity without
              implementation (manual activity performed by a human) into the
              graph.</para></entry>
            </row>

            <row>
              <entry align="left" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/activitytool.gif" format="GIF"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>This action inserts a task-application activity
              into the graph</para></entry>
            </row>

            <row>
              <entry align="left" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/subflowactivity.gif"
                               format="GIF"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>This action inserts a subflow activity into the
              graph.</para></entry>
            </row>

            <row>
              <entry align="left" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/blockactivity.gif" format="GIF"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>This action inserts a block activity into the
              graph.</para></entry>
            </row>

            <row>
              <entry align="left" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/gatewayexclusive.gif"
                               format="GIF"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>This action inserts a exclusive gateway - route
              activity into the graph.</para></entry>
            </row>

            <row>
              <entry align="left" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/gatewayparallel.gif"
                               format="GIF"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>This action inserts a parallel gateway - route
              activity into the graph.</para></entry>
            </row>

            <row>
              <entry align="left" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/transition.gif" format="GIF"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>This action inserts a conditional transition into
              the graph.</para></entry>
            </row>

            <row>
              <entry align="left" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/unconditional.gif" format="GIF"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>This action inserts an unconditional transition
              into the graph.</para></entry>
            </row>

            <row>
              <entry align="left" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/transitionotherwise.gif"
                               format="GIF"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>This action inserts an otherwise transition into
              the graph.</para></entry>
            </row>

            <row>
              <entry align="left" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/transitionexception.gif"
                               format="GIF"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>This action inserts an exception transition into
              the graph.</para></entry>
            </row>

            <row>
              <entry align="left" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/transitiondefaultexception.gif"
                               format="GIF"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>This action inserts a default exception transition
              into the graph.</para></entry>
            </row>

            <row>
              <entry align="left" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/association.gif" format="GIF"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>This action inserts a directional association into
              the graph.</para></entry>
            </row>

            <row>
              <entry align="left" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/association_nodirection.gif"
                               format="GIF"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>This action inserts non-directional association
              into the graph.</para></entry>
            </row>

            <row>
              <entry align="left" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/association_bidirection.gif"
                               format="GIF"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>This action inserts bi-directional association into
              the graph.</para></entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>

      <para>The Graph provides all functions to handle lanes (representing
      participants), activities and transitions. All standard editor functions
      like insert, delete, move and select are supported.</para>

      <para>When new Workflow Process is created, TWE automatically creates a
      Pool for that process, and generates a new Graph representing this
      workflow process. This graph contains only a swimlane representing Pool.
      The first thing that need to be added/drawn are the lanes (a swimlanes
      representing the participant). When at least one (swim)lane is visible
      you can add activities, artifacts, transitions and associations into the
      graph.</para>

      <para>New elements are inserted into the graph in two steps. First
      select the button of choice in the graph toolbar to change the mouse
      cursor into the appropriate insert mode. Then click into the graph to
      insert the selected element. The mouse cursor will remain in the current
      insert mode until you click the right mouse button, press the ESC key on
      your keyboard or switch to another mode by selecting a different button
      in the graph toolbar.</para>

      <para>Inserting transitions and associations into the graph is somewhat
      different: Transitions' begin and end points must be activities, and
      associations' begin/end points must be activity and artifact. Clicking
      on the empty background of the graph while inserting a
      transition/assocation will insert a graphical break/routepoint. If
      insertion of a transition/association is started and the right mouse
      button or the ESC key is pressed, the current insert operation is
      cancelled and the mouse cursor stays in transition/association insert
      mode.</para>

      <para>Elements in the graph are selected by simply clicking on them with
      the left mouse button. You can select a group of elements by clicking
      the left mouse button on the empty background of the graph and dragging
      a rectangle around some elements or by using the SHIFT or CTRL key
      during left mouse clicks on the individual elements.</para>

      <para>To move elements to a new location just drag them with the left
      mouse button whereever you like.</para>

      <para>Double clicking on a graph element opens the property dialog for
      the element (except for block and subflow activities for which the
      appropriate graph will be opened).</para>

      <para>A right mouse click on an element in the graph will open the
      context popup menu of the element. The content of the context popup menu
      depends on which element was clicked on:</para>

      <figure>
        <title>Graph element context popup menus</title>

        <mediaobject>
          <imageobject>
            <imagedata contentdepth="100%" fileref="Images/graphPopup.jpg"
                       scalefit="1" width="100%"/>
          </imageobject>
        </mediaobject>
      </figure>

      <itemizedlist>
        <listitem>
          <para>The empty background represents the process itself and only
          the Paste action can be performed to copy elements from the internal
          clipboard to the selected location.</para>
        </listitem>

        <listitem>
          <para>Activities and Artifacts will show the standard edit
          functions. You can cut, copy, delete or edit properties of the
          selected activity/artifact, select related transitions/associations,
          or set color and size of the graphical object.</para>
        </listitem>

        <listitem>
          <para>Transitions and Associations will also allow cut/copy/paste
          actions but conditionally (if connecting activities/artifacts are
          selected). You can also add a new break point, remove an existing
          one, delete it, edit transition/association properties, change the
          transition/association style, execute action to select related
          activities/artifacts, or set color of graphical object</para>
        </listitem>

        <listitem>
          <para>Lanes can be removed, deleted, edited or repositioned in the
          graph. The color of the lane can be changed as well.</para>

          <para>Common expression lane (shown as special swimlane in the
          graph) can be associated with a new performer expression.</para>

          <para>Be aware that there is a fundamental difference between
          removing a lane and deleting it:</para>

          <itemizedlist>
            <listitem>
              <para>When lane is removed, it is removed from the selected
              process/activity set graph but it is still present in the XPDL
              model/package. However all the activities contained in the lane
              will be removed from the current graph.</para>
            </listitem>

            <listitem>
              <para>When lane is deleted, it is being deleted from the entire
              XPDL model/package but the activities contained in a lane won't
              be deleted from the model. They will be placed into the Graph's
              special lane called <emphasis>Free text expression
              </emphasis>lane.</para>
            </listitem>
          </itemizedlist>
        </listitem>
      </itemizedlist>

      <para>As mentioned, when the graph is empty (e.g. when a new process is
      created, and only Pool for this process is displayed) the first thing to
      be added/drawn is a lane representing the participant. When at least one
      lane is visible activities, artifacts, transitions and associations can
      be inserted into the graph.</para>

      <para>The available types of lanes are:<itemizedlist>
          <listitem>
            <para><inlinemediaobject>
                <imageobject>
                  <imagedata fileref="Images/lane.gif"/>
                </imageobject>
              </inlinemediaobject> Lane representing participant</para>
          </listitem>

          <listitem>
            <para><inlinemediaobject>
                <imageobject>
                  <imagedata fileref="Images/freetextlane.png"/>
                </imageobject>
              </inlinemediaobject> Free text expression lane</para>
          </listitem>

          <listitem>
            <para><inlinemediaobject>
                <imageobject>
                  <imagedata fileref="Images/commonexplane.png"/>
                </imageobject>
              </inlinemediaobject> Common expression lane</para>
          </listitem>
        </itemizedlist></para>

      <para>The available types of activities are:</para>

      <itemizedlist>
        <listitem>
          <para><inlinemediaobject>
              <imageobject>
                <imagedata fileref="Images/start.gif"/>
              </imageobject>
            </inlinemediaobject> Start event activity (explicitly specifies
          process start)</para>
        </listitem>

        <listitem>
          <para><inlinemediaobject>
              <imageobject>
                <imagedata fileref="Images/end.gif"/>
              </imageobject>
            </inlinemediaobject> End event activity (explicitly specifies
          process end)</para>
        </listitem>

        <listitem>
          <para><inlinemediaobject>
              <imageobject>
                <imagedata fileref="Images/genericactivity.gif"/>
              </imageobject>
            </inlinemediaobject> Normal activity (manual activity without
          implementation)</para>
        </listitem>

        <listitem>
          <para><inlinemediaobject>
              <imageobject>
                <imagedata fileref="Images/activitytool.gif"/>
              </imageobject>
            </inlinemediaobject> Task-application activity</para>
        </listitem>

        <listitem>
          <para><inlinemediaobject>
              <imageobject>
                <imagedata fileref="Images/subflowactivity.gif"/>
              </imageobject>
            </inlinemediaobject> Sub-flow activity</para>
        </listitem>

        <listitem>
          <para><inlinemediaobject>
              <imageobject>
                <imagedata fileref="Images/blockactivity.gif"/>
              </imageobject>
            </inlinemediaobject> Block activity</para>
        </listitem>

        <listitem>
          <para><inlinemediaobject>
              <imageobject>
                <imagedata fileref="Images/gatewayexclusive.gif"/>
              </imageobject>
            </inlinemediaobject> Exclusive gateway route activity</para>
        </listitem>

        <listitem>
          <para><inlinemediaobject>
              <imageobject>
                <imagedata fileref="Images/gatewayparallel.gif"/>
              </imageobject>
            </inlinemediaobject> Parallel gateway route activity</para>
        </listitem>
      </itemizedlist>

      <para>The available types of transitions are:<itemizedlist>
          <listitem>
            <para><inlinemediaobject>
                <imageobject>
                  <imagedata fileref="Images/transition.gif"/>
                </imageobject>
              </inlinemediaobject> Conditional transition</para>
          </listitem>

          <listitem>
            <para><inlinemediaobject>
                <imageobject>
                  <imagedata fileref="Images/unconditional.gif"/>
                </imageobject>
              </inlinemediaobject> Unconditional (uncontrolled flow)
            transition</para>
          </listitem>

          <listitem>
            <para><inlinemediaobject>
                <imageobject>
                  <imagedata fileref="Images/transitionotherwise.gif"/>
                </imageobject>
              </inlinemediaobject> Otherwise (default flow) transition</para>
          </listitem>

          <listitem>
            <para><inlinemediaobject>
                <imageobject>
                  <imagedata fileref="Images/transitionexception.gif"/>
                </imageobject>
              </inlinemediaobject> Exception transition</para>
          </listitem>

          <listitem>
            <para><inlinemediaobject>
                <imageobject>
                  <imagedata fileref="Images/transitiondefaultexception.gif"/>
                </imageobject>
              </inlinemediaobject> Default exception transition</para>
          </listitem>
        </itemizedlist></para>

      <para>There are three association types available:</para>

      <itemizedlist>
        <listitem>
          <para><inlinemediaobject>
              <imageobject>
                <imagedata fileref="Images/association.gif"/>
              </imageobject>
            </inlinemediaobject> directional association</para>
        </listitem>

        <listitem>
          <para><inlinemediaobject>
              <imageobject>
                <imagedata fileref="Images/association_nodirection.gif"/>
              </imageobject>
            </inlinemediaobject> non-directional association</para>
        </listitem>

        <listitem>
          <para><inlinemediaobject>
              <imageobject>
                <imagedata fileref="Images/association_bidirection.gif"/>
              </imageobject>
            </inlinemediaobject> bi-directional association</para>
        </listitem>
      </itemizedlist>

      <para>When inserting new lane into the graph using the toolbar buttons,
      the new participant on the package level is created, and its type is
      "Role". To change the participant type double click on the swimlane
      title to get its property panel.</para>

      <para>The lanes for already existing participant can be inserted by
      using the choice button <inlinemediaobject>
          <imageobject>
            <imagedata fileref="Images/lanesselect.gif"/>
          </imageobject>
        </inlinemediaobject> from the top of the graph component. The lane
      will be inserted at the bottom of the Pool (or at the bottom of the
      already selected lane - this will be nested lane in that case).</para>

      <para><emphasis role="bold">Free text expression lane</emphasis> and
      <emphasis role="bold">Common expression lane</emphasis> are not
      representing participants but it is a special visualization of performer
      expressions for activities.</para>

      <para>The Graph represents activity performers as swimlanes. When an
      activity is inserted or moved into a particular swimlane, it's performer
      will be updated to the participant represented by the swimlane. In the
      case of Common expression and Free text expression participants the
      activity's performer will be set to the expression defined as a property
      of the graph's common expression participant swimlane object. When the
      activity is inserted or moved into the free text expression participant
      any expression can be set for the activity performer field but by
      default performer expression won't be defined.</para>

      <para>Together Workflow Editor allows you to <emphasis
      role="bold">nest</emphasis> lanes thus making possible to visually
      represent organizational structure. To nest one lane into another,
      select the parent lane and then create new lane either by selecting the
      participant it will represent using the lane choice button
      <inlinemediaobject>
          <imageobject>
            <imagedata fileref="Images/lanesselect.gif"/>
          </imageobject>
        </inlinemediaobject>, or by selecting one of the lanes buttons
      (<inlinemediaobject>
          <imageobject>
            <imagedata fileref="Images/lane.gif"/>
          </imageobject>
        </inlinemediaobject>, <inlinemediaobject>
          <imageobject>
            <imagedata fileref="Images/freetextlane.png"/>
          </imageobject>
        </inlinemediaobject>, <inlinemediaobject>
          <imageobject>
            <imagedata fileref="Images/commonexplane.png"/>
          </imageobject>
        </inlinemediaobject> ) and pressing on the wanted parent lane. Here is
      a sample of the process with a Pool that contains nested lanes:</para>

      <figure>
        <title>Nested lanes sample</title>

        <mediaobject>
          <imageobject>
            <imagedata contentdepth="100%" fileref="Images/nested_lanes.jpg"
                       scalefit="1" width="100%"/>
          </imageobject>
        </mediaobject>
      </figure>

      <para><emphasis role="bold">Normal</emphasis> activity enables you to
      insert an activity that will be performed by a human (so called manual
      activity) - it will appear in the user's worklist.</para>

      <para><emphasis role="bold">Task-Applicationl</emphasis> activity
      enables the definition of applications that are required for the
      enactment engine to run in order to perform the activity.</para>

      <para><emphasis role="bold">Subflow</emphasis> activity is a type of
      activity whose implementation is another workflow process
      definition.</para>

      <para><emphasis role="bold">Block</emphasis> activity executes an
      ActivitySet (set of self-contained activities/transition maps). It is
      something like an embedded subflow process.</para>

      <para><emphasis role="bold">Route</emphasis> activity, in the forms of
      <emphasis role="bold">Exclusive</emphasis> and <emphasis
      role="bold">Parallel</emphasis> gateways, does not implement any action.
      It is used for synchronization and conditional branching only.</para>

      <para>A <emphasis role="bold">transition</emphasis> binds two activities
      but it can also be a circular transition from a certain activity to
      itself. A straight line with an arrow pointing to the target object
      represents the transition in the Graph. Depending on the transition
      type, it will have a different color or additional graphical
      descriptions according to BPMN specification. The toolbar offers several
      kinds of transitions: the one describing uncontrolled flow
      <inlinemediaobject>
          <imageobject>
            <imagedata fileref="Images/unconditional.gif"/>
          </imageobject>
        </inlinemediaobject>, the one describing conditional flow
      <inlinemediaobject>
          <imageobject>
            <imagedata fileref="Images/transition.gif"/>
          </imageobject>
        </inlinemediaobject>(a circle on the left will be drawn according to
      BPMN spec only in the case the source of the transition is not a
      gateway), the one describing default flow <inlinemediaobject>
          <imageobject>
            <imagedata fileref="Images/transitionotherwise.gif"/>
          </imageobject>
        </inlinemediaobject> (otherwise transition) and two kinds of exception
      transitions <inlinemediaobject>
          <imageobject>
            <imagedata fileref="Images/transitionexception.gif"/>
          </imageobject>
        </inlinemediaobject> and <inlinemediaobject>
          <imageobject>
            <imagedata fileref="Images/transitiondefaultexception.gif"/>
          </imageobject>
        </inlinemediaobject>(default exception). The type of a transition can
      be changed through its property panel.</para>

      <para>There are two types of <emphasis role="bold">artifacts</emphasis>
      that can be inserted into the graph, data object artifact
      <inlinemediaobject>
          <imageobject>
            <imagedata fileref="Images/dataobject.gif"/>
          </imageobject>
        </inlinemediaobject> and text annotation <inlinemediaobject>
          <imageobject>
            <imagedata fileref="Images/annotation.gif"/>
          </imageobject>
        </inlinemediaobject>. Artifacts describe e.g. document flow through
      the process, or make some comment that should be visible in the graph.
      The artifacts has to be connected to the activities using <emphasis
      role="bold">associations</emphasis>.</para>

      <para><emphasis role="bold">Associations</emphasis> are connecting an
      artifact with an activity. There are three types of associations offered
      by the TWE, directional <inlinemediaobject>
          <imageobject>
            <imagedata fileref="Images/association.gif"/>
          </imageobject>
        </inlinemediaobject>, non-directional <inlinemediaobject>
          <imageobject>
            <imagedata fileref="Images/association_nodirection.gif"/>
          </imageobject>
        </inlinemediaobject> and bi-directional <inlinemediaobject>
          <imageobject>
            <imagedata fileref="Images/association_bidirection.gif"/>
          </imageobject>
        </inlinemediaobject>. The type of association can be changed through
      its property panel.</para>

      <para>The Graph configuration is done through the<emphasis>
      togwegraphcontroller.properties</emphasis> file.</para>

      <para>The following parameters can be set:</para>

      <itemizedlist>
        <listitem>
          <para condition="demo-configuration">Graph.FontSizedemo</para>

          <para>This property will set font size used in graph (for activity
          name, etc.). Values: integer</para>

          <para>NOTE: The graph font size can be set independently of the font
          size for the rest of the editor.</para>
        </listitem>

        <listitem>
          <para condition="demo-configuration">Graph.GridSize</para>

          <para>The distance between position grid dots. Values:
          integer</para>
        </listitem>

        <listitem>
          <para condition="demo-configuration">Graph.ShadowWidth</para>

          <para>The width of the shadow when displaying activities in the
          graph. Values: integer</para>
        </listitem>

        <listitem>
          <para condition="demo-configuration">Graph.NameWrapping</para>

          <para>Defines if the text representing the names of activities and
          participants displayed in the graph will be wrapped if they are too
          long. Values: true/false</para>
        </listitem>

        <listitem>
          <para condition="demo-configuration">Graph.ShowGrid</para>

          <para>Defines if the graph position grid will be shown. Values:
          true/false</para>
        </listitem>

        <listitem>
          <para condition="demo-configuration">Graph.ShowIcon</para>

          <para>Defines if the graph elements should display their icons.
          Values: true/false</para>
        </listitem>

        <listitem>
          <para condition="demo-configuration">Graph.ShowShadow</para>

          <para>Defines if activity shadows should be shown. Values:
          true/false</para>
        </listitem>

        <listitem>
          <para
          condition="demo-configuration">Graph.ShowTransitionCondition</para>

          <para>Defines if transition conditions should be displayed in the
          graph. Values: true/false</para>
        </listitem>

        <listitem condition="demo-emptytext">
          <para>Graph.ShowTransitionNameForCondition</para>

          <para condition="demo-emptytext">Defines if the name of the
          transition should be shown instead of the condition of the
          transition. This setting only has effect if the
          Graph.ShowTransitionCondition parameter is set to true. Values:
          true/false</para>
        </listitem>

        <listitem condition="demo-emptytext">
          <para condition="demo-emptytext">Graph.DefaultTransitionStyle</para>

          <para>Defines the default transition style when inserting new
          transitions in the graph. Possible values: NO_ROUTING_ORTHOGONAL,
          NO_ROUTING_SPLINE, NO_ROUTING_BEZIER, SIMPLE_ROUTING_ORTHOGONAL,
          SIMPLE_ROUTING_SPLINE and SIMPLE_ROUTING_BEZIER</para>
        </listitem>

        <listitem condition="demo-emptytext">
          <para
          condition="demo-configuration">Graph.WrappingStyleWordStatus</para>

          <para>Defines if text wrapping should be based on whole words (if
          possible). This setting only has effect if the Graph.NameWrapping
          parameter is set to true. Values: true/false</para>
        </listitem>

        <listitem condition="demo-emptytext">
          <para condition="demo-configuration">Graph.HistorySize</para>

          <para>Defines the size of the previous/next panel history. If the
          parameter is set to a value less than zero, the history is
          unlimited. Values: integer</para>
        </listitem>

        <listitem condition="demo-emptytext">
          <para condition="demo-configuration">Graph.ActivityHeight</para>

          <para>The Graph's activity object height in pixels. Values:
          integer</para>
        </listitem>

        <listitem condition="demo-emptytext">
          <para condition="demo-configuration">Graph.ActivityWidth</para>

          <para>The Graph's activity object width in pixels. Values:
          integer</para>
        </listitem>

        <listitem condition="demo-emptytext">
          <para condition="demo-configuration">Graph.GatewayHeight</para>

          <para>The Graph's gateway activity (route activities) object height
          in pixels. Values: integer</para>
        </listitem>

        <listitem condition="demo-emptytext">
          <para condition="demo-configuration">Graph.GatewayWidth</para>

          <para>The Graph's gateway activity (route activities) object width
          in pixels. Values: integer</para>
        </listitem>

        <listitem condition="demo-emptytext">
          <para condition="demo-configuration">Graph.EventRadius</para>

          <para>The Graph's start/end event activity object radius in pixels.
          Values: integer</para>
        </listitem>

        <listitem condition="demo-emptytext">
          <para condition="demo-configuration">Graph.DataObjectHeight</para>

          <para>The Graph's "dataobject" artifact object height in pixels.
          Values: integer</para>
        </listitem>

        <listitem condition="demo-emptytext">
          <para condition="demo-configuration">Graph.DataObjectWidth</para>

          <para>The Graph's "dataobject" artifact object width in pixels.
          Values: integer</para>
        </listitem>

        <listitem condition="demo-emptytext">
          <para condition="demo-configuration">Graph.LaneMinHeight</para>

          <para>The lane's graph object minimum height in pixels. Values:
          integer</para>
        </listitem>

        <listitem condition="demo-emptytext">
          <para condition="demo-configuration">Graph.LaneMinWidth</para>

          <para>The lane's graph object minimum width in pixels. Values:
          integer</para>
        </listitem>

        <listitem condition="demo-emptytext">
          <para condition="demo-configuration">Graph.LaneNameWidth</para>

          <para>Defines how much space (in pixels) of the swimlane should be
          reserved to display name. Values: integer</para>
        </listitem>

        <listitem condition="demo-emptytext">
          <para
          condition="demo-configuration">Graph.ActivitySelectedColor</para>

          <para>The color for selected activities. Values: R=?,G=?,B=? (where
          ? represents an integer from 0 to 255).</para>
        </listitem>

        <listitem condition="demo-emptytext">
          <para condition="demo-configuration">Graph.BackgroundColor</para>

          <para>The Graph background color. Values: R=?,G=?,B=? (where ?
          represents an integer from 0 to 255).</para>
        </listitem>

        <listitem condition="demo-emptytext">
          <para condition="demo-configuration">Graph.HandleColor</para>

          <para>The Color of break/routepoints of transitions (they are only
          visible when a transition is selected). Values: R=?,G=?,B=? (where ?
          represents an integer from 0 to 255).</para>
        </listitem>

        <listitem condition="demo-emptytext">
          <para condition="demo-configuration">Graph.GridColor</para>

          <para>The color for position grid dots. Values: R=?,G=?,B=? (where ?
          represents an integer from 0 to 255).</para>
        </listitem>

        <listitem condition="demo-emptytext">
          <para condition="demo-configuration">Graph.MarqueeColor</para>

          <para>The color for marquee rectangles. Values: R=?,G=?,B=? (where ?
          represents an integer from 0 to 255).</para>
        </listitem>

        <listitem condition="demo-emptytext">
          <para
          condition="demo-configuration">Graph.ParticipantBorderColor</para>

          <para>The color for participant's swimlane borders. Values:
          R=?,G=?,B=? (where ? represents an integer from 0 to 255).</para>
        </listitem>

        <listitem condition="demo-emptytext">
          <para
          condition="demo-configuration">Graph.LaneCommonExpressionColor</para>

          <para>The color for the common expression lane. Values: R=?,G=?,B=?
          (where ? represents an integer from 0 to 255).</para>
        </listitem>

        <listitem condition="demo-emptytext">
          <para
          condition="demo-configuration">Graph.LaneFreeTextExpressionColor</para>

          <para>The color for the free text expression lane. Values:
          R=?,G=?,B=? (where ? represents an integer from 0 to 255).</para>
        </listitem>

        <listitem condition="demo-emptytext">
          <para condition="demo-configuration">Graph.TextColor</para>

          <para>The color of the Graph text. Values: R=?,G=?,B=? (where ?
          represents an integer from 0 to 255).</para>
        </listitem>

        <listitem condition="demo-emptytext">
          <para condition="demo-configuration">Graph.StartEventColor</para>

          <para>Start event activities color. Values: R=?,G=?,B=? (where ?
          represents an integer from 0 to 255).</para>
        </listitem>

        <listitem condition="demo-emptytext">
          <para condition="demo-configuration">Graph.EndEventColor</para>

          <para>End event activities color. Values: R=?,G=?,B=? (where ?
          represents an integer from 0 to 255).</para>
        </listitem>
      </itemizedlist>

      <para>As with all other components, you are also able to change the
      content of the toolbar and the order of toolbar buttons.</para>
    </sect1>

    <sect1>
      <title>XPDL View</title>

      <para>The XPDL view provides an XPDL text view of the selected elements.
      It shows the structure of the selected XML element as it will be saved
      in the XPDL file. Every time the selection is changed or a selected
      element is being updated, the XPDL View is automatically updated
      also.</para>

      <para>If the selected element is a whole XPDL package then the XPDL View
      displays the whole package definition in the exact form as it will be
      written into the XPDL file (when the document is saved). Otherwise the
      XPDL View will display the part of the XPDL which holds the definition
      of the selected element. So, when a particular process is selected, the
      XPDL view displays the process definition part of XPDL as it will be
      written to the XPDL file, etc.</para>

      <para>The following examples show different XPDL Views depending on the
      element type that is currently selected:</para>

      <figure>
        <title>XPDL View of a Package</title>

        <mediaobject>
          <imageobject>
            <imagedata contentdepth="100%"
                       fileref="Images/xpdlViewPackage.gif" scalefit="1"
                       width="100%"/>
          </imageobject>
        </mediaobject>
      </figure>

      <figure>
        <title>XPDL View of a Process</title>

        <mediaobject>
          <imageobject>
            <imagedata contentdepth="100%"
                       fileref="Images/xpdlViewProcess.gif" scalefit="1"
                       width="100%"/>
          </imageobject>
        </mediaobject>
      </figure>

      <figure>
        <title>XPDL View of an Activity</title>

        <mediaobject>
          <imageobject>
            <imagedata contentdepth="100%"
                       fileref="Images/xpdlViewActivity.gif" scalefit="1"
                       width="100%"/>
          </imageobject>
        </mediaobject>
      </figure>

      <para>The XPDL view also offers a search box for finding desired text
      fragments in the currently shown XPDL fragment.</para>
    </sect1>

    <sect1>
      <title>Navigator</title>

      <informaltable frame="none">
        <tgroup cols="2">
          <tbody valign="middle">
            <row>
              <entry align="center" colsep="0" valign="middle"><mediaobject>
                  <imageobject>
                    <imagedata align="center" contentdepth="100%"
                               fileref="Images/navigator.gif" valign="middle"
                               width="100%"/>
                  </imageobject>
                </mediaobject></entry>

              <entry align="left" valign="middle">The Navigator displays a
              hierarchical view of the XPDL model. It shows packages,
              processes, activity sets and activities. It is also very useful
              for finding XPDL elements which are not valid according to the
              XPDL specification. These elements will be marked with error
              (<inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/error_icon.gif"/>
                  </imageobject>
                </inlinemediaobject>) or warning (<inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/warrning_icon.gif"/>
                  </imageobject>
                </inlinemediaobject>) icons.<para>The Navigator makes
              navigation through the XPDL model easier and offers a good way
              of element selection. It can also ease editing of XPDL by
              opening property dialogs directly from the elements in the
              tree.</para><para>The available actions in the Navigator toolbar
              are <emphasis>expand all</emphasis> and <emphasis>collapse
              all</emphasis>. When expand all is selected the hierarchical
              tree will be expanded so that every element is visible. When
              collapse all is performed, only top element(s) will be made
              visible.</para><para>A right mouse click on tree will display a
              popup menu. Besides the standard edit functions (cut, copy,
              paste, delete and edit properties) there are Expand all,
              Collapse all, Duplicate and References. </para><para>Expand all
              and Collapse all will act like the actions on the toolbar with
              the selected element used as the root element of the action. So
              Expand all will make all children of the selected element
              visible. </para><para>Duplicate will create a copy of the
              selected element. The only difference will be in the element id
              and name attributes (if they exist) which will get new values.
              </para><para>The References action will search for references to
              the selected element in the whole XPDL model.</para></entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>

      <para>The background and the selection colors can be set through the
      packagenavigator.properties file.</para>

      <para condition="demo-emptytext">BackgroundColor. Values: R=?,G=?,B=?
      (where ? represents an integer from 0 to 255).</para>

      <para condition="demo-emptytext">and</para>

      <para>SelectionColor. Values: R=?,G=?,B=? (where ? represents an integer
      from 0 to 255).</para>

      <para>As with all other components you are also able to change the
      content of the toolbar and the order of toolbar buttons.</para>
    </sect1>

    <sect1>
      <title>Package tree</title>

      <para>Similar to the Navigator the Package tree also displays a
      hierarchical view of the XPDL model. The difference between these two
      trees is the level of details. While the Navigator just shows packages,
      processes, activity sets and activities, The Package tree shows almost
      every element of the XPDL model.</para>

      <para>The Package tree offers the most detailled hierarchical view of
      the XPDL model. It graphically displays the whole hierarchy tree of all
      XPDL elements of the model you are editing, Id attributes, names, the
      package header, etc.</para>

      <informaltable frame="none">
        <tgroup cols="2">
          <tbody valign="middle">
            <row>
              <entry align="left" colsep="0" valign="middle"><mediaobject>
                  <imageobject>
                    <imagedata contentdepth="100%"
                               fileref="Images/packageTree.gif" width="100%"/>
                  </imageobject>
                </mediaobject></entry>

              <entry align="left" valign="middle"><para>The Package tree makes
              navigation through the XPDL elements easierIt can also ease
              editing of XPDL by opening property dialogs directly from the
              elements in the tree.</para><para>The available actions in the
              Package tree toolbar are <emphasis>expand all</emphasis> and
              <emphasis>collapse all</emphasis>. When expand all is selected
              the hierarchical tree will be expanded so that every element is
              visible. When collapse all is performed, only top element(s)
              will be made visible.</para><para>A right mouse click on tree
              will display a popup menu. Besides the standard edit functions
              (cut, copy, paste, delete and edit properties) there are Expand
              all, Collapse all, Duplicate and References.</para><para>Expand
              all and Collapse all will act like the actions on the toolbar
              with the selected element used as the root element of the
              action. So Expand all will make all children of the selected
              element visible.</para><para>Duplicate will create a copy of the
              selected element. The only difference will be in the element id
              and name attributes (if they exist) which will get new
              values.</para><para>The References action will search for
              references to the selected element in the whole XPDL
              model.</para></entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>

      <para>The Package tree component can be configured through
      detailpackagenavigator.properties file.</para>

      <itemizedlist condition="demo-emptytext">
        <listitem>
          <para><emphasis>BackgroundColor </emphasis> - background
          color</para>
        </listitem>

        <listitem>
          <para><emphasis>SelectionColor </emphasis> - selection color</para>
        </listitem>
      </itemizedlist>

      <para>You are able to customize the Package tree in order to hide some
      complex element's sub-elements. For example: To hide Activity's Id,
      Deadlines, Priority and Limit, you should set the property</para>

      <para condition="demo-configuration">HideSubElements.Activity</para>

      <para>to the following value:</para>

      <programlisting condition="demo-configuration">HideSubElements.Activity = Id Deadlines Priority Limit</programlisting>

      <para>You are also able to customize which elements of some collection
      shouldn't be displayed. For example: To hide extended attributes which
      name attribute is "SpecEA" or "EASpec", you can define the
      property:</para>

      <programlisting condition="demo-configuration">HideElements.ExtendedAttributes.Name = SpecEA EASpec</programlisting>

      <para>If you want to hide all elements use *. For example: To hide all
      extended attributes use:</para>

      <para
      condition="demo-configuration">HideElements.ExtendedAttributes.Name =
      *</para>

      <para>As with all other components you are also able to change the
      content of the toolbar and the order of toolbar buttons.</para>
    </sect1>

    <sect1>
      <title>Properties component</title>

      <para>Properties component displays selected XPDL element's
      properties.</para>

      <figure>
        <title>Properties component</title>

        <mediaobject>
          <imageobject>
            <imagedata contentdepth="100%"
                       fileref="Images/propertiesComponent.gif" scalefit="1"
                       width="100%"/>
          </imageobject>
        </mediaobject>
      </figure>

      <para>By selecting an element, this component automatically displays the
      most relevant data about that element (such as name, id etc.).</para>

      <para>Besides data, this component also offers a couple of
      operations:</para>

      <informaltable frame="topbot">
        <tgroup align="left" cols="2">
          <tbody valign="top">
            <row>
              <entry align="left" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/nav_left_red.gif" format="GIF"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>Displays properties of previously selected element
              (that element again becomes selected).</para></entry>
            </row>

            <row>
              <entry align="left" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/nav_right_red.gif" format="GIF"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>Displays properties of element selected after this
              element selection (the following element again becomes
              selected).</para></entry>
            </row>

            <row>
              <entry align="left" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata align="left" fileref="Images/revert.gif"
                               format="GIF"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>Discards new values of properties (reverts to the
              values applied with last 'apply' action call).</para></entry>
            </row>

            <row>
              <entry align="left" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/check.gif" format="GIF"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>Applies new values of properties.</para></entry>
            </row>

            <row>
              <entry align="left" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/properties.gif" format="GIF"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>Opens a dialog with a full set of the properties
              for the displayed element.</para></entry>
            </row>

            <row>
              <entry align="left" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/parentelementpanel.gif"
                               format="GIF"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>Shows parent XPDL element panel.</para></entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>

      <para>This component can be configured through
      propertiespanelcomponent.properties file.</para>

      <itemizedlist condition="demo-emptytext">
        <listitem>
          <para><emphasis>InlinePanel.ShowModifiedWarning </emphasis> - if set
          to true, and if user wants to leave the property panel (by using
          show previous, show next, show parent element panel actions or
          actions for closing the dialog) of the element for which he
          previously changed some properties (within the panel), the user is
          asked if he wants to save the changes, leave the panel without
          saving changes or to cancel the action.</para>
        </listitem>

        <listitem>
          <para><emphasis>InlinePanel.DisplayTitle </emphasis> - if set to
          true, panel will display element name beneath toolbar.</para>
        </listitem>

        <listitem>
          <para><emphasis>HistorySize </emphasis> - defines the size of the
          previous/next panel history. If set to the value less than zero, the
          history is unlimited.</para>
        </listitem>

        <listitem>
          <para><emphasis>Toolbar.ActionOrder.defaultToolbar </emphasis> -
          defines the content and the order of the dialog's toolbar.</para>
        </listitem>
      </itemizedlist>

      <para>There are properties which can be adjusted to fine-tune the basic
      element property panels L&amp;F, such as alignment, TOP, BOTTOM, RIGHT,
      LEFT empty space in the panels, the width and height of the text boxes,
      etc. These are defined by the following set of the properties:</para>

      <programlisting condition="demo-configuration">XMLBasicPanel.RightAllignment=false
XMLBasicPanel.EmptyBorder.TOP=0
XMLBasicPanel.EmptyBorder.LEFT=3
XMLBasicPanel.EmptyBorder.BOTTOM=4
XMLBasicPanel.EmptyBorder.RIGHT=3
XMLBasicPanel.SimplePanelTextWidth=250
XMLBasicPanel.SimplePanelTextHeight=20</programlisting>

      <para>You are able to customize so called "group" panels, used to
      display some complex elements, in order to hide some complex element
      sub-elements. For example, in order not to display Activity's Id,
      Deadlines, Priority and Limit, you should set the property</para>

      <para
      condition="demo-configuration">HideSubElements.XMLGroupPanel.Activity</para>

      <para>to the following value:</para>

      <programlisting condition="demo-configuration">HideSubElements.XMLGroupPanel.Activity = Id Deadlines Priority Limit</programlisting>

      <para>You are able to customize which elements of some collection
      shouldn't be displayed within so called "table" panels. For example, if
      you don't want to display extended attributes which name attribute is
      "SpecEA" or "EASpec", you can define the property:</para>

      <programlisting condition="demo-configuration">HideElements.XMLTablePanel.ExtendedAttributes.Name = SpecEA EASpec</programlisting>

      <para>You are able to customize so called "table" panels, used to
      display some complex element collections, in order to specify which
      sub-elements will be shown as a table columns. For example, when
      displaying activities, you can specify to show Activity's Id, Name,
      Performer, Type, Start mode, Finish mode and Deadlines:</para>

      <para><emphasis>ShowColumns.XMLTablePanel.Activities = Id Name Performer
      Type StartMode FinishMode Deadlines</emphasis></para>

      <para>There is another customization possible for the so called "combo
      box" panel. Hence, you can define for which elements the combo box will
      be disabled (by default nothing is disabled). For example, if you want
      to disable combo boxes for displaying Activity's Performer and
      Transition's From and To properties, you should specify the
      following:</para>

      <programlisting condition="demo-configuration">XMLComboPanel.DisableCombo = Performer From To</programlisting>

      <para>As with all other components, you are also able to change the
      content of the toolbar, and the order of toolbar buttons.</para>
    </sect1>

    <sect1>
      <title>Search component</title>

      <para>Search component displays results of a
      <emphasis>References</emphasis> or <emphasis>Search </emphasis>action.
      It shows all elements that have a reference to the selected element in
      the first case, or all the elements found based on entered criteria in
      second case. Results are shown in hierarchical view.</para>

      <figure>
        <title>Search Results</title>

        <mediaobject>
          <imageobject>
            <imagedata contentdepth="100%"
                       fileref="Images/searchComponent.gif" scalefit="1"
                       width="100%"/>
          </imageobject>
        </mediaobject>
      </figure>

      <para>Besides search results, this component also offers a couple of
      operations:</para>

      <informaltable frame="topbot">
        <tgroup align="left" cols="2">
          <tbody valign="top">
            <row>
              <entry align="left" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/expandall.gif" format="GIF"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>Expands hierarchical results view.</para></entry>
            </row>

            <row>
              <entry align="left" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/collapseall.gif" format="GIF"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>Collapses hierarchical results view.</para></entry>
            </row>

            <row>
              <entry align="left" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/cleanpage.gif" format="GIF"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>Clears the result page.</para></entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>

      <para>While left click on result select that element, right click will
      also bring popup menu. Popup menu has action for expanding and
      collapsing, bringing up properties and performing
      <emphasis>References</emphasis> action for selected element.</para>

      <para>The background color could be changed through
      searchnavigator.properties file. (BackgroundColor = R=?,G=?,B=?)</para>

      <para>As with all other components, you are also able to change the
      content of the toolbar, and the order of toolbar buttons.</para>
    </sect1>

    <sect1>
      <title>Problems component</title>

      <para>Problems component lists all the problems currently present in the
      XPDL model(s). If option for design-time validation (found in
      togwecontroller.property) is set to 'true', this list will be
      automatically refreshed (except for schema errors).</para>

      <figure>
        <title>Problems component</title>

        <mediaobject>
          <imageobject>
            <imagedata contentdepth="100%"
                       fileref="Images/problemsComponent.jpg" scalefit="1"
                       width="100%"/>
          </imageobject>
        </mediaobject>
      </figure>

      <para>Results of action 'check validity' are also shown here, so if
      design-time validation is off, you can always re-check the XPDL model
      validity by calling this action from the Package's menu/toolbar.</para>

      <para>The result table has five columns:</para>

      <itemizedlist>
        <listitem>
          <para>The first column (without title) is representing a type of a
          problem, which can be either error or warning and it's marked with
          appropriate icon.</para>
        </listitem>

        <listitem>
          <para>The second column specifies the type of the error/warning
          (connection, logic, conformance or schema)</para>
        </listitem>

        <listitem>
          <para>The third column is a description of the problem.</para>
        </listitem>

        <listitem>
          <para>The fourth column displays the exact element where the problem
          occurs</para>
        </listitem>

        <listitem>
          <para>The fifth column is a location of the first relevant parent of
          the problematic element (it could also be the problematic element
          itself).</para>
        </listitem>
      </itemizedlist>

      <para>Clicking on Element column selects the exact element which has an
      error/warning described. By clicking on any other column, appropriate
      parent element will be selected (e.g. if error is with actual parameter,
      clicking on element will select actual parameter, while clicking on some
      other column will select activity) - as already explained, sometimes
      these two are the same.</para>

      <para>On the other hand, double-clicking opens a dialog for editing
      problematic element.</para>

      <para>There is also a possibility to sort entries by the column - just
      click to the column header, and entries will be sorted by this
      column.</para>

      <para>Problem component background color could be changed through
      problemnavigator.properties file. (BackgroundColor = R=?,G=?,B=?)</para>

      <para>As with all other components, you are also able to change the
      content of the toolbar, and the order of toolbar buttons.</para>
    </sect1>

    <sect1>
      <title>WfXML component</title>

      <para>Having this component, you are able to connect to a workflow
      engine which supports WfMC interface defined by WfMC, and to manage XPDL
      files on the engine.</para>

      <para>To connect to a workflow engine, valid registry service URL must
      be entered. After you enter it, and press the button right to the URL,
      you should connect to the engine, and get a list of the process
      definitions already uploaded to the engine, as on the picture
      below:</para>

      <figure>
        <title>WfXML Component</title>

        <mediaobject>
          <imageobject>
            <imagedata contentdepth="100%" fileref="Images/wfxmlComponent.gif"
                       scalefit="1" width="100%"/>
          </imageobject>
        </mediaobject>
      </figure>

      <para>The toolbar for this component contains buttons for performing
      actions for managing XPDLs on the engine. The actions are described in
      the following table:</para>

      <informaltable frame="topbot">
        <tgroup align="left" cols="2">
          <tbody valign="top">
            <row>
              <entry align="left" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/downloadxpdl.gif" format="GIF"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>Downloads XPDL from the engine.</para></entry>
            </row>

            <row>
              <entry align="left" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/uploadxpdl.gif" format="GIF"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>Uploads XPDL to the engine.</para></entry>
            </row>

            <row>
              <entry align="left" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata align="left" fileref="Images/updatexpdl.gif"
                               format="GIF"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>Updates XPDL to the engine.</para></entry>
            </row>

            <row>
              <entry align="left" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/cleanpage.gif" format="GIF"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>Clears the history (which you are able to select
              from a combo box) of most recently entered URLs of WfXML
              compliant engines.</para></entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>

      <para>As with all other components, you are also able to change the
      content of the toolbar, and the order of toolbar buttons.</para>
    </sect1>

    <sect1>
      <title>LDAP component</title>

      <para>This component enables you to connect to the LDAP based system,
      search for users and groups and import them into XPDL as
      Participants.</para>

      <figure>
        <title>LDAP Component</title>

        <mediaobject>
          <imageobject>
            <imagedata contentdepth="100%" fileref="Images/ldapcomponent.gif"
                       scalefit="1" width="100%"/>
          </imageobject>
        </mediaobject>
      </figure>

      <para>To be able to do this, you first need to configure LDAP parameters
      by selecting corresponding action from component's toolbar. This will
      bring you a dialog where you define how to access LDAP, names of
      attributes representing group and users, etc. as shown on the picture
      below:</para>

      <figure>
        <title>LDAP Configuration Dialog</title>

        <mediaobject>
          <imageobject>
            <imagedata contentdepth="100%"
                       fileref="Images/ldapconfigurationdialog.gif"
                       scalefit="1" width="100%"/>
          </imageobject>
        </mediaobject>
      </figure>

      <para>The toolbar for this component contains buttons for performing
      actions for managing LDAP access. The actions are described in the
      following table:</para>

      <informaltable frame="topbot">
        <tgroup align="left" cols="2">
          <tbody valign="top">
            <row>
              <entry align="left" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/config.gif" format="GIF"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>Opens a dialog to configure parameters neccessary
              to connect to an LDAP and search for users and
              groups.</para></entry>
            </row>

            <row>
              <entry align="left" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/searchldap.gif" format="GIF"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>Performs a LDAP search based on parameters entered
              in as a search criteria, and displays results in a
              table.</para></entry>
            </row>

            <row>
              <entry align="left" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata align="left"
                               fileref="Images/importselected.gif"
                               format="GIF"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>Imports selected LDAP entries as XPDL
              Participants.</para></entry>
            </row>

            <row>
              <entry align="left" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/importexternalparticipants.gif"
                               format="GIF"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>Imports all LDAP entries as XPDL
              Participants.</para></entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>

      <para>As with all other components, you are also able to change the
      content of the toolbar, and the order of toolbar buttons.</para>

      <para>The advantage of using "LDAP defined participants" is that one can
      connect the LDAP server of its organization and create processes using
      the real user/group logins for participant Ids. When the engine enacts
      such a process, it could also browse the LDAP server for the certain
      users/groups, so you do not have to do "participant to real user
      mapping".</para>

      <para>The default LDAP properties can be defined in ldap.properties
      configuration file:</para>

      <para><emphasis>#LDAPReferralHandling = follow </emphasis></para>

      <para><emphasis>#LDAPCountLimit = 0 </emphasis></para>

      <para><emphasis>#LDAPTimeLimit = 0 </emphasis></para>

      <para><emphasis>#LDAPPageSize = 1000 </emphasis></para>

      <para><emphasis>#LDAPHost=localhost </emphasis></para>

      <para><emphasis>#LDAPPort=389 </emphasis></para>

      <para><emphasis>#LDAPBaseDN= </emphasis></para>

      <para><emphasis>#LDAPObjectClassFilter=group</emphasis></para>

      <para><emphasis>#LDAPObjectClassFilterChoices=group,organizationalUnit,organizationalRole,user,person,organizationalPerson,inetOrgPerson,AllListed</emphasis></para>

      <para><emphasis>#LDAPSearchScope=SCOPE_SUB </emphasis></para>

      <para><emphasis>#LDAPSecurityLevel=UserAndPassword </emphasis></para>

      <para><emphasis>#LDAPSecurityUserDN=username@company.com
      </emphasis></para>

      <para><emphasis>#LDAPSecurityPassword=somepwd </emphasis></para>

      <para><emphasis>#LDAPGroupUniqueAttributeName=sAMAccountName
      </emphasis></para>

      <para><emphasis>#LDAPGroupNameAttributeName=displayName
      </emphasis></para>

      <para><emphasis>#LDAPGroupDescriptionAttributeName=description
      </emphasis></para>

      <para><emphasis>#LDAPUserUniqueAttributeName=sAMAccountName
      </emphasis></para>

      <para><emphasis>#LDAPUserNameAttributeName=displayName
      </emphasis></para>

      <para><emphasis>#LDAPUserDescriptionAttributeName=description
      </emphasis></para>

      <para><emphasis>#LDAPDistinguishedNameAttributeName=distinguishedName
      </emphasis></para>

      <para><emphasis>#Toolbar.ActionOrder.defaultToolbar = ConfigureLDAP
      SearchLDAP - ImportSelected ImportAll</emphasis></para>
    </sect1>

    <sect1>
      <title>Command-line usage</title>

      <para>It is possible to use TWE from command-line in order to write
      process definition graph into the file in the selected format.</para>

      <para>Below is an example how to write graph of process definition
      "simple_sync_deadline" from XPDL on path "d:\tmp\deadlineexamples.xpdl"
      into the file "d:\tmp\simple_sync_deadline.jpg"</para>

      <programlisting>"C:/Program Files/Java/jdk1.7.0_40/bin/java" -Xmx512M 
   -DJaWE_HOME="d:/twe-6.0-1" -Djava.ext.dirs="d:/twe-6.0-1/lib" 
   org.enhydra.jawe.JaWE d:\tmp\deadlineexamples.xpdl 
   write_graph_2_file_procdefid=simple_sync_deadline 
   write_graph_2_file_format=jpg 
   write_graph_2_file_filepath=d:\tmp\simple_sync_deadline</programlisting>

      <note>
        <para>This example assumes Java location is "C:/Program
        Files/Java/jdk1.7.0_40/bin/java", TWE is installed in "d:\twe-6.0-1"
        and there is XPDL file at "d:\tmp\deadlines.xpdl" that has process
        definition with Id "simple_sync_deadline"</para>
      </note>

      <para>The possible values for the parameter "write_graph_2_file_format"
      are: jpg, svg and pdf</para>
    </sect1>
  </chapter>

  <chapter>
    <title>Dialogs and Property Panels</title>

    <sect1>
      <title>Standard Dialogs</title>

      <para>Standard dialog are dialogs for manipulation with input/output
      files.</para>

      <sect2>
        <title>Save or discard changes dialog</title>

        <informaltable frame="none">
          <tgroup cols="2" colsep="0">
            <tbody>
              <row>
                <entry><mediaobject>
                    <imageobject>
                      <imagedata align="center" contentdepth="100%"
                                 fileref="Images/saveChanges.gif" scalefit="1"
                                 valign="middle" width="100%"/>
                    </imageobject>
                  </mediaobject></entry>

                <entry align="justify" valign="middle"><para>If changes made
                to the package are about to be discarded, the warning message
                appears asking if the changes should be saved.</para><para>If
                the answer is "Yes", the current package will be saved. "No"
                will discard any changes since last save, and "Cancel" will
                drop out selected function.</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </sect2>

      <sect2>
        <title>File open dialog</title>

        <informaltable frame="none">
          <tgroup cols="2" colsep="0">
            <tbody>
              <row>
                <entry align="justify" valign="middle">This dialog offers file
                system browsing and choosing file to open. It is displayed
                when you want to open a new XPDL file for editing in TWE, when
                adding new external package reference, ...</entry>

                <entry><mediaobject>
                    <imageobject>
                      <imagedata align="center" contentdepth="100%"
                                 fileref="Images/fileOpenDialog.gif"
                                 scalefit="1" valign="middle" width="100%"/>
                    </imageobject>
                  </mediaobject></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </sect2>

      <sect2>
        <title>Save As dialog</title>

        <informaltable frame="none">
          <tgroup cols="2" colsep="0">
            <tbody>
              <row>
                <entry><mediaobject>
                    <imageobject>
                      <imagedata contentdepth="100%"
                                 fileref="Images/saveAsDialog.gif"
                                 scalefit="1" width="100%"/>
                    </imageobject>
                  </mediaobject></entry>

                <entry align="justify" valign="middle">This dialog offers file
                system browsing and choosing the location where you want to
                save an XPDL file or process or activity set picture, as well
                as defining the file name and extension.</entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </sect2>
    </sect1>

    <sect1>
      <title>Dialogs for editing XPDL element properties</title>

      <para><informaltable frame="none">
          <tgroup cols="2" colsep="0">
            <tbody>
              <row>
                <entry align="justify" valign="middle">The most of the dialogs
                for editing XPDL elements have a toolbar with a buttons for
                navigation between property panels, as well as for
                applying/reverting the changes in the currently displayed
                property panel.</entry>

                <entry valign="middle"><mediaobject>
                    <imageobject>
                      <imagedata align="center" contentdepth="100%"
                                 fileref="Images/navigationOperations.gif"
                                 scalefit="1" valign="middle" width="100%"/>
                    </imageobject>
                  </mediaobject></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable></para>

      <para>The toolbar buttons are:</para>

      <informaltable frame="topbot">
        <tgroup align="left" cols="2">
          <tbody valign="top">
            <row>
              <entry align="left" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/nav_left_red.gif" format="GIF"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>Shows previous panel.</para></entry>
            </row>

            <row>
              <entry align="left" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/nav_right_red.gif" format="GIF"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>Shows next panel.</para></entry>
            </row>

            <row>
              <entry align="left" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata align="left" fileref="Images/revert.gif"
                               format="GIF"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>Discards changes made after last apply action
              (reverts to previous state).</para></entry>
            </row>

            <row>
              <entry align="left" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/check.gif" format="GIF"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>Applies the changes made in the
              panel.</para></entry>
            </row>

            <row>
              <entry align="left" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/applyandclose.gif" format="GIF"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>Applies the changes made in the panel and closes
              the dialog.</para></entry>
            </row>

            <row>
              <entry align="left" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/parentelementpanel.gif"
                               format="GIF"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>Shows parent element panel.</para></entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
    </sect1>

    <sect1>
      <title>Property panels</title>

      <para>Each XPDL element is represented by appropriate property panel for
      editing its properties.</para>

      <para>There are some standard panels like the ones for entering element
      information through the text box, by choosing an item from a combo box,
      for managing a group of elements through a table or a list, the group
      panels containing that contain other panels, tab panels, etc.</para>

      <para>Each panel can be displayed separately, or inside a more complex
      panel such as a group panel.</para>

      <informaltable frame="none">
        <tgroup cols="2" colsep="0">
          <tbody>
            <row>
              <entry align="justify" valign="middle">Property panels that
              display any kind of a table or a list representing a group of
              the same kind of XPDL elements have toolbar with buttons to
              handle these elements. Elements may be processes, activities,
              activity sets, participants, transactions, applications,
              namespaces, workflow variables, type declarations, formal
              parameters, etc.</entry>

              <entry valign="middle"><mediaobject>
                  <imageobject>
                    <imagedata align="center" contentdepth="100%"
                               fileref="Images/operationsOnElements.gif"
                               scalefit="1" valign="middle" width="100%"/>
                  </imageobject>
                </mediaobject></entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>

      <para>The toolbar is displayed just above the table/list of
      elements:</para>

      <informaltable frame="topbot">
        <tgroup align="left" cols="2">
          <tbody valign="top">
            <row>
              <entry align="left" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/new_small.gif" format="GIF"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>Creates new element.</para></entry>
            </row>

            <row>
              <entry align="left" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/edit_small.gif" format="GIF"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>Edits selected element.</para></entry>
            </row>

            <row>
              <entry align="left" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata align="left" fileref="Images/delete_small.gif"
                               format="GIF"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>Deletes selected element.</para></entry>
            </row>

            <row>
              <entry align="left" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/duplicate_small.gif"
                               format="GIF"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>Duplicates selected element.</para></entry>
            </row>

            <row>
              <entry align="left" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/references_small.gif"
                               format="GIF"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>Finds all other elements that are referencing
              selected element. The list of referencing elements is displayed
              within Search component.</para></entry>
            </row>

            <row>
              <entry align="left" valign="middle"><inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/convert_small.gif" format="GIF"/>
                  </imageobject>
                </inlinemediaobject></entry>

              <entry><para>This action is available only for the
              FormalParameters and DataFields tables. It converts selected
              Formal parameter into a Data field object (workflow variable),
              or vice-versa.</para></entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>

      <para>When the element from the property table/list is selected,
      appropriate event is send to all other TWE components in order to
      refresh their view, and to show their view of the selected element. For
      example, if we have displayed a property table panel for handling
      activities, clicking on table rows, different activities will be
      displayed in all other TWE components - Graph, Overview, Navigator and
      Package tree components will mark this activity, and XPDL View component
      will show the part of XML structure representing selected activity. On
      the other hand, External package relations, WfXML, Search and Problems
      component won't update the display.</para>

      <para>The toolbar buttons are either enabled or disabled, depending if
      the action they are representing can or can't be performed on the
      current selection.</para>
    </sect1>
  </chapter>

  <chapter>
    <title>XPDL Elements</title>

    <para>This chapter describes how TWE works, corresponding to WfMC
    (Workflow Management Coalition) specifications (<link
    xlink:href="http://www.wfmc.org"
    xmlns:xlink="http://www.w3.org/1999/xlink">www.wfmc.org</link>). WfMC
    provides an interface for workflow process definition. The interface
    defines a common meta-model for describing the process definition and XML
    schema for interchange of process definitions - <acronym>XPDL</acronym>
    (XML Process Definition Language). The focus is on XPDL schema elements,
    and TWE's property panels for editing them.</para>

    <para>TWE is a tool for <emphasis>Process Definition</emphasis> modelling.
    The final output of this process modelling is a XPDL output file, which
    can be interpreted at runtime by the workflow engine(s). TWE accomplished
    three main goals:<itemizedlist>
        <listitem>
          <para>Graphical representation of process definition</para>
        </listitem>

        <listitem>
          <para>Export of process definitions to XPDL</para>
        </listitem>

        <listitem>
          <para>Import of any valid XPDL and its graphical
          representation</para>
        </listitem>
      </itemizedlist></para>

    <para>TWE handles one (main) package at a time, although it displays in a
    read-only mode all the external packages of the main package (and all the
    external packages of external packages and so on). Main TWE component
    window is labeled Graph. It is the graphic representation of workflow
    process or activity set, depending on what is currently selected.</para>

    <para>Participants are represented with swim lines which encapsulate other
    smaller blocks (don't be confused; participants can be horizontally or
    vertically oriented). Those blocks represent activities.</para>

    <para>Lines which connect activities are transitions. Graph specific
    elements are Start and End bubbles. These elements are not the part of
    WfMC specification, although they appear in the resulting XPDL file as
    extended attribute elements.</para>

    <para>The rest of XPDL elements can be accessed and modified through their
    panel properties.</para>

    <informaltable frame="none">
      <tgroup cols="2" colsep="0">
        <tbody>
          <row>
            <entry align="justify" valign="middle">The workflow process
            definition interface defines a common interchange format, which
            supports the transfer of workflow process definitions between
            different products. A workflow process definition, generated by
            TWE, is capable of interpretation in different workflow run-time
            products. The principles of <emphasis>Process Definition
            Interchange</emphasis> are based on Meta-Model framework. This
            meta-data model identifies commonly used entities within a process
            definition, their relationships and attributes. A variety of
            attributes describe the characteristics of this limited set of
            entities. Using this Meta-Model, TWE can transfer models using an
            XPDL as a common exchange format. Beside this interchange, TWE is
            also used for internal representation of process definitions. The
            whole concept is shown on the picture:</entry>

            <entry valign="middle"><mediaobject>
                <imageobject>
                  <imagedata align="center" contentdepth="100%"
                             fileref="Images/Concept.jpg" scalefit="1"
                             valign="middle" width="100%"/>
                </imageobject>
              </mediaobject></entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>

    <para>There is a mandatory minimum set of objects, which must be supported
    within XPDL. This "minimum meta-data model" identifies those commonly used
    entities within a process definition and describes their usage semantics.
    Extensibility is provided by the facility to encompass additional object
    attributes ("extended attributes") which can be included as extensions to
    the basic Meta-Model to meet the specific needs of an individual product
    or workflow system.</para>

    <para>Corresponding to the previous picture with concept of Process
    Definition Interchange, this chapter gives overview of Meta-Model entities
    (<emphasis>Meta-Model framework</emphasis>) and explains representation of
    these objects in TWE (<emphasis>Internal representation</emphasis>) with
    XPDL attributes (<emphasis>XML representation</emphasis>) that are defined
    in it.</para>

    <sect1 xml:id="Meta_Model">
      <title>Meta-Model</title>

      <para>The meta-model identifies the basic set of entities and attributes
      for the exchange of process definitions.</para>

      <figure>
        <title>Package Meta-Model</title>

        <mediaobject condition="demo-details">
          <imageobject>
            <imagedata contentdepth="100%"
                       fileref="Images/Package_Meta_Model.gif" scalefit="1"
                       width="100%"/>
          </imageobject>
        </mediaobject>
      </figure>

      <para>For each of the above entities, there is an associated set of
      attributes (some mandatory and others optional) which describe the
      characteristics of the entity. If there is a need of using an additional
      characteristics, "extended attributes" for various entities may be
      defined to allow extension of the scope of the Meta-Model in a
      controlled manner.</para>

      <para>All those entities except "Message Flow" and "Group" type
      artifacts are maintained by TWE. The current version of TWE is written
      as an XPDL 1 extension towards XPDL 2, and still does not support the
      whole XPDL 2 Meta-Model but only the parts necessary to support simple
      BPMN conformance, and still to allow workflow engines to execute XPDL 1
      "migrated" process definitions.</para>

      <para>"Resource Repository " is external to the workflow process
      definitions. In some complex processes, participant declaration may
      refer to a resource repository, which may be on Organisational Model
      (OM). WfMC Meta-Model specification defines a simple in-built (Minimal)
      Organisational Model or permits access to an externally defined OM. Note
      that XPDL specification does not define or require a resource
      repository.</para>

      <para>TWE works only with a <emphasis>Minimal Organisational
      Model</emphasis> so there is no external Organisational Model provided.
      In this model, there aren't any relationships between participants. TWE
      may refer (import) any external XPDL structure - <emphasis>External
      Package</emphasis>. That External XPDL file may contain whole
      Organisational Model, so that External Package can act like
      <emphasis>Resource Repository</emphasis>.</para>

      <para>As it is shown in the previous picture, minimal process model
      includes various entities whose scope may be wider than a single process
      definition. In particular the definitions of participants, applications
      and workflow relevant data may be referenced from a number of process
      definitions. The Meta-Model assumes the use of a common process
      definition <emphasis>Resource Repository</emphasis>. Repository holds
      the various entity types comprising the process definition. Within the
      repository itself and to support the efficient transfer of process
      definition data to/from the repository, the concept of a PACKAGE is
      introduced, which acts as a <emphasis>container</emphasis> for the
      grouping of common data entities from a number of different process
      definitions, to avoid redefinition within each individual process
      definition. Each process definition contained within the package will
      automatically inherit any common attribute from the process model
      container, unless they are separately re-specified locally within the
      process definition.</para>
    </sect1>

    <sect1 xml:id="Package">
      <title>Package</title>

      <para>It is possible to define several processes within one package,
      which may share the same tools (applications) and participants.</para>

      <para>The Package acts as a container for grouping together a number of
      individual process definitions and associated entity data, which is
      applicable to all the contained process definitions.</para>

      <para>You can chose to create one package per workflow process, which
      should contain all the necessary workflow processes as well as all the
      associated tools (workflow applications) and workflow participants.
      Another approach is to define just parts of one process definition or
      common parts of several processes within one package (e.g. a workflow
      participant list or a workflow application list), and then to reference
      it from other packages. Within a package, the scope of the definitions
      of some entities is global and these entities can be referenced from all
      workflow process definitions contained within the package. Those
      entities are:<itemizedlist>
          <listitem>
            <para>Workflow Process Definition,</para>
          </listitem>

          <listitem>
            <para>Workflow Participant Specification,</para>
          </listitem>

          <listitem>
            <para>Workflow Application Declaration and</para>
          </listitem>

          <listitem>
            <para>Workflow Relevant Data</para>
          </listitem>
        </itemizedlist></para>

      <para>TWE provides a way to manage above listed entities (within one
      package). On <xref linkend="mainToolbarOrganization"/>, you can see
      where is the toolbar part for handling the properties of the selected
      Package.</para>

      <para>To create a new Package in TWE, you simply select File-&gt;New, or
      click appropriate button in the toolbar <inlinemediaobject>
          <imageobject>
            <imagedata fileref="Images/new.gif"/>
          </imageobject>
        </inlinemediaobject> (the first button on the left). If you are
      currently editing some other XPDL file and there are some unsaved
      changes there, prior to creating a new Package, TWE will ask you if you
      want to save the changes.</para>

      <para>It is important to say that actions represented by buttons shown
      on the toolbar picture (and also corresponding menu items) are applied
      to the currently selected package, which can be the main one or one of
      the externally referenced packages.</para>

      <para>If you select the main package, you can modify its properties, but
      this is not possible for the external packages. Those external packages
      are read-only, and you can only read their properties.</para>

      <sect2 xml:id="Package_Attributes">
        <title>Package attributes</title>

        <table frame="all">
          <title>General attributes</title>

          <tgroup align="left" cols="3" colsep="1" rowsep="1">
            <colspec align="center" colnum="2" colwidth="1.00*"/>

            <thead>
              <row>
                <entry>Name</entry>

                <entry align="center">M/O</entry>

                <entry>Description</entry>
              </row>
            </thead>

            <tbody>
              <row>
                <entry>Id</entry>

                <entry align="center">M (mandatory)</entry>

                <entry>Used to identify the package.</entry>
              </row>

              <row>
                <entry>Name</entry>

                <entry align="center">O (optional)</entry>

                <entry>Name of the package.</entry>
              </row>
            </tbody>
          </tgroup>
        </table>

        <para>When you create a new Package in TWE, these attributes are
        getting a default value newpkg. It's up to user to change it to some
        meaningful values.</para>

        <table frame="all">
          <title>Package Header</title>

          <tgroup align="left" cols="3" colsep="1" rowsep="1">
            <colspec align="center" colnum="2"/>

            <thead>
              <row>
                <entry>Name</entry>

                <entry>M/O</entry>

                <entry>Description</entry>
              </row>
            </thead>

            <tbody>
              <row>
                <entry>XPDL Version</entry>

                <entry>M</entry>

                <entry>Version of XPDL.</entry>
              </row>

              <row>
                <entry>Vendor</entry>

                <entry>M</entry>

                <entry>Defines the origin of this package definition and
                contains vendor's name, vendor's product name and product's
                release number.</entry>
              </row>

              <row>
                <entry>Created</entry>

                <entry>M</entry>

                <entry>Creation date of workflow package.</entry>
              </row>

              <row>
                <entry>Description</entry>

                <entry>O</entry>

                <entry>Short textual description of the workflow
                package.</entry>
              </row>

              <row>
                <entry>Documentation</entry>

                <entry>O</entry>

                <entry>Operating System specific path- and filename of help
                file/description file.</entry>
              </row>

              <row>
                <entry>Priority Unit</entry>

                <entry>O</entry>

                <entry>A text string with user defined semantics.</entry>
              </row>

              <row>
                <entry>Cost Unit</entry>

                <entry>O</entry>

                <entry>Units used in Simulation Data (usually expressed in
                terms of a currency).</entry>
              </row>
            </tbody>
          </tgroup>
        </table>

        <para>The Package Header keeps all information central to a package.
        By default, when you create a new Package, XPDL version will be 2.1
        (the version currently partially supported by TWE). If TWE reads a
        document that have XPDL version set to the value different then 2.1,
        it will report it as an warning. When new package is created,
        <emphasis>Vendor</emphasis> attribute is set to
        <emphasis>Together</emphasis> and <emphasis>Created</emphasis>
        attribute to the current date and time of creation in ISO-8601
        format.</para>

        <table frame="all">
          <title>Redefinable Header</title>

          <tgroup align="left" cols="3" colsep="1" rowsep="1">
            <colspec align="center" colnum="2"/>

            <thead>
              <row>
                <entry>Name</entry>

                <entry>M/O</entry>

                <entry>Description</entry>
              </row>
            </thead>

            <tbody>
              <row>
                <entry>Author</entry>

                <entry>O</entry>

                <entry>Name of the author of this package.</entry>
              </row>

              <row>
                <entry>Version</entry>

                <entry>O</entry>

                <entry>Version of this package.</entry>
              </row>

              <row>
                <entry>Code page</entry>

                <entry>O</entry>

                <entry>The code page used for the text parts.</entry>
              </row>

              <row>
                <entry>Country key</entry>

                <entry>O</entry>

                <entry>Country code based on ISO 3166. It could be either the
                three digits country code number, or the two alpha characters
                country codes.</entry>
              </row>

              <row>
                <entry>Responsible(s)</entry>

                <entry>O</entry>

                <entry>Workflow participants, that is responsible for this
                workflow package; the supervisors during run time (usually an
                Organisational Unit or a Human). It is assumed that the
                supervisors are responsible during run time.</entry>
              </row>

              <row>
                <entry>Publication Status</entry>

                <entry>O</entry>

                <entry>Status of the Package. Possible values are:
                <itemizedlist>
                    <listitem>
                      <para>UNDER_REVISION</para>
                    </listitem>

                    <listitem>
                      <para>RELEASED</para>
                    </listitem>

                    <listitem>
                      <para>UNDER_TEST</para>
                    </listitem>
                  </itemizedlist></entry>
              </row>
            </tbody>
          </tgroup>
        </table>

        <para>The redefinable header covers those header attributes that may
        be defined at the package definition header and may be redefined in
        the header of any process definition.</para>

        <para>If publication status is <emphasis>set to Released</emphasis>,
        by default TWE does not allow saving of such XPDL document if it
        contains any kind of errors or warnings (there is a configuration
        property <emphasis>AllowInvalidPackageSaving</emphasis> in
        togwecontroller.properties file, which you can change in order to
        always allow saving of document).</para>

        <table frame="all">
          <title>Conformance Class</title>

          <tgroup align="left" cols="3" colsep="1" rowsep="1">
            <colspec align="center" colnum="2"/>

            <thead>
              <row>
                <entry>Name</entry>

                <entry>M/O</entry>

                <entry>Description</entry>
              </row>
            </thead>

            <tbody>
              <row>
                <entry>Conformance Class</entry>

                <entry>O</entry>

                <entry>Describes the Conformance Class to which the
                definitions in this package are restricted to. Possible values
                are:<itemizedlist>
                    <listitem>
                      <para>FULL-BLOCKED the network structure is restricted
                      to proper nesting of SPLIT/JOIN and LOOP.</para>
                    </listitem>

                    <listitem>
                      <para>LOOP-BLOCKED the network structure is restricted
                      to proper nesting of LOOP.</para>
                    </listitem>

                    <listitem>
                      <para>NON-BLOCKED there is no restriction on the network
                      structure. This is the default.</para>
                    </listitem>
                  </itemizedlist></entry>
              </row>
            </tbody>
          </tgroup>
        </table>

        <para>The conformance class declaration allows description of the
        conformance class to which the definitions in this package definition
        are restricted to. The specified class applies to all the contained
        process definitions. TWE supports all defined conformance classes.
        This means that when creating graphs (networks of activities and
        transitions) for a WorkflowProcess or ActivitySet, TWE will report as
        an error if graph conformance is not satisfied.</para>

        <table condition="demo-details" frame="all">
          <title>Script element</title>

          <tgroup align="left" cols="3" colsep="1" rowsep="1">
            <colspec align="left" colnum="2" colwidth="1.00*"/>

            <thead>
              <row>
                <entry>Name</entry>

                <entry>M/O</entry>

                <entry>Description</entry>
              </row>
            </thead>

            <tbody>
              <row>
                <entry>Type</entry>

                <entry>M</entry>

                <entry>Identifies the scripting language used in expressions.
                It is recommended that the Type will be selected from the
                following strings: text/javascript, text/vbscript, text/tcl,
                text/ecmascript, text/xml. This</entry>
              </row>

              <row>
                <entry>Version</entry>

                <entry>O</entry>

                <entry>This is the version of the scripting language.</entry>
              </row>

              <row>
                <entry>Grammar</entry>

                <entry>O</entry>

                <entry>This is a reference to a document that specifies the
                grammar of the language. It could be, for example, an XML
                schema, a DTD, or a BNF.</entry>
              </row>
            </tbody>
          </tgroup>
        </table>

        <para condition="demo-emptytext">The Script element identifies the
        scripting language used in XPDL expressions. In the runtime, workflow
        engine should consider the type specified, and interpret all
        expressions using appropriate scripting language interpreter. So,
        after specifying the scripting language type, make sure you are
        writing all the expressions (for transition conditions, actual
        parameters, deadline conditions, etc.) according to the language
        syntax.</para>
      </sect2>

      <sect2>
        <title>Package property panel</title>

        <para>In TWE, the icon <inlinemediaobject>
            <imageobject>
              <imagedata fileref="Images/packageproperties.gif" format="GIF"/>
            </imageobject>
          </inlinemediaobject> from package toolbar (or package menu) is used
        for defining above mentioned properties, as well as all other package
        properties and sub-elements, through appropriate property panels.
        Also, you can get property panel for any Package element by selecting
        it in Package tree component, and choosing Properties action from the
        edit menu or toolbar.</para>

        <para>Package property panel contains a lot of different data about
        the main XPDL element - Package. Actually, you are able to access
        almost any XPDL element panel by navigating through the Package
        properties panel. All information are organized in several tabs:
        general, package header, redefinable header, external packages, type
        declarations, participants, applications, workflow variables, pools,
        associations, artifacts, workflow processes and namespaces</para>

        <para>All the tabs that will be mentioned can be also displayed as a
        separate property panels.</para>

        <sect3>
          <title>General tab - displays general package data</title>

          <informaltable frame="none" rowsep="0">
            <tgroup cols="2" colsep="0">
              <tbody>
                <row>
                  <entry align="center" valign="middle"><mediaobject>
                      <imageobject>
                        <imagedata contentdepth="100%"
                                   fileref="Images/packagePropertiesGeneralDialog.gif"
                                   scalefit="1" valign="middle" width="100%"/>
                      </imageobject>
                    </mediaobject></entry>

                  <entry align="justify" colsep="0" valign="middle"><para>Tab
                  has tree parts. First part contains package's id, name and
                  graph conformance. As already mentioned, TWE supports and
                  validates XPDL depending on specified conformance
                  level.</para><para>Second part contains information about
                  script language: type, version and
                  grammar.</para><para>Third part displays list of package's
                  external attributes and offers toolbar with operations to
                  handle extended attributes</para></entry>
                </row>
              </tbody>
            </tgroup>
          </informaltable>
        </sect3>

        <sect3>
          <title>Package header tab</title>

          <informaltable frame="none" rowsep="0">
            <tgroup cols="2" colsep="0">
              <tbody>
                <row>
                  <entry align="justify" colsep="0"
                  valign="middle"><para>Default value for field <emphasis>XPDL
                  version</emphasis> is 2.1, and for field
                  <emphasis>vendor</emphasis> is (c) Together Teamsolutions
                  Co., Ltd.</para><para>Field <emphasis>Created</emphasis>
                  contains creation time and date, and field
                  <emphasis>Description</emphasis> contains short package's
                  description.</para><para><emphasis>Documentation</emphasis>
                  field binds external file with package. <inlinemediaobject>
                      <imageobject>
                        <imagedata fileref="Images/treeDotsButton.gif"/>
                      </imageobject>
                    </inlinemediaobject> button opens a choose file dialog for
                  finding appropriate one.</para></entry>

                  <entry align="center" valign="middle"><mediaobject>
                      <imageobject>
                        <imagedata contentdepth="100%"
                                   fileref="Images/packagePropertiesHeaderDialog.gif"
                                   scalefit="1" valign="middle" width="100%"/>
                      </imageobject>
                    </mediaobject></entry>
                </row>
              </tbody>
            </tgroup>
          </informaltable>
        </sect3>

        <sect3>
          <title>Redefinable header tab</title>

          <informaltable frame="none" rowsep="0">
            <tgroup cols="2" colsep="0">
              <tbody>
                <row>
                  <entry align="center" valign="middle"><mediaobject>
                      <imageobject>
                        <imagedata contentdepth="100%"
                                   fileref="Images/packagePropertiesRedefinableDialog.gif"
                                   scalefit="1" valign="middle" width="100%"/>
                      </imageobject>
                    </mediaobject></entry>

                  <entry align="justify" colsep="0" valign="middle"><para>Tab
                  has two parts. First part contains the following fields:
                  <emphasis>Publication status</emphasis> (can have one of the
                  following values: under revision, under test, or released),
                  <emphasis>Author</emphasis> (package's author),
                  <emphasis>Version</emphasis> (version number for the
                  package), <emphasis>Codepage</emphasis> and
                  <emphasis>Country key</emphasis>. </para><para>As already
                  mentioned, TWE lets you save your work despite the errors if
                  you didn't set <emphasis>Publication status </emphasis>to
                  <emphasis>Released</emphasis>. In the case you've set it to
                  released, it won't be permitted to save your work until you
                  correct all the errors. This behaviour can be configured in
                  togwecontroller.properties file, by setting the value of
                  property <emphasis>AllowInvalidPackageSaving</emphasis> to
                  true. </para></entry>
                </row>
              </tbody>
            </tgroup>
          </informaltable>

          <para>Second part, called <emphasis>Responsibles</emphasis>,
          contains list of all responsibles for the package and operations for
          managing the list. Any participants known to this package can become
          the responsible.</para>

          <para>When you press the button for defining new responsible, this
          action invokes a window with a combo box with a list of all possible
          participants you can chose.</para>

          <para>Responsible person must be a participant that is already
          defined. When adding "Responsibles" for the whole package,
          participants defined inside that package or inside externally
          referenced packages can be added, and when adding "Responsibles" for
          a process, you can also add participants defined for this
          process.</para>

          <para>Beside the combo box with a list of the responsibles, there is
          a shortcut button. If you press this button, the property panel for
          the participant selected in combo box will be shown.</para>
        </sect3>

        <sect3>
          <title>External packages tab</title>

          <informaltable frame="none" rowsep="0">
            <tgroup cols="2" colsep="0">
              <tbody>
                <row>
                  <entry align="justify" colsep="0" valign="middle"><para>It
                  contains a list of all external packages for the package and
                  toolbar buttons for managing the listed external package
                  elements.</para></entry>

                  <entry align="center" valign="middle"><mediaobject>
                      <imageobject>
                        <imagedata contentdepth="100%"
                                   fileref="Images/packagePropertiesExtPackDialog.gif"
                                   scalefit="1" valign="middle" width="100%"/>
                      </imageobject>
                    </mediaobject></entry>
                </row>
              </tbody>
            </tgroup>
          </informaltable>
        </sect3>

        <sect3>
          <title>Type declarations tab</title>

          <informaltable frame="none" rowsep="0">
            <tgroup cols="2" colsep="0">
              <tbody>
                <row>
                  <entry align="center" valign="middle"><mediaobject>
                      <imageobject>
                        <imagedata contentdepth="100%"
                                   fileref="Images/packagePropertiesTypeDeclDialog.gif"
                                   scalefit="1" valign="middle" width="100%"/>
                      </imageobject>
                    </mediaobject></entry>

                  <entry colsep="0" valign="middle"><para>It contains
                  information about all type declarations in a form of a table
                  and operations for their managing. Each table row (type
                  declaration) is described with <emphasis>id</emphasis>,
                  <emphasis>name</emphasis> (optional value) and
                  <emphasis>type</emphasis>. It contains toolbar buttons for
                  managing the listed type declaration
                  elements.</para></entry>
                </row>
              </tbody>
            </tgroup>
          </informaltable>
        </sect3>

        <sect3>
          <title>Participants tab</title>

          <informaltable frame="none" rowsep="0">
            <tgroup cols="2" colsep="0">
              <tbody>
                <row>
                  <entry colsep="0" valign="middle"><para>It contains
                  information about all package's participants. Each table row
                  (participant) is described with <emphasis>id</emphasis>,
                  <emphasis>name</emphasis> (optional value) and
                  <emphasis>participant type</emphasis>. It contains toolbar
                  buttons for managing the listed participant
                  elements.</para></entry>

                  <entry><mediaobject>
                      <imageobject>
                        <imagedata contentdepth="100%"
                                   fileref="Images/packagePropertiesParticipantsDialog.gif"
                                   scalefit="1" valign="middle" width="100%"/>
                      </imageobject>
                    </mediaobject></entry>
                </row>
              </tbody>
            </tgroup>
          </informaltable>
        </sect3>

        <sect3>
          <title>Applications tab</title>

          <informaltable frame="none" rowsep="0">
            <tgroup cols="2" colsep="0">
              <tbody>
                <row>
                  <entry><mediaobject>
                      <imageobject>
                        <imagedata contentdepth="100%"
                                   fileref="Images/packagePropertiesApplicationsDialog.gif"
                                   scalefit="1" valign="middle" width="100%"/>
                      </imageobject>
                    </mediaobject></entry>

                  <entry colsep="0" valign="middle"><para>It contains
                  information about all package's applications. Each table row
                  (application) is described with <emphasis>id</emphasis> and
                  <emphasis>name</emphasis> (optional value). It contains
                  toolbar buttons for managing the listed application
                  elements.</para></entry>
                </row>
              </tbody>
            </tgroup>
          </informaltable>
        </sect3>

        <sect3>
          <title>Workflow variables tab</title>

          <informaltable frame="none" rowsep="0">
            <tgroup cols="2" colsep="0">
              <tbody>
                <row>
                  <entry colsep="0" valign="middle"><para>It contains
                  information about all package's workflow variables. Each
                  table row (workflow variable) is described with
                  <emphasis>id</emphasis>, <emphasis>name</emphasis> (optional
                  value) and <emphasis>data type</emphasis>. It contains
                  toolbar buttons for managing the listed workflow variable
                  elements.</para></entry>

                  <entry><mediaobject>
                      <imageobject>
                        <imagedata contentdepth="100%"
                                   fileref="Images/packagePropertiesVariablesDialog.gif"
                                   scalefit="1" valign="middle" width="100%"/>
                      </imageobject>
                    </mediaobject></entry>
                </row>
              </tbody>
            </tgroup>
          </informaltable>
        </sect3>

        <sect3>
          <title>Associations tab</title>

          <informaltable frame="none" rowsep="0">
            <tgroup cols="2" colsep="0">
              <tbody>
                <row>
                  <entry colsep="0" valign="middle"><para>It contains
                  information about all associations between Artifacts and
                  Activities defined in the Package. Each table row is
                  described with <emphasis>id</emphasis>,
                  <emphasis>name</emphasis> (optional value) , source and the
                  target of an association and <emphasis>association
                  direction</emphasis>. It contains toolbar buttons for
                  managing the listed elements.</para></entry>

                  <entry><mediaobject>
                      <imageobject>
                        <imagedata contentdepth="100%"
                                   fileref="Images/packagePropertiesAssociationsDialog.gif"
                                   scalefit="1" valign="middle" width="100%"/>
                      </imageobject>
                    </mediaobject></entry>
                </row>
              </tbody>
            </tgroup>
          </informaltable>
        </sect3>

        <sect3>
          <title>Artifacts tab</title>

          <informaltable frame="none" rowsep="0">
            <tgroup cols="2" colsep="0">
              <tbody>
                <row>
                  <entry colsep="0" valign="middle"><para>It contains
                  information about all artifacts defined in the package. Each
                  table row is described with <emphasis>id</emphasis>,
                  <emphasis>name</emphasis> (optional value), artifact type
                  and <emphasis>text annotation </emphasis>(optional value).
                  It contains toolbar buttons for managing the listed
                  elements.</para></entry>

                  <entry><mediaobject>
                      <imageobject>
                        <imagedata contentdepth="100%"
                                   fileref="Images/packagePropertiesArtifactsDialog.gif"
                                   scalefit="1" valign="middle" width="100%"/>
                      </imageobject>
                    </mediaobject></entry>
                </row>
              </tbody>
            </tgroup>
          </informaltable>
        </sect3>

        <sect3>
          <title>Pools tab</title>

          <informaltable frame="none" rowsep="0">
            <tgroup cols="2" colsep="0">
              <tbody>
                <row>
                  <entry><mediaobject>
                      <imageobject>
                        <imagedata contentdepth="100%"
                                   fileref="Images/packagePropertiesPoolsDialog.gif"
                                   scalefit="1" valign="middle" width="100%"/>
                      </imageobject>
                    </mediaobject></entry>

                  <entry colsep="0" valign="middle"><para>It contains
                  information about all the package's pools for workflow
                  processes. Each table row (pool) is described with
                  <emphasis>id</emphasis>, <emphasis>name</emphasis> (optional
                  value), orientation, process (a reference to the process or
                  activity set) and <emphasis>Lanes</emphasis>. TWE does not
                  allow creation or removal of the pools. Whenever new
                  Workflow process is created or removed, corresponding pool
                  gets created/removed. There is a toolbar where only the
                  button that allows to edit the pool properties is enabled.
                  </para></entry>
                </row>
              </tbody>
            </tgroup>
          </informaltable>
        </sect3>

        <sect3>
          <title>Workflow processes tab</title>

          <informaltable frame="none" rowsep="0">
            <tgroup cols="2" colsep="0">
              <tbody>
                <row>
                  <entry><mediaobject>
                      <imageobject>
                        <imagedata contentdepth="100%"
                                   fileref="Images/packagePropertiesProcessesDialog.gif"
                                   scalefit="1" valign="middle" width="100%"/>
                      </imageobject>
                    </mediaobject></entry>

                  <entry colsep="0" valign="middle"><para>It contains
                  information about all package's workflow processes. Each
                  table row (workflow process) is described with
                  <emphasis>id</emphasis>, <emphasis>name</emphasis> (optional
                  value) and <emphasis>Access level</emphasis> (optional
                  value, can have one of the values:
                  <emphasis>private</emphasis> or
                  <emphasis>public</emphasis>). It contains toolbar buttons
                  for managing the listed workflow process elements.
                  </para></entry>
                </row>
              </tbody>
            </tgroup>
          </informaltable>
        </sect3>

        <sect3>
          <title>Namespaces tab</title>

          <informaltable frame="none" rowsep="0">
            <tgroup cols="2" colsep="0">
              <tbody>
                <row>
                  <entry colsep="0" valign="middle"><para>This property panel
                  shows all namespaces defined within the XPDL document. User
                  can add additional namespaces. Usually, additional
                  namespaces are needed to insure document validity when user
                  defines "complex" extended attributes. It contains
                  information about all package's namespaces in a form of a
                  table and operations for their managing. Each table row
                  (namespace) is described with <emphasis>name</emphasis> and
                  <emphasis>location</emphasis>. It contains toolbar buttons
                  for managing the listed namespace elements.</para></entry>

                  <entry><mediaobject>
                      <imageobject>
                        <imagedata contentdepth="100%"
                                   fileref="Images/packagePropertiesNamespacesDialog.gif"
                                   scalefit="1" valign="middle" width="100%"/>
                      </imageobject>
                    </mediaobject></entry>
                </row>
              </tbody>
            </tgroup>
          </informaltable>
        </sect3>
      </sect2>
    </sect1>

    <sect1 xml:id="Process_ProcessDefinition">
      <title>Workflow Process</title>

      <para>The Process Definition entity provides contextual information that
      applies to other entities within the process. This describes the process
      itself. It is a container for the process itself and provides
      information associated with administration (creation date, author, etc.)
      or to be used during process execution (initiation parameters to be
      used, execution priority, time limits to be checked, person to be
      notified, simulation information, etc.). Definition entity thus provides
      header information for the process definition and is therefore related
      to all other entities in that process.</para>

      <figure>
        <title>Workflow Process Meta-Model</title>

        <mediaobject condition="demo-details">
          <imageobject>
            <imagedata contentdepth="100%"
                       fileref="Images/Process_Meta_Model.gif" scalefit="1"
                       width="100%"/>
          </imageobject>
        </mediaobject>
      </figure>

      <para condition="demo-emptytext">The Workflow Process Definition defines
      the elements that make a workflow. It contains definitions or
      declarations, respectively, for Activity and, optionally, for
      Transition, Application, and Process Relevant Data entities.</para>

      <para condition="demo-emptytext">A Workflow Process may run as an
      implementation of an activity of type subflow; in this case parameters
      may be defined as attributes of the process.</para>

      <para condition="demo-emptytext">TWE provides a way to manage process
      definition entities. On <xref linkend="mainToolbarOrganization"/>, you
      can see where is the toolbar part for handling the propertiesOn <xref
      linkend="mainToolbarOrganization"/> you can see the organization of the
      selected WorkflowProcess.</para>

      <para condition="demo-emptytext">If you create (override) some process
      with the same Id as the one from the external package, only the one from
      the current package can be used as the implementation process of sublfow
      activity.</para>

      <para condition="demo-emptytext">Typically, you will create a new
      process by pressing the button <inlinemediaobject>
          <imageobject>
            <imagedata fileref="Images/processnew.gif"/>
          </imageobject>
        </inlinemediaobject> from the main toolbox or selecting appropriate
      item from Package menu.</para>

      <sect2 condition="demo-emptytext">
        <title>WorkflowProcess attributes</title>

        <para>WorkflowProcess attributes can be divided in few logical
        parts:</para>

        <table>
          <title>General Attributes</title>

          <tgroup cols="3" colsep="1" rowsep="1">
            <colspec align="center" colnum="2"/>

            <thead>
              <row>
                <entry>Name</entry>

                <entry>M/O</entry>

                <entry>Description</entry>
              </row>
            </thead>

            <tbody>
              <row>
                <entry>Id</entry>

                <entry>M</entry>

                <entry>Used to identify the workflow process (Read
                Only).</entry>
              </row>

              <row>
                <entry>Name</entry>

                <entry>O</entry>

                <entry>Name of the model, used to identify the workflow
                process.</entry>
              </row>

              <row>
                <entry>AccessLevel</entry>

                <entry>O</entry>

                <entry>The Access level of a process may be either PUBLIC or
                PRIVATE. If PUBLIC, the process may be invoked by an external
                system or application. A process with private access may only
                be invoked from a SubFlow Activity.</entry>
              </row>
            </tbody>
          </tgroup>
        </table>

        <table>
          <title>Process Header</title>

          <tgroup cols="3" colsep="1" rowsep="1">
            <colspec align="center" colnum="2"/>

            <thead>
              <row>
                <entry>Name</entry>

                <entry>M/O</entry>

                <entry>Description</entry>
              </row>
            </thead>

            <tbody>
              <row>
                <entry>Duration Unit</entry>

                <entry>M</entry>

                <entry>Describes the default unit to be applied to an integer
                duration value that has no unit tag. Possible units
                are:<simplelist columns="1">
                    <member>Y - year</member>

                    <member>M - month</member>

                    <member>D - day</member>

                    <member>H - hour</member>

                    <member>m - minute</member>

                    <member>s - second</member>
                  </simplelist></entry>
              </row>

              <row>
                <entry>Created</entry>

                <entry>O</entry>

                <entry>Creation date of workflow process definition.</entry>
              </row>

              <row>
                <entry>Description</entry>

                <entry>O</entry>

                <entry>Short textual description of the process.</entry>
              </row>

              <row>
                <entry>Priority</entry>

                <entry>O</entry>

                <entry>The priority of the process type. Default: Inherited
                from Model Definition.</entry>
              </row>

              <row>
                <entry>Limit</entry>

                <entry>O</entry>

                <entry>Expected duration for time management purposes (e.g.
                starting an escalation procedure etc.) in units of
                DurationUnit. It is counted from the starting date/time of the
                Process. The consequences of reaching the limit value are not
                defined in this document (i.e. vendor specific). It is assumed
                that in this case at least the Responsible of the current
                process is notified of this situation.</entry>
              </row>

              <row>
                <entry>Valid From</entry>

                <entry>O</entry>

                <entry>The date that the workflow process definition is active
                from. Empty string means system date. Default: Inherited from
                Model Definition.</entry>
              </row>

              <row>
                <entry>Valid To</entry>

                <entry>O</entry>

                <entry>The date at which the process definition becomes valid.
                Empty string means unlimited validity. Default: Inherited from
                Model Definition.</entry>
              </row>

              <row>
                <entry>Waiting Time</entry>

                <entry>O</entry>

                <entry>Describes the amount of time, which is needed to
                prepare the performance of the task (time estimation) (waiting
                time is provided by the analysis environment and may be
                updated by the runtime environment) in units of
                DurationUnit.</entry>
              </row>

              <row>
                <entry>Working Time</entry>

                <entry>O</entry>

                <entry>Describes the amount of time the performer of the
                activity needs to perform the task (time estimation) (working
                time is needed for analysis purposes and is provided by the
                evaluation of runtime parameters) in units of
                DurationUnit.</entry>
              </row>

              <row>
                <entry>Duration</entry>

                <entry>O</entry>

                <entry>Expected duration time to perform a task in units of
                DurationUnit.</entry>
              </row>
            </tbody>
          </tgroup>
        </table>

        <para>In Process Header Tab there is Time Estimation group where we
        define Waiting Time, Working Time and Duration. This is used for
        simulation purposes.</para>

        <table>
          <title>Redefinable Header</title>

          <tgroup cols="3" colsep="1" rowsep="1">
            <colspec align="center" colnum="2"/>

            <thead>
              <row>
                <entry>Name</entry>

                <entry>M/O</entry>

                <entry>Description</entry>
              </row>
            </thead>

            <tbody>
              <row>
                <entry>Publication Status</entry>

                <entry>O</entry>

                <entry>Status of the Workflow Process Definition. Default:
                Inherited from Model Definition.<simplelist columns="1">
                    <member>UNDER_REVISION</member>

                    <member>RELEASED</member>

                    <member>UNDER_TEST</member>
                  </simplelist></entry>
              </row>

              <row>
                <entry>Author</entry>

                <entry>O</entry>

                <entry>Name of the author of this workflow process definition.
                (the one who puts it into the package)</entry>
              </row>

              <row>
                <entry>Version</entry>

                <entry>O</entry>

                <entry>Version of this workflow process definition.</entry>
              </row>

              <row>
                <entry>Codepage</entry>

                <entry>O</entry>

                <entry>The codepage used for the text parts. Default:
                Inherited from Model Definition.</entry>
              </row>

              <row>
                <entry>Country key</entry>

                <entry>O</entry>

                <entry>Country code based on ISO 3166. It could be either the
                three digits country code number, or the two alpha characters
                country codes. Default: Inherited from Model
                Definition.</entry>
              </row>

              <row>
                <entry>Responsible(s)</entry>

                <entry>O</entry>

                <entry>Workflow participant, who is responsible for this
                workflow process (usually an Organisational Unit or a Human).
                It is assumed that the supervisor is responsible during
                execution of the process. Default: Inherited from Model
                Definition.</entry>
              </row>
            </tbody>
          </tgroup>
        </table>

        <para>The responsibles for Process are added in the same way as it is
        at Package level, which is explained earlier in text.</para>
      </sect2>

      <sect2 condition="demo-emptytext">
        <title>Workflow Process property panel</title>

        <para>In TWE, you can get the property panel to edit all workflow
        process attributes by clicking on a toolbar icon <inlinemediaobject>
            <imageobject>
              <imagedata fileref="Images/processproperties.gif"/>
            </imageobject>
          </inlinemediaobject>, or selecting the appropriate menu item.</para>

        <para>It contains a lot of different data about workflow process. All
        information are organized in several tabs: general, process header,
        redefinable header, participants, applications, workflow variables,
        formal parameters, activities, transitions and activity sets.</para>

        <para>All the tabs that will be mentioned can be also displayed as a
        separate property panels, either by selecting appropriate element in a
        Package tree, and asking for its properties, or by selecting
        appropriate toolbox button or menu item.</para>

        <sect3>
          <title>General tab - displays general process data</title>

          <informaltable frame="none" rowsep="0">
            <tgroup cols="2" colsep="0">
              <tbody>
                <row>
                  <entry><mediaobject>
                      <imageobject>
                        <imagedata contentdepth="100%"
                                   fileref="Images/processPropertiesGeneralDialog.gif"
                                   scalefit="1" valign="middle" width="100%"/>
                      </imageobject>
                    </mediaobject></entry>

                  <entry colsep="0" valign="middle"><para>Tab has two parts.
                  First part contains process <emphasis>id</emphasis>,
                  <emphasis>name</emphasis> (this name will appear in window's
                  title bar) and <emphasis>access level</emphasis> (can be
                  private or public). </para><para>Second part shows all
                  process extended attributes and also offers operations with
                  them.</para></entry>
                </row>
              </tbody>
            </tgroup>
          </informaltable>
        </sect3>

        <sect3>
          <title>Process header tab</title>

          <informaltable frame="none" rowsep="0">
            <tgroup cols="2" colsep="0">
              <tbody>
                <row>
                  <entry colsep="0" valign="middle"><para>This dialog defines
                  elements and attributes of XPDL's
                  <emphasis>ProcessHeader</emphasis> element.
                  </para><para>Field <emphasis>Duration unit </emphasis> can
                  have one of the following values: second, minute, hour, day,
                  month, year.</para><para>Field <emphasis>Created
                  </emphasis>displays the process creation date and field
                  <emphasis>Description</emphasis> is place for short
                  description of this workflow process.</para></entry>

                  <entry><mediaobject>
                      <imageobject>
                        <imagedata contentdepth="100%"
                                   fileref="Images/processPropertiesHeaderDialog.gif"
                                   scalefit="1" valign="middle" width="100%"/>
                      </imageobject>
                    </mediaobject></entry>
                </row>
              </tbody>
            </tgroup>
          </informaltable>
        </sect3>

        <sect3>
          <title>Redefinable header tab</title>

          <informaltable frame="none" rowsep="0">
            <tgroup cols="2" colsep="0">
              <tbody>
                <row>
                  <entry valign="middle"><mediaobject>
                      <imageobject>
                        <imagedata contentdepth="100%"
                                   fileref="Images/processPropertiesRedefinableDialog.gif"
                                   scalefit="1" valign="middle" width="100%"/>
                      </imageobject>
                    </mediaobject></entry>

                  <entry colsep="0" valign="middle"><para>Tab has two parts.
                  First part contains the following fields:
                  <emphasis>Publication status</emphasis> (can have one of the
                  following values: under revision, under test, or released),
                  <emphasis>Author</emphasis> (author of the process),
                  <emphasis>Version</emphasis> (version number for the
                  process), <emphasis>Codepage</emphasis> and
                  <emphasis>Country key</emphasis>. </para><para>Second part,
                  called <emphasis>Responsibles</emphasis>, contains list of
                  all responsibles for the process and operations for managing
                  the list. </para></entry>
                </row>
              </tbody>
            </tgroup>
          </informaltable>
        </sect3>

        <sect3>
          <title>Participants tab</title>

          <informaltable frame="none" rowsep="0">
            <tgroup cols="2" colsep="0">
              <tbody>
                <row>
                  <entry colsep="0" valign="middle"><para>It contains
                  information about all participants of the workflow process.
                  Each table row (participant) is described with
                  <emphasis>id</emphasis>, <emphasis>name</emphasis> (optional
                  value) and <emphasis>participant type</emphasis>. It
                  contains toolbar buttons for managing the listed participant
                  elements. </para></entry>

                  <entry valign="middle"><mediaobject>
                      <imageobject>
                        <imagedata contentdepth="100%"
                                   fileref="Images/processPropertiesParticipantsDialog.gif"
                                   scalefit="1" valign="middle" width="100%"/>
                      </imageobject>
                    </mediaobject></entry>
                </row>
              </tbody>
            </tgroup>
          </informaltable>
        </sect3>

        <sect3>
          <title>Applications tab</title>

          <informaltable frame="none" rowsep="0">
            <tgroup cols="2" colsep="0">
              <tbody>
                <row>
                  <entry valign="middle"><mediaobject>
                      <imageobject>
                        <imagedata contentdepth="100%"
                                   fileref="Images/processPropertiesApplicationsDialog.gif"
                                   scalefit="1" valign="middle" width="100%"/>
                      </imageobject>
                    </mediaobject></entry>

                  <entry colsep="0" valign="middle"><para>It contains
                  information about all applications of the workflow process.
                  Each table row (application) is described with
                  <emphasis>id</emphasis> and <emphasis>name</emphasis>
                  (optional value). It contains toolbar buttons for managing
                  the listed application elements.</para></entry>
                </row>
              </tbody>
            </tgroup>
          </informaltable>
        </sect3>

        <sect3>
          <title>Workflow variables tab</title>

          <informaltable frame="none" rowsep="0">
            <tgroup cols="2" colsep="0">
              <tbody>
                <row>
                  <entry colsep="0" valign="middle"><para>It contains
                  information about all workflow process's workflow variables.
                  Each table row (workflow variable) is described with
                  <emphasis>id</emphasis>, <emphasis>name</emphasis> (optional
                  value) and <emphasis>data type</emphasis>. It contains
                  toolbar buttons for managing the listed workflow variable
                  elements. </para></entry>

                  <entry valign="middle"><mediaobject>
                      <imageobject>
                        <imagedata contentdepth="100%"
                                   fileref="Images/processPropertiesVariablesDialog.gif"
                                   scalefit="1" valign="middle" width="100%"/>
                      </imageobject>
                    </mediaobject></entry>
                </row>
              </tbody>
            </tgroup>
          </informaltable>
        </sect3>

        <sect3>
          <title>Formal parameters tab</title>

          <informaltable frame="none" rowsep="0">
            <tgroup cols="2" colsep="0">
              <tbody>
                <row>
                  <entry valign="middle"><mediaobject>
                      <imageobject>
                        <imagedata contentdepth="100%"
                                   fileref="Images/processPropertiesFormParamDialog.gif"
                                   scalefit="1" valign="middle" width="100%"/>
                      </imageobject>
                    </mediaobject></entry>

                  <entry colsep="0" valign="middle"><para>It contains
                  information about all workflow process's formal parameters.
                  Each table row (formal parameter) is described with
                  <emphasis>id</emphasis>, <emphasis>mode</emphasis> and
                  <emphasis>data type</emphasis>. It contains toolbar buttons
                  for managing the listed formal parameter
                  elements.</para></entry>
                </row>
              </tbody>
            </tgroup>
          </informaltable>
        </sect3>

        <sect3>
          <title>Activities tab</title>

          <informaltable frame="none" rowsep="0">
            <tgroup cols="2" colsep="0">
              <tbody>
                <row>
                  <entry colsep="0" valign="middle"><para>It contains
                  information about all activities of the workflow process.
                  Each table row (activity) is described with
                  <emphasis>id</emphasis>, <emphasis>name</emphasis> (optional
                  value) and <emphasis>performer </emphasis>(optional value).
                  It contains toolbar buttons for managing the listed activity
                  elements.</para></entry>

                  <entry><mediaobject>
                      <imageobject>
                        <imagedata contentdepth="100%"
                                   fileref="Images/processPropertiesActivitiesDialog.gif"
                                   scalefit="1" valign="middle" width="100%"/>
                      </imageobject>
                    </mediaobject></entry>
                </row>
              </tbody>
            </tgroup>
          </informaltable>
        </sect3>

        <sect3>
          <title>Transitions tab</title>

          <informaltable frame="none" rowsep="0">
            <tgroup cols="2" colsep="0">
              <tbody>
                <row>
                  <entry><mediaobject>
                      <imageobject>
                        <imagedata contentdepth="100%"
                                   fileref="Images/processPropertiesTransitionsDialog.gif"
                                   scalefit="1" valign="middle" width="100%"/>
                      </imageobject>
                    </mediaobject></entry>

                  <entry colsep="0" valign="middle"><para>It contains
                  information about all workflow process's transitions. Each
                  table row (transition) is described with
                  <emphasis>id</emphasis>, from (source), to (target) and
                  <emphasis>condition</emphasis> (optional value). It contains
                  toolbar buttons for managing the listed transition
                  elements.</para></entry>
                </row>
              </tbody>
            </tgroup>
          </informaltable>
        </sect3>

        <sect3>
          <title>Activity sets tab</title>

          <informaltable frame="none" rowsep="0">
            <tgroup cols="2" colsep="0">
              <tbody>
                <row>
                  <entry colsep="0" valign="middle"><para>It contains
                  information about all activity sets of the workflow process.
                  Each table row (activity set) is described with
                  <emphasis>id</emphasis>, <emphasis>activities</emphasis> and
                  <emphasis>transitions</emphasis>. It contains toolbar
                  buttons for managing the listed activity set
                  elements.</para></entry>

                  <entry valign="middle"><mediaobject>
                      <imageobject>
                        <imagedata contentdepth="100%"
                                   fileref="Images/processPropertiesActivitySetsDialog.gif"
                                   scalefit="1" valign="middle" width="100%"/>
                      </imageobject>
                    </mediaobject></entry>
                </row>
              </tbody>
            </tgroup>
          </informaltable>
        </sect3>
      </sect2>
    </sect1>

    <sect1>
      <title>Swimlanes (Pools and Lanes)</title>

      <para>Swimlanes are used to facilitate the graphical layout of a
      collection of processes and the activities they contain. They may
      designate participant information at the process level and performer
      information at the activity level. The Swimlane structure is depicted by
      a collection of non-overlapping rectangles called Pools. Each Pool may
      be further subdivided into a number of Lanes.</para>

      <informaltable frame="none" rowsep="0">
        <tgroup cols="2" colsep="0">
          <tbody>
            <row>
              <entry colsep="0" valign="middle"><mediaobject>
                  <imageobject>
                    <imagedata contentdepth="100%"
                               fileref="Images/pool_horizontal.jpg"
                               scalefit="1" valign="middle" width="100%"/>
                  </imageobject>
                </mediaobject></entry>

              <entry valign="middle"><mediaobject>
                  <imageobject>
                    <imagedata contentdepth="100%"
                               fileref="Images/pool_vertical.jpg" scalefit="1"
                               valign="middle" width="100%"/>
                  </imageobject>
                </mediaobject></entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>

      <sect2>
        <title>Pools</title>

        <informaltable frame="none" rowsep="0">
          <tgroup cols="2" colsep="0">
            <tbody>
              <row>
                <entry><mediaobject>
                    <imageobject>
                      <imagedata contentdepth="100%"
                                 fileref="Images/poolPropertiesDialog.gif"
                                 scalefit="1" valign="middle" width="100%"/>
                    </imageobject>
                  </mediaobject></entry>

                <entry colsep="0" valign="middle"><para>A Pool acts as the
                container for flow objects (activities and artifacts) and
                Sequence Flow (transitions and associations) between them.
                </para><para>Together Workflow Editor does not allow users to
                create or remove a pool. Pool is automatically being created
                or deleted whenever workflow process gets created/deleted.
                </para><para>The property panel for the pool shows the pool
                attributes which are editable, except the text field that
                displays the Id of referenced Workflow Process/Activity Set,
                and has only the link button to display the properties of the
                referenced Workflow Process/Activity Set.</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </sect2>

      <sect2>
        <title>Lanes</title>

        <para>Lanes are used to subdivide a Pool. All the activities within a
        Lane may inherit one or more properties from the Lane. A typical use
        of this is to give the Lanes "role names" and have the Activities
        inherit these role names as "Participant assignment/Performer
        expressions".</para>

        <informaltable frame="none" rowsep="0">
          <tgroup cols="2" colsep="0">
            <tbody>
              <row>
                <entry><mediaobject>
                    <imageobject>
                      <imagedata contentdepth="100%"
                                 fileref="Images/lanePropertiesDialog.gif"
                                 scalefit="1" valign="middle" width="100%"/>
                    </imageobject>
                  </mediaobject></entry>

                <entry colsep="0" valign="middle"><para>Together Workflow
                Editor does not allow users to create lanes using properties
                dialogs. The only way to create or delete a lane is by using
                TWE's Graph component. Lane is always being created as a
                representation of the Participant. Lanes are implicitly
                created whever user wants to insert a lane representation for
                the existing or a new participant into the graph. When
                activity is put into the lane (using graph component), the
                activity's performer becomes the participant which is a
                representation for that particular lane.</para><para>As
                described in <xref linkend="graphcomponent"/> , TWE also alows
                nesting of lanes.</para><para>The property dialog of the lane
                shows lane properties Id, Name, Performers and Nested Lanes.
                The Id and the name are editable fields. The performer of the
                lane is also editable. You can change the performer of the
                lane to link it with an another participant, or you can write
                your own expression for the performer. which are editable
                (including a performer of the lane), but you can not add or
                the remove the performer of the lane. The Nested Lanes can't
                be added or removed as well (it is possible only through the
                Graph component).</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </sect2>
    </sect1>

    <sect1>
      <title>External References</title>

      <para>External package concept allows you to re-use common Participant,
      Application and WorkflowProcess definitions contained within other
      Package definitions. You just need to define these common entities ones,
      and store it within a XPDL file, and then re-use it afterwards in all
      other XPDLs you create</para>

      <para>TWE provides possibility of referencing external Packages. After
      referencing it, automatically, every participant, application, type
      declaration or workflow process defined there in will be accessible from
      the main package.</para>

      <para>If external package we referenced also contains the references to
      other external packages, all of the package references will be imported
      in TWE in read-only mode.</para>

      <para>TWE's <emphasis>External package relations component</emphasis>
      will show the relations of the main package external packages, their
      external packages, and so on.</para>

      <sect2>
        <title>Adding External Packages</title>

        <informaltable frame="none">
          <tgroup cols="2" colsep="0">
            <tbody>
              <row>
                <entry align="justify" valign="middle"><para>This dialog
                appears when you press the package toolbar button, or Package
                menu item for adding external packages <inlinemediaobject>
                    <imageobject>
                      <imagedata fileref="Images/externalpackagesadd.gif"/>
                    </imageobject>
                  </inlinemediaobject>. It enables you to select the XPDL file
                from your disk, and to reference it as an external package for
                the package you are currently editing. As already mentioned,
                after adding external package, you are able to use
                participants, applications and workflow processes defined in
                that package.</para><para>NOTE: You can't add external package
                if the main XPDL package you are working on is not yet saved
                to the disc.</para></entry>

                <entry align="justify" valign="middle"><mediaobject>
                    <imageobject>
                      <imagedata contentdepth="100%"
                                 fileref="Images/extPackageAddDialog.gif"
                                 scalefit="1" valign="middle" width="100%"/>
                    </imageobject>
                  </mediaobject></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </sect2>

      <sect2>
        <title>Removing External Packages</title>

        <para>Action <emphasis>Remove external packages</emphasis>
        <inlinemediaobject>
            <imageobject>
              <imagedata fileref="Images/externalpackagesremove.gif"/>
            </imageobject>
          </inlinemediaobject> from the toolbox, or External packages menu
        removes external package from the current package.</para>

        <para>If this external package is not referenced by any other external
        package of the main package, it will be really removed from TWE's
        memory. In the case some of the elements from this external packages
        are in use (Applications, Participants or WorkflowProcesses), you'll
        be asked for the confirmation.</para>

        <informaltable frame="none">
          <tgroup cols="2" colsep="0">
            <tbody>
              <row>
                <entry align="center" valign="middle"><mediaobject>
                    <imageobject>
                      <imagedata contentdepth="100%"
                                 fileref="Images/ExtPackDeleteWarning.gif"
                                 scalefit="1" width="100%"/>
                    </imageobject>
                  </mediaobject></entry>

                <entry align="justify" valign="middle"><para>The external
                package mechanism allows packages and its elements
                (applications, processes and participants) to be multiple
                referenced.</para><para>Before the removement of the selected
                external package, if it contains any element that is
                referenced, and the external package reference that will be
                deleted is the last one, the warning message about removement
                of the external package is displayed.</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </sect2>

      <sect2>
        <title>External Participants</title>

        <para condition="demo-details">To get the following dialog, click
        button <inlinemediaobject>
            <imageobject>
              <imagedata fileref="Images/externalparticipants.gif"/>
            </imageobject>
          </inlinemediaobject> (or appropriate menu item from External
        Packages menu).</para>

        <informaltable condition="demo-emptytext" frame="none">
          <tgroup cols="2" colsep="0">
            <tbody>
              <row>
                <entry align="justify" valign="middle"><para>This dialog shows
                all participants of package's external packages. Every
                external participant is presented with its
                <emphasis>Id</emphasis>, <emphasis>Name</emphasis> (optional
                data), <emphasis>Participant Type</emphasis> and
                <emphasis>Description</emphasis> (optional
                data).</para></entry>

                <entry align="justify" valign="middle"><mediaobject>
                    <imageobject>
                      <imagedata contentdepth="100%"
                                 fileref="Images/participantsExternalDialog.gif"
                                 scalefit="1" width="100%"/>
                    </imageobject>
                  </mediaobject></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </sect2>

      <sect2>
        <title>External Processes</title>

        <para condition="demo-details">To get the following dialog, click
        button <inlinemediaobject>
            <imageobject>
              <imagedata fileref="Images/externalprocesses.gif"/>
            </imageobject>
          </inlinemediaobject> (or appropriate menu item from External
        Packages menu).</para>

        <informaltable condition="demo-emptytext" frame="none">
          <tgroup cols="2" colsep="0">
            <tbody>
              <row>
                <entry align="justify" valign="middle"><para>This dialog shows
                all workflow processes of package's external packages. Every
                external process is presented with its
                <emphasis>Id</emphasis>, <emphasis>Name</emphasis> (optional
                data) and Access level (optional data).</para></entry>

                <entry align="justify" valign="middle"><mediaobject>
                    <imageobject>
                      <imagedata contentdepth="100%"
                                 fileref="Images/processesExternalDialog.gif"
                                 width="100%"/>
                    </imageobject>
                  </mediaobject></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </sect2>

      <sect2>
        <title>External Applications</title>

        <para condition="demo-details">To get the following dialog, click
        button <inlinemediaobject>
            <imageobject>
              <imagedata fileref="Images/externalapplications.gif"/>
            </imageobject>
          </inlinemediaobject> (or appropriate menu item from External
        Packages menu).</para>

        <informaltable condition="demo-emptytext" frame="none">
          <tgroup cols="2" colsep="0">
            <tbody>
              <row>
                <entry align="justify" valign="middle"><para>This dialog shows
                all applications of package's external packages. Every
                external application is presented with its
                <emphasis>Id</emphasis>, <emphasis>Name</emphasis> (optional
                data) and <emphasis>Description</emphasis> (optional
                data).</para></entry>

                <entry align="justify" valign="middle"><mediaobject>
                    <imageobject>
                      <imagedata contentdepth="100%"
                                 fileref="Images/applicationsExternalDialog.gif"
                                 scalefit="1" width="100%"/>
                    </imageobject>
                  </mediaobject></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </sect2>

      <sect2>
        <title>External Type Declarations</title>

        <para condition="demo-details">To get the following dialog, click
        button <inlinemediaobject>
            <imageobject>
              <imagedata fileref="Images/externaltypedeclarations.gif"/>
            </imageobject>
          </inlinemediaobject> (or appropriate menu item from External
        Packages menu).</para>

        <informaltable condition="demo-emptytext" frame="none">
          <tgroup cols="2" colsep="0">
            <tbody>
              <row>
                <entry align="justify" valign="middle"><para>This dialog shows
                all type declarations of package's external packages. Every
                external type declaration is presented with its
                <emphasis>Id</emphasis>, <emphasis>Name</emphasis> (optional
                data) and <emphasis>Description</emphasis> (optional
                data).</para></entry>

                <entry align="justify" valign="middle"><mediaobject>
                    <imageobject>
                      <imagedata contentdepth="100%"
                                 fileref="Images/typedeclarationsExternalDialog.jpg"
                                 scalefit="1" width="100%"/>
                    </imageobject>
                  </mediaobject></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </sect2>
    </sect1>

    <sect1>
      <title>Type Declaration</title>

      <para>WfMC assumes a number of standard data types (string, reference,
      integer, float, date/time, etc.); such data types are relevant to
      workflow relevant data, system or environmental data or participant
      data. Expressions may be formed using such data types to support
      conditional evaluations.</para>

      <para>Sometimes set of data types that XPDL provides won't be enough, or
      you want to represent some data type with a special name to easily use
      it when defining Formal/Actual parameters. This XPDL feature allows you
      to declare new data type.</para>

      <para>Attributes for TypeDeclaration are:</para>

      <table condition="demo-details">
        <title>Type Declaration</title>

        <tgroup cols="3" colsep="1" rowsep="1">
          <colspec align="center" colname="col0" colnum="1"/>

          <colspec colname="col02" colnum="2" colwidth="2.00*"/>

          <colspec colname="col2" colnum="3" colwidth="1*"/>

          <thead>
            <row>
              <entry>Name</entry>

              <entry align="center">M/O</entry>

              <entry>Description</entry>
            </row>
          </thead>

          <tbody>
            <row>
              <entry colname="col0">Id</entry>

              <entry align="center" colname="col02">M</entry>

              <entry colname="col2">Used to identify the declared data
              type.</entry>
            </row>

            <row>
              <entry>Name</entry>

              <entry align="center">O</entry>

              <entry>Text used to identify the Declared Data Type.</entry>
            </row>

            <row>
              <entry>Description</entry>

              <entry align="center">O</entry>

              <entry>Short textual description of the Declared Data
              Type.</entry>
            </row>

            <row>
              <entry>Data Types</entry>

              <entry align="center">O</entry>

              <entry>Standard data types.</entry>
            </row>
          </tbody>
        </tgroup>
      </table>

      <informaltable condition="demo-emptytext" frame="none">
        <tgroup cols="2" colsep="0">
          <tbody>
            <row>
              <entry><mediaobject>
                  <imageobject>
                    <imagedata align="left" contentdepth="100%"
                               fileref="Images/TypeDeclarationDialog.jpg"
                               scalefit="1" valign="middle" width="100%"/>
                  </imageobject>
                </mediaobject></entry>

              <entry align="justify" valign="middle"><para>This property panel
              shows an example of a type declaration.</para><para>This panel
              can be get e.g. by selecting an existing TypeDeclaration in a
              Package tree, and asking for its properties. To create a new
              TypeDeclaration, you can press button <inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/typedeclarations.gif"/>
                  </imageobject>
                </inlinemediaobject> which will bring you the property panel
              with all defined Type declarations for the package. There in,
              you can press a button for creating new Type
              declaration.</para><para>TWE maintains all of WfMC data types
              that are provided: BasicType, DeclaredType, ShemaType,
              ExternalReference, RecordType, UnionType, EnumerationType and
              ArrayType.</para></entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>

      <para condition="demo-emptytext">The following table describes the basic
      data type:</para>

      <table condition="demo-emptytext">
        <title>Basic Data Type</title>

        <tgroup cols="3" colsep="1" rowsep="1">
          <colspec align="center" colnum="2"/>

          <thead>
            <row>
              <entry>Name</entry>

              <entry align="center">M/O</entry>

              <entry>Description</entry>
            </row>
          </thead>

          <tbody>
            <row>
              <entry>Type</entry>

              <entry align="center">M</entry>

              <entry><simplelist columns="1">
                  <member>STRING</member>

                  <member>FLOAT</member>

                  <member>INTEGER</member>

                  <member>REFERENCE</member>

                  <member>DATETIME</member>

                  <member>BOOLEAN</member>

                  <member>PERFORMER</member>
                </simplelist></entry>
            </row>
          </tbody>
        </tgroup>
      </table>

      <para condition="demo-emptytext">External Reference data type has the
      following attributes:</para>

      <table condition="demo-emptytext" frame="all">
        <title>External Reference</title>

        <tgroup cols="3">
          <thead>
            <row>
              <entry>Name</entry>

              <entry align="center">M/O</entry>

              <entry>Description</entry>
            </row>
          </thead>

          <tbody>
            <row>
              <entry>Xref</entry>

              <entry>O</entry>

              <entry>It specifies the identity of the entity within the
              external document.</entry>
            </row>

            <row>
              <entry>Location</entry>

              <entry>M</entry>

              <entry>It specifies the URI of the document that defines the
              type.</entry>
            </row>

            <row>
              <entry>Namespace</entry>

              <entry>O</entry>

              <entry>It allows specification of the scope in which the entity
              is defined.</entry>
            </row>
          </tbody>
        </tgroup>
      </table>

      <para condition="demo-emptytext">Using External Reference data type you
      may define e.g. some Java class as a new data type (for e.g.
      <filename>location = "com.abc.purchases.PO"</filename>).</para>
    </sect1>

    <sect1 xml:id="Package_Participants">
      <title>Workflow Participant</title>

      <para condition="demo-details">WfMC Meta-Model specification defines a
      simple in-built (Minimal) Organisational Model or permits access to an
      externally defined OM. Participants in TWE are just part of an
      Organisational Model - Minimal OM. The connection with the
      Organisational Model is used in Activity Definition (performer of an
      activity) and in the Process Definition (responsible of a
      process).</para>

      <para condition="demo-emptytext">Workflow Participants have a scope and
      visibility equivalent to extended attributes. All referenced Workflow
      Participants have to be defined in the scope where they are used, at
      least in the same package.</para>

      <para condition="demo-emptytext">The Workflow Participant is defined by
      a type and related information, which is a set of type specific
      attributes. This definition contains a basic set of 6 Workflow
      Participant types: <emphasis>resource set, resource, organizational
      unit, role, human,</emphasis> or <emphasis>system</emphasis>. A role and
      a resource are used in the sense of abstract actors. This definition is
      an abstraction level between the real performer and the activity, which
      has to be performed. During run time these abstract definitions are
      evaluated and assigned to concrete human(s) and/or program(s).</para>

      <para condition="demo-emptytext">These attributes are used to define a
      Workflow Participant:</para>

      <table condition="demo-emptytext" frame="all">
        <title>Workflow Participant</title>

        <tgroup cols="3">
          <thead>
            <row>
              <entry>Name</entry>

              <entry align="center">M/O</entry>

              <entry>Description</entry>
            </row>
          </thead>

          <tbody>
            <row>
              <entry>Id</entry>

              <entry align="center">M</entry>

              <entry>Used to identify the workflow participant
              definition.</entry>
            </row>

            <row>
              <entry>Participant Name</entry>

              <entry align="center">O</entry>

              <entry>Text used to identify a performer.</entry>
            </row>

            <row>
              <entry>Participant Type</entry>

              <entry align="center">M</entry>

              <entry>Definition of the type of workflow participant entity.
              Type of a workflow participant.</entry>
            </row>

            <row>
              <entry>Participant Description</entry>

              <entry align="center">O</entry>

              <entry>Short textual description of a workflow
              participant.</entry>
            </row>

            <row>
              <entry>External Reference</entry>

              <entry align="center">O</entry>

              <entry>A reference to an external specification of a
              participant.</entry>
            </row>
          </tbody>
        </tgroup>
      </table>

      <para condition="demo-emptytext">The Participant entity type attribute
      characterizes the participant to be an individual, an organisational
      unit or an abstract resource such as a machine. Here is a list of
      possible participant types:</para>

      <table condition="demo-emptytext" frame="all">
        <title>Participant Types</title>

        <tgroup cols="2">
          <colspec colname="col1" colnum="1" colwidth="1.00*"/>

          <colspec colname="col2" colnum="2" colwidth="1.68*"/>

          <thead>
            <row>
              <entry>Name</entry>

              <entry colname="col2">Description</entry>
            </row>
          </thead>

          <tbody>
            <row>
              <entry>RESOURCE_SET</entry>

              <entry colname="col2">A set of resources.</entry>
            </row>

            <row>
              <entry>RESOURCE</entry>

              <entry colname="col2">A specific resource agent (as a
              machine).</entry>
            </row>

            <row>
              <entry>ROLE</entry>

              <entry colname="col2">This type allows performer addressing by a
              role or skill set. A role in this context is a function a human
              has within an organization. As a function isn't necessarily
              unique, a coordinator may be defined (for administrative
              purposes or in case of exception handling) and a list of humans
              the role is related to.</entry>
            </row>

            <row>
              <entry>ORGANIZATIONAL_UNIT</entry>

              <entry colname="col2">A department or any other unit within an
              organizational model.</entry>
            </row>

            <row>
              <entry>HUMAN</entry>

              <entry colname="col2">A human interacting with the system via an
              application presenting a user interface to the
              participant.</entry>
            </row>

            <row>
              <entry>SYSTEM</entry>

              <entry colname="col2">An automatic agent.</entry>
            </row>
          </tbody>
        </tgroup>
      </table>

      <para condition="demo-emptytext">TWE provides the way to define
      participants at Package level and at Process Definition level. In order
      to do that, you can select appropriate toolbar button or menu item for
      showing all the participants defined at package/process level. This will
      bring a table property panel, where you'll have a button for creating a
      new participant.</para>

      <informaltable condition="demo-emptytext" frame="none">
        <tgroup cols="2" colsep="0">
          <tbody>
            <row>
              <entry><mediaobject>
                  <imageobject>
                    <imagedata align="left" contentdepth="100%"
                               fileref="Images/participantNewDialog.gif"
                               scalefit="1" valign="middle" width="100%"/>
                  </imageobject>
                </mediaobject></entry>

              <entry align="justify" valign="middle"><para>You are able to
              insert the lanes representing all the defined participants into
              a TWE graph using the following choice button <inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/lanesselect.gif"/>
                  </imageobject>
                </inlinemediaobject> from graph's toolbar , and it'll be
              represented as a new swim-lane in a graph. Then, you can put the
              activities (and artifacts) in there, which actually means that
              activity's performer is the participant represented by the
              swim-lane.</para><para>Even if you do not define any
              participant, TWE's graph component has special lanes that can be
              used to define activity's performer as an expression (can be
              created by toolbar buttons <inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/freetextlane.png"/>
                  </imageobject>
                </inlinemediaobject> and <inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/commonexplane.png"/>
                  </imageobject>
                </inlinemediaobject>). </para><para>All the activities which
              performer is not a reference to an existing Participant will be
              graphically displayed inside those special graph
              swim-lanes.</para><para>There is another way of defining Package
              level Participants, and this is by using a Graph's toolbox
              button. Pressing this button <inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/lane.gif"/>
                  </imageobject>
                </inlinemediaobject>, and than clicking in the graph will
              automatically add another participant represented as a new
              swim-lane in currently selected WorkflowProcess's graph. This
              participant's type will be Role, and you can change it through
              the property panel.</para></entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
    </sect1>

    <sect1 xml:id="Package_Application">
      <title>Workflow Application</title>

      <para condition="demo-details">These are some of the attributes for
      application entity which are defined by WfMC specification:</para>

      <table condition="demo-emptytext" frame="all">
        <title>General attributes</title>

        <tgroup align="left" cols="3" colsep="1" rowsep="1">
          <colspec align="center" colnum="2" colwidth="1.00*"/>

          <thead>
            <row>
              <entry>Name</entry>

              <entry align="center">M/O</entry>

              <entry>Description</entry>
            </row>
          </thead>

          <tbody>
            <row>
              <entry>Id</entry>

              <entry align="center">M</entry>

              <entry>Used to identify the workflow application
              definition.</entry>
            </row>

            <row>
              <entry>Name</entry>

              <entry align="center">M</entry>

              <entry>Text used to identify an application (may be interpreted
              as a generic name of the tool).</entry>
            </row>

            <row>
              <entry>Description</entry>

              <entry align="center">O</entry>

              <entry>Short textual description of the application.</entry>
            </row>

            <row>
              <entry>Extended attributes</entry>

              <entry align="center">O</entry>

              <entry>Optional extensions to meet individual implementation
              needs.</entry>
            </row>

            <row>
              <entry>Invocation Parameters</entry>

              <entry align="center">O</entry>

              <entry>Parameters that are interchanged with the application via
              the invocation interface.</entry>
            </row>
          </tbody>
        </tgroup>
      </table>

      <informaltable condition="demo-emptytext" frame="none">
        <tgroup cols="2" colsep="0">
          <tbody>
            <row>
              <entry align="justify" valign="middle"><para>There is more than
              one way of getting <emphasis>Workflow Application
              Declaration</emphasis> settings. One way would be choosing an
              icon <inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/packageapplications.gif"/>
                  </imageobject>
                </inlinemediaobject> at main toolbar. Another way would be
              selecting Package's <emphasis>Applications</emphasis> in a
              Package tree component, and then right clicking and selecting
              Properties action (or directly selecting this action from Edit
              menu).</para><para>User can create new instance for application
              entity, edit some existing application or delete it
              (modification and deletion of application entity is not allowed
              if it is the entity from externally referenced package). The
              picture on the right shows a property panel for editing
              application attributes.</para><para>Workflow applications that
              are defined for the package are accessible by any activity that
              is defined at any package's workflow process.</para><para>When
              defining a Tool for an activity, you'll be able to chose amongst
              all applications defined inside the particular WorkflowProcess
              definition, Package definition, or inside definition of the
              Package's external packages. If the application from the process
              level has the same Id as the one from the package level (it
              overrides the one from the package level), the one from the
              package level won't be displayed. The same stands for overriding
              the application from external package.</para></entry>

              <entry align="justify" valign="middle"><mediaobject>
                  <imageobject>
                    <imagedata contentdepth="100%"
                               fileref="Images/applicationNewDialog.gif"
                               scalefit="1" valign="middle" width="100%"/>
                  </imageobject>
                </mediaobject></entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>

      <para condition="demo-emptytext">As it is shown on the picture, there
      are two choices for Invocation Parameters:</para>

      <itemizedlist condition="demo-emptytext">
        <listitem>
          <para>Formal Parameters and</para>
        </listitem>

        <listitem>
          <para>External Reference</para>
        </listitem>
      </itemizedlist>

      <sect2 xml:id="Formal_Parameters">
        <title>Formal Parameters</title>

        <informaltable condition="demo-details" frame="none">
          <tgroup cols="2" colsep="0">
            <tbody>
              <row>
                <entry valign="middle"><mediaobject>
                    <imageobject>
                      <imagedata align="left" contentdepth="100%"
                                 fileref="Images/formalParametersDialog.gif"
                                 scalefit="1" valign="middle" width="100%"/>
                    </imageobject>
                  </mediaobject></entry>

                <entry align="justify" valign="middle"><para>Formal Parameters
                are parameters that are interchanged with the application via
                the invocation interface. They are passed during invocation
                and returned of control (e.g. of an invoked application or
                invoked sub-process). </para><para>The order of formal
                parameters can be changed by dragging an item with the
                mouse.</para><para>Using appropriate toolbar buttons, you can
                create a new FormalParameter, edit, delete or duplicate
                selected one, as well as to get all the references to the
                selected FormalParameter.</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>

        <para condition="demo-emptytext">The attributes that define Formal
        Parameter are:</para>

        <table condition="demo-emptytext" frame="all">
          <title>Formal Parameter</title>

          <tgroup cols="3">
            <thead>
              <row>
                <entry>Name</entry>

                <entry align="center">M/O</entry>

                <entry>Description</entry>
              </row>
            </thead>

            <tbody>
              <row>
                <entry>Id</entry>

                <entry>M</entry>

                <entry>Identifier for the parameter</entry>
              </row>

              <row>
                <entry>Mode</entry>

                <entry>M</entry>

                <entry><itemizedlist>
                    <listitem>
                      <para>IN Input Parameters</para>
                    </listitem>

                    <listitem>
                      <para>OUT Output Parameters</para>
                    </listitem>

                    <listitem>
                      <para>INOUT Parameters used as input and output</para>
                    </listitem>
                  </itemizedlist></entry>
              </row>

              <row>
                <entry>Name</entry>

                <entry>O</entry>

                <entry>Name of the parameter</entry>
              </row>

              <row>
                <entry>Is Array</entry>

                <entry>O</entry>

                <entry>If it is an array type</entry>
              </row>

              <row>
                <entry>Data Type</entry>

                <entry>O</entry>

                <entry>Data type of the formal parameter</entry>
              </row>

              <row>
                <entry>Initial value</entry>

                <entry>O</entry>

                <entry>Initial value for parameter</entry>
              </row>

              <row>
                <entry>Description</entry>

                <entry>O</entry>

                <entry>Textual description of the formal parameter</entry>
              </row>

              <row>
                <entry>Length</entry>

                <entry align="center">O</entry>

                <entry>The length of the data.</entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </sect2>

      <sect2 xml:id="External_Reference">
        <title>External Reference</title>

        <para condition="demo-details">An External Reference can be used
        instead of formal parameters. External Reference is a reference to an
        external definition of an entity.</para>

        <para condition="demo-emptytext">External Reference has the following
        attributes:</para>

        <table condition="demo-emptytext" frame="all">
          <title>External Reference</title>

          <tgroup cols="3">
            <thead>
              <row>
                <entry>Name</entry>

                <entry align="center">M/O</entry>

                <entry>Description</entry>
              </row>
            </thead>

            <tbody>
              <row>
                <entry>Xref</entry>

                <entry>O</entry>

                <entry>It specifies the identity of the entity within the
                external document.</entry>
              </row>

              <row>
                <entry>Location</entry>

                <entry>M</entry>

                <entry>It specifies the URI of the document that defines the
                type.</entry>
              </row>

              <row>
                <entry>Namespace</entry>

                <entry>O</entry>

                <entry>It allows specification of the scope in which the
                entity is defined.</entry>
              </row>
            </tbody>
          </tgroup>
        </table>

        <para condition="demo-emptytext">With External Reference, Application
        (and some other entities) may be defined by XML schema (for e.g.
        <filename>location = http://abc.com/schemas/po.xsd</filename>), by a
        Java class (for e.g. <filename>location =
        "com.abc.purchases.PO"</filename>), by WSDL document (for e.g.
        <filename>location =
        "http://abc.com/services/poService.wsdl"</filename>)...</para>
      </sect2>
    </sect1>

    <sect1 xml:id="Package_RelevanData">
      <title>Workflow Relevant Data</title>

      <para condition="demo-details">Workflow Relevant Data (or, in XPDL, Data
      Field) represent the variables of a Process Definition or Package
      Definition. They are typically used to maintain decision data (used in
      conditions) or reference data values (parameters), which are passed
      between activities or sub-processes. The workflow relevant data list
      defines all data objects, which can be used within the workflow process.
      The attribute <literal>TYPE</literal> explicitly specifies all
      information needed for a workflow management system to define an
      appropriate data object for storing data, which is to be handled, by an
      active instance of the workflow process.</para>

      <para condition="demo-emptytext">Workflow Relevant Data can be defined
      in a Workflow Process (the Workflow Process Relevant Data) and in a
      Package (the Package Relevant Data). The scopes differ in that the
      former may only be accessed by entities defined inside that process,
      while the latter may be accessed by entities inside any process defined
      within that model.</para>

      <para condition="demo-emptytext">Workflow Relevant Data has a scope that
      is defined by the directly surrounding meta-model entity and is not
      nested. The visibility of its identifier is also defined by that
      entity.</para>

      <para condition="demo-emptytext">Attributes of Workflow Relevant Data
      are:</para>

      <table condition="demo-emptytext" frame="all">
        <title>Relevant Data</title>

        <tgroup cols="3">
          <colspec colname="col01" colnum="1" colwidth="2.00*"/>

          <colspec colname="col1" colnum="2" colwidth="1*"/>

          <colspec colname="col03" colnum="3" colwidth="2.00*"/>

          <thead>
            <row>
              <entry>Name</entry>

              <entry align="center">M/O</entry>

              <entry>Description</entry>
            </row>
          </thead>

          <tbody>
            <row>
              <entry colname="col01">Id</entry>

              <entry align="center" colname="col1">M</entry>

              <entry colname="col03">Used to identify the workflow relevant
              data.</entry>
            </row>

            <row>
              <entry>Data Type(s)</entry>

              <entry align="center">M</entry>

              <entry>Data Type.</entry>
            </row>

            <row>
              <entry>Name</entry>

              <entry align="center">O</entry>

              <entry>Text used to identify the workflow relevant data.</entry>
            </row>

            <row>
              <entry>Is Array</entry>

              <entry align="center">O</entry>

              <entry>Indicates if it is an array.</entry>
            </row>

            <row>
              <entry>Initial Value</entry>

              <entry align="center">O</entry>

              <entry>Pre-assignment of data for run time.</entry>
            </row>

            <row>
              <entry>Length</entry>

              <entry align="center">O</entry>

              <entry>The length of the data.</entry>
            </row>

            <row>
              <entry>Description</entry>

              <entry align="center">O</entry>

              <entry>Short textual description of the defined data.</entry>
            </row>
          </tbody>
        </tgroup>
      </table>

      <para condition="demo-emptytext">When parameters are passed to a called
      subflow outside the current model definition, it is the responsibility
      of the <markup>process designer(s)</markup> to ensure that data type
      compatibility exists across the parameter set.</para>

      <para condition="demo-emptytext">Workflow relevant data naming must be
      unique within a process model. If such data is passed between processes
      as parameters, the convention at this version of specification is that
      copied semantics will be used. Responsibility rests with process
      designers / administrators to ensure consistent name / datatype usage
      within process definitions / models to support sub-flow operations
      (including any required remote process interoperability).</para>

      <para>There is an icon <inlinemediaobject>
          <imageobject>
            <imagedata fileref="Images/packageworkflowrelevantdata.gif"/>
          </imageobject>
        </inlinemediaobject> in Package's part of the Toolbar and icon
      <inlinemediaobject>
          <imageobject>
            <imagedata fileref="Images/processworkflowrelevantdata.gif"/>
          </imageobject>
        </inlinemediaobject> in process's part of the toolbar, and also on
      appropriate menus, for displaying all workflow relevant data for the
      selected Package/WorkflowProcess.</para>

      <informaltable condition="demo-details" frame="none">
        <tgroup cols="2" colsep="0">
          <tbody>
            <row>
              <entry valign="middle"><mediaobject>
                  <imageobject>
                    <imagedata align="left" contentdepth="100%"
                               fileref="Images/wfVariableNewDialog.gif"
                               scalefit="1" valign="middle" width="100%"/>
                  </imageobject>
                </mediaobject></entry>

              <entry align="justify" valign="middle"><para>Like other similar
              table property panels, amongst others, there are also buttons
              "New" and "Edit" for adding new or editing existing Workflow
              Relevant Data. The picture on the left shows property panel for
              editing Workflow Relevant Data.</para><para>When defining (or
              editing) an workflow variable, the following attributes can be
              set: <emphasis>id</emphasis> (mandatory attribute),
              <emphasis>name</emphasis>, <emphasis>initial value ,
              <emphasis>length</emphasis></emphasis>,
              <emphasis>IsArray</emphasis> (array indicator),
              <emphasis>Type</emphasis>, d<emphasis>escription</emphasis> and
              <emphasis>extended attributes</emphasis>.</para><para>The
              attribute <emphasis>Type</emphasis> explicitly specifies all
              information needed for a workflow management system to define an
              appropriate data object for storing data, which is to be
              handled, by an active instance of the workflow
              process.</para><para>If you are at process level, and you create
              (override) some workflow relevant data with the same Id as the
              one from the package level, only one of them (the one from the
              process level) can be used as a reference from other entities.
              E.g. you can choose just the one from the process level to be
              the actual parameter for some application or
              subflow.</para></entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
    </sect1>

    <sect1>
      <title>Formal Parameters</title>

      <informaltable condition="demo-details" frame="none">
        <tgroup cols="2" colsep="0">
          <tbody>
            <row>
              <entry valign="middle"><mediaobject>
                  <imageobject>
                    <imagedata align="left" contentdepth="100%"
                               fileref="Images/FormalParameterDialog.jpg"
                               scalefit="1" valign="middle" width="100%"/>
                  </imageobject>
                </mediaobject></entry>

              <entry align="justify" valign="middle"><para>Formal Parameters
              are parameters that are interchanged with the application via
              the invocation interface. They are passed during invocation and
              return of control (e.g. an invoked application or invoked
              sub-process). </para><para>Every formal parameter is presented
              with its <emphasis>Id</emphasis>, <emphasis>Mode</emphasis>,
              <emphasis>Data type and Description</emphasis>.</para><para>To
              add new FormalParameter for the process, you can click on the
              button <inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/processformalparameters.gif"/>
                  </imageobject>
                </inlinemediaobject> (the right-most button in the toolbar).
              This will bring you a table property panel with a list of all
              FormalParameters already defined for the selected process. There
              is a New button there in, which will create a new
              FormalParameter, and will bring a property panel for edit
              it.</para></entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
    </sect1>

    <sect1 xml:id="Package_ExtendedAttributes">
      <title>Extended Attributes</title>

      <para>XPDL contains most of the entities, which are likely to be
      required in the process definition modelling. Sometimes, there is a need
      for some additional information (user or vendor specific). Extended
      Attributes are the primary method to support such extensions. These are
      attributes defined by the user or vendor, where necessary, to express
      any additional entity characteristics.</para>

      <informaltable condition="demo-details" frame="none">
        <tgroup cols="2" colsep="0">
          <tbody>
            <row>
              <entry valign="middle"><mediaobject>
                  <imageobject>
                    <imagedata align="left" contentdepth="100%"
                               fileref="Images/extendedAttributeDialog.jpg"
                               scalefit="1" valign="middle" width="100%"/>
                  </imageobject>
                </mediaobject></entry>

              <entry align="justify" valign="middle"><para>TWE provides use of
              the Extended Attributes like follows: you can define "simple"
              part of Extended Attribute by entering <emphasis>Name</emphasis>
              and <emphasis>Value</emphasis> attributes. If you want to define
              "complex" part of Extended Attribute, which could be consisted
              of tags that belong to the XPDL or some other namespace, you
              have to enter it as a free-text in the <emphasis>Complex
              content</emphasis> field.</para><para>The picture on the left
              shows property panel representing extended
              attribute.</para><para>When defining new ExtendedAttribute (or
              modifying one already defined), user has possibility to choose
              its name amongst the names of extended attributes already
              defined for that element type (Activity, Participant, ...). The
              list of names depends on the names already defined in opened
              XPDL (and its externally referenced XPDLs). The list of names is
              refreshed each time new ExtendedAttribute is being added or when
              one already defined is being re-defined or
              deleted.</para></entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
    </sect1>

    <sect1>
      <title>Activity Set</title>

      <para condition="demo-details">An activity set is a self-contained set
      of activities and transitions. Transitions in the set should refer only
      to activities in the same set and there should be no transitions into or
      out of the set. Activity sets can be executed by block
      activities.</para>

      <informaltable condition="demo-emptytext" frame="none" rowsep="0">
        <tgroup cols="2" colsep="0">
          <tbody>
            <row>
              <entry colsep="0" valign="middle"><para>Typically, you will
              create a new activity set in the WorkflowProcess using Graph
              component's toolbar icon <inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/activityset.gif"/>
                  </imageobject>
                </inlinemediaobject> for doing that. Previously you must
              insure that the graph for the WorkflowProcess where you want to
              insert the activity set is visible.</para><para>The picture on
              the right shows property panel for editing
              ActivitySet.</para><para>Every activity set is presented with
              its <emphasis>Id</emphasis>, <emphasis>activities</emphasis>
              (number of activities in the activity set) and
              <emphasis>transitions</emphasis> (number of transitions in the
              activity set).</para><para>As you can see, there is only one
              attribute to define, and that is the Id. There are two tables
              where you can see short description of all activities and
              transitions already defined for this ActivitySet. As with other
              table panels, you are able to manage them.</para></entry>

              <entry valign="middle"><mediaobject>
                  <imageobject>
                    <imagedata contentdepth="100%"
                               fileref="Images/activitySetDialog.gif"
                               scalefit="1" valign="middle" width="100%"/>
                  </imageobject>
                </mediaobject></entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
    </sect1>

    <sect1 xml:id="Process_Activity">
      <title>Activity</title>

      <para>Generally, any process comprises a number of steps, which lead
      towards the overall goal. Workflow process consists of a number of
      workflow activities. The workflow activity is a piece of work that will
      be done by combination of resources and computer applications.</para>

      <table>
        <title>Activity attributes</title>

        <tgroup cols="3" colsep="1" rowsep="1">
          <colspec align="center" colname="col0" colnum="1" colwidth="2.33*"/>

          <colspec colname="col02" colnum="2" colwidth="1.00*"/>

          <colspec colname="col2" colnum="3" colwidth="6.04*"/>

          <thead>
            <row>
              <entry>Name</entry>

              <entry align="center" colname="col02">M/O</entry>

              <entry colname="col2">Description</entry>
            </row>
          </thead>

          <tbody>
            <row>
              <entry>Name</entry>

              <entry align="center" colname="col02">O</entry>

              <entry colname="col2">Text used to identify process
              activity.</entry>
            </row>

            <row>
              <entry colname="col0">Performers</entry>

              <entry align="center" colname="col02">O</entry>

              <entry colname="col2">Link to entity workflow participant. May
              be an expression. Default: Any Participant.</entry>
            </row>

            <row>
              <entry colname="col0">Start mode</entry>

              <entry align="center" colname="col02">O</entry>

              <entry colname="col2">Describes how the execution of an Activity
              is triggered.</entry>
            </row>

            <row>
              <entry colname="col0">Finish mode</entry>

              <entry align="center" colname="col02">O</entry>

              <entry colname="col2">Describes how the system operates at the
              end of the Activity.</entry>
            </row>

            <row>
              <entry colname="col0">Deadline</entry>

              <entry align="center" colname="col02">O</entry>

              <entry colname="col2">Specification of a deadline and action to
              be taken if it is reached.</entry>
            </row>

            <row>
              <entry colname="col0">Priority</entry>

              <entry align="center" colname="col02">O</entry>

              <entry colname="col2">A value that describes the initial
              priority of this activity when the execution starts. If this
              attribute is not defined but a priority is defined in the
              Process definition then that is used. By default it is assumed
              that the priority levels are the natural numbers starting with
              zero, and that the higher the value the higher the priority
              (e.g.: 0, 1, ...).</entry>
            </row>

            <row>
              <entry colname="col0">Limit</entry>

              <entry align="center" colname="col02">O</entry>

              <entry colname="col2">Expected duration for time management
              purposes (e.g. starting an escalation procedure etc.) in units
              of DurationUnit. It is counted from the starting date/time of
              the Process. The consequences of reaching the limit value are
              not defined in this document (e.g. vendor specific).</entry>
            </row>

            <row>
              <entry colname="col0">Icon</entry>

              <entry align="center" colname="col02">O</entry>

              <entry colname="col2">Address (path- and filename) for an icon
              to represent the activity.</entry>
            </row>

            <row>
              <entry colname="col0">Documentation</entry>

              <entry align="center" colname="col02">O</entry>

              <entry colname="col2">The address (e.g. path - and filename) for
              a help file or a description file of the activity.</entry>
            </row>

            <row>
              <entry>Description</entry>

              <entry align="center" colname="col02">O</entry>

              <entry colname="col2">Textual description of the
              activity.</entry>
            </row>
          </tbody>
        </tgroup>
      </table>

      <para>Activities are associated with their performers (which are
      workflow participants), and application assignments. Optional
      information about activity may be associated with: starting and stopping
      manner, usage of specific workflow relevant data, preconditions for
      starting and postconditions for finishing the activity.</para>

      <para>The following diagram illustrates the generic structure of
      activities:</para>

      <figure>
        <title>Generic Structure of Activities</title>

        <mediaobject>
          <imageobject>
            <imagedata contentdepth="100%"
                       fileref="Images/Process_Activity_Structures.gif"
                       scalefit="1" width="100%"/>
          </imageobject>
        </mediaobject>
      </figure>

      <para>Activities and other activity-like objects are inserted using
      buttons on graph's "Toolbox" toolbar.</para>

      <sect2 xml:id="Activity_Atomic">
        <title>Activities and Graph component</title>

        <para>Although it is possible to create a new activity through the
        property panels, the usual way to do it is through the graph
        component.</para>

        <para>The following table shows the picture of how the graph
        represents a certain XPDL activity type, and short description of each
        type of the activity:</para>

        <informaltable frame="none">
          <tgroup cols="2">
            <tbody>
              <row>
                <entry align="center" valign="middle"><mediaobject>
                    <imageobject>
                      <imagedata fileref="Images/act_start.jpg"/>
                    </imageobject>
                  </mediaobject></entry>

                <entry>Start event activity - the place where the process
                begins.</entry>
              </row>

              <row>
                <entry align="center" valign="middle"><mediaobject>
                    <imageobject>
                      <imagedata fileref="Images/act_end.jpg"/>
                    </imageobject>
                  </mediaobject></entry>

                <entry>End event activity - the place where the process
                ends.</entry>
              </row>

              <row>
                <entry align="center" valign="middle"><mediaobject>
                    <imageobject>
                      <imagedata fileref="Images/act_no.jpg"/>
                    </imageobject>
                  </mediaobject></entry>

                <entry>Manual (No implementation) activities are atomic
                (Generic Activities). They are the smallest units of work,
                although even this activity may produce more than one work
                item for its performer.</entry>
              </row>

              <row>
                <entry align="center" valign="middle"><mediaobject>
                    <imageobject>
                      <imagedata fileref="Images/act_tool.jpg"/>
                    </imageobject>
                  </mediaobject></entry>

                <entry>Task-Application activities are atomic (Generic
                Activity). They are the smallest units of work.</entry>
              </row>

              <row>
                <entry align="center" valign="middle"><mediaobject
                    condition="demo-emptytext">
                    <imageobject>
                      <imagedata fileref="Images/act_subflow.jpg"/>
                    </imageobject>
                  </mediaobject></entry>

                <entry condition="demo-details-table">Subflow is another
                activity type. It implements a whole new workflow process.
                Process definition within the subflow is entirely independent
                from the first one (where subflow activity resides). It has
                its own set of activities, internal transitions, participants,
                application definitions and other workflow relevant data. When
                clicking on the box with the "plus" sign, the graph of the
                sub-flow gets shown.</entry>
              </row>

              <row condition="demo-emptytext">
                <entry align="center" valign="middle"><mediaobject>
                    <imageobject>
                      <imagedata fileref="Images/act_block.jpg"/>
                    </imageobject>
                  </mediaobject></entry>

                <entry>An activity may be a block activity that executes an
                activity set , or map of activities and transitions.
                Activities and transitions within an activity set share the
                name space of the containing process. When clicking on the box
                with the "plus" sign, the graph of the activity set gets
                shown.</entry>
              </row>

              <row condition="demo-emptytext">
                <entry align="center" valign="middle"><mediaobject>
                    <imageobject>
                      <imagedata fileref="Images/act_route-gatewayexclusive.jpg"/>
                    </imageobject>
                  </mediaobject></entry>

                <entry>Dummy (route) activity does nothing on its own. This
                type of activities is used for exclusive synchronization and
                constructing complex and sophisticated "exclusvie"
                transitional conditions</entry>
              </row>

              <row condition="demo-emptytext">
                <entry align="center" valign="middle"><mediaobject>
                    <imageobject>
                      <imagedata fileref="Images/act_route-gatewayparallel.jpg"/>
                    </imageobject>
                  </mediaobject></entry>

                <entry>Dummy (route) activity does nothing on its own. This
                type of activities is used for parallel synchronization and
                parallel (unconditional) branching</entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>

        <para>Icons for inserting different types of activities from the graph
        toolbox are the same as the ones included in the previously explained
        picture of the activities in the graph. Graph's toolbox icon for
        inserting Start event activity into the graph is <inlinemediaobject>
            <imageobject>
              <imagedata fileref="Images/start.gif"/>
            </imageobject>
          </inlinemediaobject> and for inserting End event activity into is
        <inlinemediaobject>
            <imageobject>
              <imagedata fileref="Images/end.gif"/>
            </imageobject>
          </inlinemediaobject>. For the manual activity, there is a toolbox
        icon <inlinemediaobject>
            <imageobject>
              <imagedata fileref="Images/genericactivity.gif"/>
            </imageobject>
          </inlinemediaobject>, for Tool activities <inlinemediaobject>
            <imageobject>
              <imagedata fileref="Images/activitytool.gif"/>
            </imageobject>
          </inlinemediaobject>, for subflow activities<inlinemediaobject>
            <imageobject>
              <imagedata fileref="Images/subflowactivity.gif"/>
            </imageobject>
          </inlinemediaobject>, for block activities <inlinemediaobject>
            <imageobject>
              <imagedata fileref="Images/blockactivity.gif"/>
            </imageobject>
          </inlinemediaobject> and for route activities <inlinemediaobject>
            <imageobject>
              <imagedata fileref="Images/gatewayexclusive.gif"/>
            </imageobject>
          </inlinemediaobject> (for exclusive gateway route activity) and
        <inlinemediaobject>
            <imageobject>
              <imagedata fileref="Images/gatewayparallel.gif"/>
            </imageobject>
          </inlinemediaobject> (for parallel gateway route activity). Once
        selected, mouse cursor will show what type of object you'll insert.
        Activity is created using some default values for their properties,
        which typically are to be changed. Right clicking the object in the
        graph shows a context menu, and there is item representing action for
        getting property panel. Different than others, Block and SubFlow
        activities have additional menu item "descend into..." which is used
        to display the graph of the referenced ActivitySet/Workflow
        Process.</para>

        <para>Beside this, TWE offers a special feature to select an Icon for
        particular activity. When you open activity's property panel, for the
        Icon entry you can select some of the additional Icons we offer (this
        list can be easily extended by putting more icons in
        tweactivityicons.jar file). The selected icon will appear instead the
        default one.</para>
      </sect2>

      <sect2 xml:id="Activity_Subflow">
        <title>Activity property panel</title>

        <para>In this section are explained various property panels concerning
        different types of activities: activities without implementation
        (manual), sub-flow, route, tool and block activities. All information
        are organized in several tabs: general, type, transition restriction,
        simulation information, and extended attributes.</para>

        <sect3>
          <title>General tab - displays general activity data</title>

          <informaltable frame="none" rowsep="0">
            <tgroup cols="2" colsep="0">
              <tbody>
                <row>
                  <entry valign="middle"><mediaobject>
                      <imageobject>
                        <imagedata contentdepth="100%"
                                   fileref="Images/activityPropertiesGeneralDialog.gif"
                                   scalefit="1" valign="middle" width="100%"/>
                      </imageobject>
                    </mediaobject></entry>

                  <entry colsep="0" valign="middle"><para>Tab has tree parts.
                  First part contains activity <emphasis>id</emphasis>,
                  <emphasis>name</emphasis>, <emphasis>performer</emphasis>
                  (can be a reference to a participant or an expression),
                  <emphasis>start mode</emphasis> (can be automatic or manual)
                  and <emphasis>finish mode</emphasis> (can be automatic or
                  manual). </para><para>Second part shows all deadlines and
                  also offers toolbar buttons with options to handle list of
                  deadlines.</para><para>Third part contains
                  <emphasis>priority</emphasis> (describes initial priority
                  for activity), <emphasis>limit</emphasis> (expected duration
                  - for time management purposes), <emphasis>icon</emphasis>
                  (reference to the icon representing this activity),
                  <emphasis>documentation</emphasis> (reference to an external
                  document) and <emphasis>description</emphasis>.</para><para>
                  Fields icon and documentation have drop down list to select
                  one of the offered icons. If selected, this icon will
                  replace the original one representing this activity within
                  the graph.</para><para>(the list of available icons can be
                  extended by putting additional icons within the
                  tweactivityicons.jar file)</para></entry>
                </row>
              </tbody>
            </tgroup>
          </informaltable>
        </sect3>

        <sect3>
          <title>Type tab</title>

          <para>This tab contains some specific data concerning the particular
          type of an activity. For activities without implementation (manual)
          <inlinemediaobject>
              <imageobject>
                <imagedata fileref="Images/genericactivity.gif"/>
              </imageobject>
            </inlinemediaobject> this tab doesn't contain any specific
          data.</para>

          <informaltable frame="none" rowsep="0">
            <tgroup cols="2" colsep="0">
              <tbody>
                <row>
                  <entry colsep="0" valign="middle"><para>Block activity type
                  property panel contains information about <emphasis>activity
                  set id</emphasis>, which is a reference to defined
                  ActivitySet (re-usable block of activities and transitions
                  which shares the context of the workflow process where
                  defined).</para><para>A block activity <inlinemediaobject>
                      <imageobject>
                        <imagedata fileref="Images/blockactivity.gif"/>
                      </imageobject>
                    </inlinemediaobject> executes referenced ActivitySet or
                  self-contained activities/transitions map. When block
                  activity is being executed, the execution proceeds to the
                  first activity within the ActivitySet it references, and
                  continues within the set until it reaches ActivitySet's exit
                  activity (an activity with no output transitions). Execution
                  then returns to follow the output transitions of the block
                  activity.</para></entry>

                  <entry valign="middle"><mediaobject>
                      <imageobject>
                        <imagedata contentdepth="100%"
                                   fileref="Images/activityPropertiesBlockActDialog.gif"
                                   scalefit="1" valign="middle" width="100%"/>
                      </imageobject>
                    </mediaobject></entry>
                </row>
              </tbody>
            </tgroup>
          </informaltable>

          <informaltable frame="none" rowsep="0">
            <tgroup cols="2" colsep="0">
              <tbody>
                <row>
                  <entry valign="middle"><mediaobject>
                      <imageobject>
                        <imagedata contentdepth="100%"
                                   fileref="Images/activityPropertiesToolActDialog.gif"
                                   scalefit="1" valign="middle" width="100%"/>
                      </imageobject>
                    </mediaobject></entry>

                  <entry colsep="0" valign="middle"><para>Task-application
                  activity property panel enables to define a reference to the
                  application required for enactment engine to run, in order
                  to perform the activity. </para><para>Basically, this tab
                  allows you to pick the desired application by selecting it
                  from the combo-box, and then allows definition of actual
                  parameters (variables or expressions) to pass to the
                  referenced application depending on its formal
                  parameters.</para></entry>
                </row>
              </tbody>
            </tgroup>
          </informaltable>

          <informaltable frame="none" rowsep="0">
            <tgroup cols="2" colsep="0">
              <tbody>
                <row>
                  <entry colsep="0" valign="middle"><para>Subflow
                  <inlinemediaobject>
                      <imageobject>
                        <imagedata fileref="Images/subflowactivity.gif"/>
                      </imageobject>
                    </inlinemediaobject> is type of activity whose
                  implementation is another workflow
                  process.</para><para>Firstly, attribute
                  <emphasis>id</emphasis> should be set.
                  <emphasis>Id</emphasis> defines workflow process that will
                  be executed. In TWE you are setting this attribute by
                  picking the one of the WorkflowProcesses defined within the
                  combo box. Beside the combo, you have a shortcut to display
                  the properties of the WorkflowProcess selected within the
                  combo.</para><para>Then, <emphasis>execution
                  (mode)</emphasis> attribute should be set.
                  <emphasis>Synchronous execution mode</emphasis> suspends
                  execution of calling process until sub-flow is finished.
                  <emphasis>Asynchronous mode</emphasis>, spawns a new thread
                  of execution for sub-flow process, which is then executed at
                  its own pace, independently from calling workflow
                  process.</para><para>While entering <emphasis>actual
                  parameters</emphasis> that will be passed to subflow
                  process, TWE shows the list of corresponding
                  <emphasis>formal parameters</emphasis> of the referenced
                  sub-process.</para></entry>

                  <entry valign="middle"><mediaobject>
                      <imageobject>
                        <imagedata contentdepth="100%"
                                   fileref="Images/activityPropertiesSubflowActDialog.gif"
                                   scalefit="1" valign="middle" width="100%"/>
                      </imageobject>
                    </mediaobject></entry>
                </row>

                <row>
                  <entry valign="middle"><mediaobject>
                      <imageobject>
                        <imagedata contentdepth="100%"
                                   fileref="Images/activityPropertiesRestrictionDialog.gif"
                                   scalefit="1" valign="middle" width="100%"/>
                      </imageobject>
                    </mediaobject></entry>

                  <entry colsep="0" valign="middle"><para>When gateway
                  (routing) activity is selected, type tab allows to change
                  the gateway type from parallel to exclusive or vice-versa.
                  In the case of exclusive gateways with more than one
                  outgoing transition from the gateway, the order of
                  calculating outgoing transition conditions is important.
                  This order is determined in XPDL by the order of
                  TransitionRef elements within its TransitionRefs collection.
                  From here, you can control that order. The way of doing it
                  is to simply change positions of the target activities (the
                  activities that outgoing transitions are leading to) within
                  the given list.</para></entry>
                </row>
              </tbody>
            </tgroup>
          </informaltable>
        </sect3>

        <sect3>
          <title>Simulation Information tab</title>

          <informaltable frame="none" rowsep="0">
            <tgroup cols="2" colsep="0">
              <tbody>
                <row>
                  <entry colsep="0" valign="middle"><para>Here are defined
                  various information about simulation: whether the activity
                  is instantiated once or multiple times, cost, waiting and
                  working times and duration.</para></entry>

                  <entry valign="middle"><mediaobject>
                      <imageobject>
                        <imagedata contentdepth="100%"
                                   fileref="Images/activityPropertiesSimulationDialog.gif"
                                   scalefit="1" valign="middle" width="100%"/>
                      </imageobject>
                    </mediaobject></entry>
                </row>
              </tbody>
            </tgroup>
          </informaltable>
        </sect3>

        <sect3>
          <title>Extended Attributes tab</title>

          <informaltable frame="none" rowsep="0">
            <tgroup cols="2" colsep="0">
              <tbody>
                <row>
                  <entry valign="middle"><mediaobject>
                      <imageobject>
                        <imagedata contentdepth="100%"
                                   fileref="Images/activityPropertiesExtAttDialog.gif"
                                   scalefit="1" valign="middle" width="100%"/>
                      </imageobject>
                    </mediaobject></entry>

                  <entry colsep="0" valign="middle"><para>It contains
                  information about all extended attributes of the selected
                  activity in form a of a table and operations for their
                  managing. Every table row (extended attribute) is described
                  with <emphasis>name</emphasis> and
                  <emphasis>value</emphasis>. </para></entry>
                </row>
              </tbody>
            </tgroup>
          </informaltable>
        </sect3>
      </sect2>
    </sect1>

    <sect1 xml:id="artifacts">
      <title>Artifacts</title>

      <para>To satisfy additional modeling concepts that are not part of the
      basic set of flow elements (activities and transitions), BPMN provides
      the concept of Artifacts that can be linked to the existing Activity
      object through Associations. Thus, Artifacts do <emphasis
      role="bold">not</emphasis> affect the basic sequence flow, nor do they
      affect mappings to execution languages.Artifacts are used to show
      additional information about a Process that is not directly related to
      its sequence flow.</para>

      <para>At this point, BPMN provides three standard Artifacts: A Data
      Object, a Group, and an Annotation. TWE currently allows you to use the
      first two types of artifacts.</para>

      <para>An Artifact is a graphical object that provides supporting
      information about the Process or elements within the Process. However,
      as mentioned, it does <emphasis role="bold">not</emphasis> directly
      affect the flow of the Process. BPMN provides a specific graphical
      representation for the different artifacts:</para>

      <figure>
        <title>BPMN Notation for Artifacts</title>

        <mediaobject>
          <imageobject>
            <imagedata align="center" contentdepth="100%"
                       fileref="Images/artifacts_bpmn_notation.jpg"
                       scalefit="1" valign="middle" width="100%"/>
          </imageobject>
        </mediaobject>
      </figure>

      <table>
        <title>Artifact attributes</title>

        <tgroup cols="3" colsep="1" rowsep="1">
          <colspec align="center" colname="col0" colnum="1" colwidth="2.33*"/>

          <colspec colname="col02" colnum="2" colwidth="1.00*"/>

          <colspec colname="col2" colnum="3" colwidth="6.04*"/>

          <thead>
            <row>
              <entry>Name</entry>

              <entry align="center" colname="col02">M/O</entry>

              <entry colname="col2">Description</entry>
            </row>
          </thead>

          <tbody>
            <row>
              <entry>Name</entry>

              <entry align="center" colname="col02">O</entry>

              <entry colname="col2">Name of the artifact.</entry>
            </row>

            <row>
              <entry colname="col0">ArtifactType</entry>

              <entry align="center" colname="col02">M</entry>

              <entry colname="col2">DataObject | Group | Annotation</entry>
            </row>

            <row>
              <entry colname="col0">TextAnnotation</entry>

              <entry align="center" colname="col02">O</entry>

              <entry colname="col2">Visible textual description.</entry>
            </row>

            <row>
              <entry colname="col0">DataObject</entry>

              <entry align="center" colname="col02">O</entry>

              <entry colname="col2">When artifact is DataObject type, it
              describes other attributes of an artifact.</entry>
            </row>
          </tbody>
        </tgroup>
      </table>

      <para>In BPMN, a Data Object is considered an Artifact because it does
      not have any direct affect on the sequence flow of the Process, but it
      does provide information about what the Process does. That is, how
      documents, data, and other objects are used and updated during the
      Process. While the name - Data Object may imply an electronic document,
      it can be used to represent many different types of objects, both
      electronic and physical.</para>

      <para>As an Artifact, Data Objects generally will be associated with
      activities. An Association will be used to make the connection between
      the Data Object and the Flow Object. This means that the behavior of the
      Process can be modeled without Data Objects for modelers who want to
      reduce clutter. The same Process can be modeled with Data Objects for
      modelers who want to include more information without changing the basic
      behavior of the Process.</para>

      <para>The following is a sample of process modeled with an artifact
      showing the information about the document flowing from one activity to
      another:</para>

      <figure>
        <title>Artifact Sample</title>

        <mediaobject>
          <imageobject>
            <imagedata align="center" contentdepth="100%"
                       fileref="Images/artifact_dataobject_sample.jpg"
                       scalefit="1" valign="middle" width="100%"/>
          </imageobject>
        </mediaobject>
      </figure>

      <para>The following table shows the picture of how the graph represents
      different XPDL artifact type:</para>

      <informaltable frame="none">
        <tgroup cols="2">
          <tbody>
            <row>
              <entry><mediaobject>
                  <imageobject>
                    <imagedata fileref="Images/artifact_dataobject.jpg"/>
                  </imageobject>
                </mediaobject></entry>

              <entry>Data object artifact.</entry>
            </row>

            <row>
              <entry><mediaobject>
                  <imageobject>
                    <imagedata fileref="Images/artifact_annotation.jpg"/>
                  </imageobject>
                </mediaobject></entry>

              <entry>Text annotation artifact.</entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>

      <informaltable frame="none" rowsep="0">
        <tgroup cols="2" colsep="0">
          <tbody>
            <row>
              <entry colsep="0" valign="middle"><para>Icons for inserting
              different types of artifacts from the graph toolbox are
              <inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/dataobject.gif"/>
                  </imageobject>
                </inlinemediaobject> for dataobject artifact, and
              <inlinemediaobject>
                  <imageobject>
                    <imagedata fileref="Images/annotation.gif"/>
                  </imageobject>
                </inlinemediaobject>for text annotation
              artifact.</para><para>The picture on the right shows property
              panel for defining artifact properties.</para></entry>

              <entry valign="middle"><mediaobject>
                  <imageobject>
                    <imagedata contentdepth="100%"
                               fileref="Images/artifactPropertiesDialog.gif"
                               scalefit="1" valign="middle" width="100%"/>
                  </imageobject>
                </mediaobject></entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
    </sect1>

    <sect1 xml:id="Process_Transitions">
      <title>Transitions</title>

      <para condition="demo-details">Link between two activities is
      established by transitions. Transitions are more than just the links
      between activities. They also describe the condition that must be
      satisfied in order to get from the source to the target activity (This
      condition is evaluated during workflow execution).</para>

      <para condition="demo-emptytext">Typically, you will insert the
      transitions using TWE's Graph component (although it is possible to do
      it through the property panels).</para>

      <para condition="demo-emptytext">Graph component allows you to chose
      between conditional <inlinemediaobject>
          <imageobject>
            <imagedata fileref="Images/transition.gif"/>
          </imageobject>
        </inlinemediaobject>, unconditional <inlinemediaobject>
          <imageobject>
            <imagedata fileref="Images/unconditional.gif"/>
          </imageobject>
        </inlinemediaobject>, otherwise <inlinemediaobject>
          <imageobject>
            <imagedata fileref="Images/transitionotherwise.gif"/>
          </imageobject>
        </inlinemediaobject>, exception <inlinemediaobject>
          <imageobject>
            <imagedata fileref="Images/transitionexception.gif"/>
          </imageobject>
        </inlinemediaobject> and default exception <inlinemediaobject>
          <imageobject>
            <imagedata fileref="Images/transitiondefaultexception.gif"/>
          </imageobject>
        </inlinemediaobject> transition for the insertion. If you want to
      insert a circular transition (a transition from activity to itself), you
      can chose the type of the transition you like, and double-click on the
      activity within the graph.</para>

      <para condition="demo-emptytext">If insertion of the transition is not
      allowed by some rules (e.g. you can't insert two transitions connecting
      the same activities), you'll be notified or graph component will simply
      deny to insert such transition.</para>

      <para condition="demo-emptytext">Here is the table of transition
      attributes:</para>

      <table condition="demo-emptytext">
        <title>Transition</title>

        <tgroup cols="3" colsep="1" rowsep="1">
          <colspec align="center" colnum="2"/>

          <thead>
            <row>
              <entry>Name</entry>

              <entry>M/O</entry>

              <entry>Description</entry>
            </row>
          </thead>

          <tbody>
            <row>
              <entry>Condition</entry>

              <entry>O</entry>

              <entry>A Transition condition expression based on workflow
              relevant data.</entry>
            </row>

            <row>
              <entry>Description</entry>

              <entry>O</entry>

              <entry>Short textual description of the Transition.</entry>
            </row>

            <row>
              <entry>Extended Attributes</entry>

              <entry>O</entry>

              <entry>Optional extensions to meet individual implementation
              needs.</entry>
            </row>

            <row>
              <entry>Id</entry>

              <entry>M</entry>

              <entry>Used to identify the Transition.</entry>
            </row>

            <row>
              <entry>From</entry>

              <entry>M</entry>

              <entry>Determines the FROM source of a Transition (Activity
              Identifier).</entry>
            </row>

            <row>
              <entry>To</entry>

              <entry>M</entry>

              <entry>Determines the TO target of a Transition (Activity
              Identifier).</entry>
            </row>

            <row>
              <entry>Name</entry>

              <entry>O</entry>

              <entry>Text used to identify the Transition.</entry>
            </row>
          </tbody>
        </tgroup>
      </table>

      <informaltable frame="none" rowsep="0">
        <tgroup cols="2" colsep="0">
          <tbody>
            <row>
              <entry valign="middle"><mediaobject>
                  <imageobject>
                    <imagedata contentdepth="100%"
                               fileref="Images/transitionDialog.gif"
                               scalefit="1" valign="middle" width="100%"/>
                  </imageobject>
                </mediaobject></entry>

              <entry colsep="0" valign="middle"><para>The picture on the left
              shows a dialog for editing Transition attributes.
              </para><para>TWE helps you when you are composing Transition
              condition - by clicking the arrow right to the text box for
              entering condition, you get a list of possible variables you can
              use within condition. Also, you can change transition from/to
              attributes by chosing another from the combo-boxes. There is a
              link next to those combo boxes to navigate to the selected
              Activity.</para></entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
    </sect1>

    <sect1 xml:id="Associations">
      <title>Associations</title>

      <para condition="demo-details">Link between activity and artifact is
      established by association.</para>

      <para condition="demo-details">An Association does not have a specific
      mapping to an execution language element. These objects and the
      Artifacts they connect to provide additional information for the reader
      of the BPMN Diagram, but do not directly affect the execution of the
      Process.</para>

      <para condition="demo-emptytext">Typically, you will insert the
      association using TWE's Graph component (although it is possible to do
      it through the property panels).</para>

      <para condition="demo-emptytext">Graph component allows you to chose
      between directional <inlinemediaobject>
          <imageobject>
            <imagedata fileref="Images/association.gif"/>
          </imageobject>
        </inlinemediaobject>, non-directional <inlinemediaobject>
          <imageobject>
            <imagedata fileref="Images/association_nodirection.gif"/>
          </imageobject>
        </inlinemediaobject> and bi-directional <inlinemediaobject>
          <imageobject>
            <imagedata fileref="Images/association_bidirection.gif"/>
          </imageobject>
        </inlinemediaobject> association for the insertion.</para>

      <para condition="demo-emptytext">If insertion of the association is not
      allowed by some rules (e.g. you can't insert two associations connecting
      the same artifact and activity, or you can't insert association between
      two artifacts or two activities), graph component will simply deny to
      insert such association.</para>

      <para condition="demo-emptytext">Here is the table of transition
      attributes:</para>

      <table condition="demo-emptytext">
        <title>Association</title>

        <tgroup cols="3" colsep="1" rowsep="1">
          <colspec align="center" colnum="2"/>

          <thead>
            <row>
              <entry>Name</entry>

              <entry>M/O</entry>

              <entry>Description</entry>
            </row>
          </thead>

          <tbody>
            <row>
              <entry>Id</entry>

              <entry>M</entry>

              <entry>Used to identify the Transition.</entry>
            </row>

            <row>
              <entry>Name</entry>

              <entry>O</entry>

              <entry>Text used to identify association.</entry>
            </row>

            <row>
              <entry>Source</entry>

              <entry>M</entry>

              <entry>Determines the source of an Association (Activity or
              Artifact Identifier).</entry>
            </row>

            <row>
              <entry>Target</entry>

              <entry>M</entry>

              <entry>Determines the target of an Association (Activity or
              Artifact Identifier).</entry>
            </row>

            <row>
              <entry>Association direction</entry>

              <entry>M</entry>

              <entry>The direction for association, possible values: None, To,
              From, Both</entry>
            </row>
          </tbody>
        </tgroup>
      </table>

      <informaltable frame="none" rowsep="0">
        <tgroup cols="2" colsep="0">
          <tbody>
            <row>
              <entry colsep="0" valign="middle"><para
              condition="demo-emptytext">Picture on the right shows a dialog
              for editing Association attributes.</para><para>You can change
              association source/target attributes by chosing another from the
              combo-boxes. There is a link next to those combo boxes to
              navigate to the selected Activity/Artifact.</para></entry>

              <entry valign="middle"><mediaobject>
                  <imageobject>
                    <imagedata contentdepth="100%"
                               fileref="Images/associationPropertyDialog.gif"
                               scalefit="1" valign="middle" width="100%"/>
                  </imageobject>
                </mediaobject></entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
    </sect1>
  </chapter>

  <chapter>
    <title>XPDL from Scratch</title>

    <para>These are the steps that are typically required in order to build
    new XPDL:</para>

    <itemizedlist>
      <listitem>
        <para>Click on the icon <inlinemediaobject>
            <imageobject>
              <imagedata fileref="Images/new.gif"/>
            </imageobject>
          </inlinemediaobject> from the main toolbar (the left-most icon in
        the toolbar), or select menuitem File-&gt;New to create a new
        Package.</para>
      </listitem>

      <listitem>
        <para>Click on the icon <inlinemediaobject>
            <imageobject>
              <imagedata fileref="Images/packageproperties.gif"/>
            </imageobject>
          </inlinemediaobject> from the main toolbar or select menuitem
        Package-&gt;Package properties to get the property panel for editing
        properties of newly created Package:</para>

        <informaltable frame="none" rowsep="0">
          <tgroup cols="2" colsep="0">
            <tbody>
              <row>
                <entry colsep="0" valign="middle"><para>Here you can edit some
                of the package attributes, like Id, Name, the Type of the
                scripting language used when writing expressions, ...</para>
                <para>Click on the icon <inlinemediaobject>
                    <imageobject>
                      <imagedata fileref="Images/applyandclose.gif"/>
                    </imageobject>
                  </inlinemediaobject> from the dialog's toolbar to apply the
                changes, and to close the dialog</para></entry>

                <entry valign="middle"><mediaobject>
                    <imageobject>
                      <imagedata contentdepth="100%"
                                 fileref="Images/exmpl_pkgproperties.jpg"
                                 scalefit="1" valign="middle" width="100%"/>
                    </imageobject>
                  </mediaobject></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </listitem>

      <listitem>
        <para>Click on the icon <inlinemediaobject>
            <imageobject>
              <imagedata fileref="Images/save.gif"/>
            </imageobject>
          </inlinemediaobject> or <inlinemediaobject>
            <imageobject>
              <imagedata fileref="Images/saveas.gif"/>
            </imageobject>
          </inlinemediaobject> from the main toolbar or select menuitem
        Package-&gt;Save or Package-&gt;Save As... to save new Package into
        XPDL file:</para>

        <informaltable frame="none" rowsep="0">
          <tgroup cols="2" colsep="0">
            <tbody>
              <row>
                <entry colsep="0" valign="middle"><para>Browse the file system
                and choose the folder where will you save Package</para>
                <para>Enter the name of the file (the default is the Id of the
                Package)</para> <para>Select the extension for the XPDL file
                (the default is xpdl)</para> <para>Click Save
                button</para></entry>

                <entry valign="middle"><mediaobject>
                    <imageobject>
                      <imagedata contentdepth="100%"
                                 fileref="Images/exmpl_savepkg.jpg"
                                 scalefit="1" valign="middle" width="100%"/>
                    </imageobject>
                  </mediaobject></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </listitem>

      <listitem>
        <para>Click on the icon <inlinemediaobject>
            <imageobject>
              <imagedata fileref="Images/packageparticipants.gif"/>
            </imageobject>
          </inlinemediaobject> or select menuitem Package-&gt;Participants to
        get property panel with information about Participants defined on
        Package level, and then click on the icon <inlinemediaobject>
            <imageobject>
              <imagedata fileref="Images/new_small.gif"/>
            </imageobject>
          </inlinemediaobject> on the property panel to define new
        Participant:</para>

        <informaltable frame="none" rowsep="0">
          <tgroup cols="2" colsep="0">
            <tbody>
              <row>
                <entry colsep="0" valign="middle"><para>Here you can edit some
                attributes like Id, Name, Type, Description, ....</para>
                <para>Click on the icon <inlinemediaobject>
                    <imageobject>
                      <imagedata fileref="Images/check.gif"/>
                    </imageobject>
                  </inlinemediaobject> from the dialog's toolbar in order to
                apply the changes.</para> <para>Click on the icon
                <inlinemediaobject>
                    <imageobject>
                      <imagedata fileref="Images/nav_left_red.gif"/>
                    </imageobject>
                  </inlinemediaobject> or <inlinemediaobject>
                    <imageobject>
                      <imagedata fileref="Images/parentelementpanel.gif"/>
                    </imageobject>
                  </inlinemediaobject> in order to go back to the previous
                property panel</para></entry>

                <entry valign="middle"><mediaobject>
                    <imageobject>
                      <imagedata contentdepth="100%"
                                 fileref="Images/exmpl_newparticipant.jpg"
                                 scalefit="1" valign="middle" width="100%"/>
                    </imageobject>
                  </mediaobject></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>

        <para>Repeat this step until you define all of the participants you
        need.</para>
      </listitem>

      <listitem>
        <para condition="demo-details">Click on the icon <inlinemediaobject>
            <imageobject>
              <imagedata fileref="Images/packageapplications.gif"/>
            </imageobject>
          </inlinemediaobject> or select menuitem Package-&gt;Applications to
        get property panel with information about Applications defined on
        Package level, and then click on the icon <inlinemediaobject>
            <imageobject>
              <imagedata fileref="Images/new_small.gif"/>
            </imageobject>
          </inlinemediaobject> on the property panel to define new
        Application:</para>

        <informaltable condition="demo-emptytext" frame="none" rowsep="0">
          <tgroup cols="2" colsep="0">
            <tbody>
              <row>
                <entry colsep="0" valign="middle"><para>Edit some attributes
                like Id, Name, Description.</para> <para>Click on the icon
                <inlinemediaobject>
                    <imageobject>
                      <imagedata fileref="Images/check.gif"/>
                    </imageobject>
                  </inlinemediaobject> from the dialog's toolbar in order to
                apply the changes.</para> <para>Add necessary Formal
                parameters by clicking the icon <inlinemediaobject>
                    <imageobject>
                      <imagedata fileref="Images/new_small.gif"/>
                    </imageobject>
                  </inlinemediaobject> on the Formal parameters section (this
                will show another property panel for editing newly created
                Formal parameter - edit it, go back to this property panel,
                and repeat the step until you define all of them).</para>
                <para>If necessary, add Extended attributes for the
                application by clicking the icon <inlinemediaobject>
                    <imageobject>
                      <imagedata fileref="Images/new_small.gif"/>
                    </imageobject>
                  </inlinemediaobject> on the Extended attributes section
                (this will show another property panel for editing newly
                created Extended attribute - edit it, go back to this property
                panel, and repeat the step until you define all of
                them)</para> <para>Click on the icon <inlinemediaobject>
                    <imageobject>
                      <imagedata fileref="Images/nav_left_red.gif"/>
                    </imageobject>
                  </inlinemediaobject> or <inlinemediaobject>
                    <imageobject>
                      <imagedata fileref="Images/parentelementpanel.gif"/>
                    </imageobject>
                  </inlinemediaobject> in order to go back to the previous
                property panel</para></entry>

                <entry valign="middle"><mediaobject>
                    <imageobject>
                      <imagedata contentdepth="100%"
                                 fileref="Images/exmpl_newapplication.jpg"
                                 scalefit="1" valign="middle" width="100%"/>
                    </imageobject>
                  </mediaobject></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>

        <para condition="demo-emptytext">Repeat this step until you define all
        of the applications you need.</para>

        <para condition="demo-emptytext">After you finish with defining
        Applications, close the dialog.</para>
      </listitem>

      <listitem condition="demo-emptytext">
        <para>Click on the icon <inlinemediaobject>
            <imageobject>
              <imagedata fileref="Images/processnew.gif"/>
            </imageobject>
          </inlinemediaobject> from the main toolbar, or select menuitem
        Package-&gt;Insert new process to create a new WorkflowProcess.</para>
      </listitem>

      <listitem condition="demo-emptytext">
        <para>Click on the icon <inlinemediaobject>
            <imageobject>
              <imagedata fileref="Images/processproperties.gif"/>
            </imageobject>
          </inlinemediaobject> from the main toolbar or select menuitem
        Process-&gt;Process properties to get the property panel for editing
        properties of newly created Workflow Process:</para>

        <informaltable frame="none" rowsep="0">
          <tgroup cols="2" colsep="0">
            <tbody>
              <row>
                <entry colsep="0" valign="middle"><para>Here you can edit some
                of the process attributes, like Id, Name, Access level
                ...</para> <para>Click on the icon <inlinemediaobject>
                    <imageobject>
                      <imagedata fileref="Images/applyandclose.gif"/>
                    </imageobject>
                  </inlinemediaobject> from the dialog's toolbar to apply the
                changes, and to close the dialog</para></entry>

                <entry valign="middle"><mediaobject>
                    <imageobject>
                      <imagedata contentdepth="100%"
                                 fileref="Images/exmpl_processproperties.jpg"
                                 scalefit="1" valign="middle" width="100%"/>
                    </imageobject>
                  </mediaobject></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </listitem>

      <listitem condition="demo-emptytext">
        <para>Click on the icon <inlinemediaobject>
            <imageobject>
              <imagedata fileref="Images/processworkflowrelevantdata.gif"/>
            </imageobject>
          </inlinemediaobject> or select menuitem Process-&gt;Workflow
        variables to get property panel with information about Workflow
        variables defined for the Process, and then click on the icon
        <inlinemediaobject>
            <imageobject>
              <imagedata fileref="Images/new_small.gif"/>
            </imageobject>
          </inlinemediaobject> on the property panel to define new Workflow
        variable:</para>

        <informaltable frame="none" rowsep="0">
          <tgroup cols="2" colsep="0">
            <tbody>
              <row>
                <entry colsep="0" valign="middle"><para>Here you can edit some
                attributes like Id, Name, Type, Sub-Type, Initial value,
                Description, ...</para> <para>Click on the icon
                <inlinemediaobject>
                    <imageobject>
                      <imagedata fileref="Images/check.gif"/>
                    </imageobject>
                  </inlinemediaobject> from the dialog's toolbar in order to
                apply the changes.</para> <para>Click on the icon
                <inlinemediaobject>
                    <imageobject>
                      <imagedata fileref="Images/nav_left_red.gif"/>
                    </imageobject>
                  </inlinemediaobject> or <inlinemediaobject>
                    <imageobject>
                      <imagedata fileref="Images/parentelementpanel.gif"/>
                    </imageobject>
                  </inlinemediaobject> in order to go back to the previous
                property panel</para></entry>

                <entry valign="middle"><mediaobject>
                    <imageobject>
                      <imagedata contentdepth="100%"
                                 fileref="Images/exmpl_newwfvariable.jpg"
                                 scalefit="1" valign="middle" width="100%"/>
                    </imageobject>
                  </mediaobject></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>

        <para>Repeat this step until you define all of the variables you
        need.</para>
      </listitem>

      <listitem condition="demo-emptytext">
        <para>Click on the icon <inlinemediaobject>
            <imageobject>
              <imagedata fileref="Images/lanesselect.gif"/>
            </imageobject>
          </inlinemediaobject> from the graph toolbar. You'll get the list of
        all Participants you've defined, plus so called Free text expression
        lane (which is not a representation of the participant from the model
        but a special Graph swim-lane for holding activities which performer
        is defined as an expression). By selecting Participant from the list,
        the lane representing that participant is being inserted into the
        Graph. Put all the necessary Participant lanes into the Graph (they'll
        be represented as a swim-lanes).</para>
      </listitem>

      <listitem condition="demo-emptytext">
        <para>Use the icons from the Graph's toolbox (<inlinemediaobject>
            <imageobject>
              <imagedata fileref="Images/start.gif"/>
            </imageobject>
          </inlinemediaobject>,<inlinemediaobject>
            <imageobject>
              <imagedata fileref="Images/end.gif"/>
            </imageobject>
          </inlinemediaobject>,<inlinemediaobject>
            <imageobject>
              <imagedata fileref="Images/genericactivity.gif"/>
            </imageobject>
          </inlinemediaobject>,<inlinemediaobject>
            <imageobject>
              <imagedata fileref="Images/activitytool.gif"/>
            </imageobject>
          </inlinemediaobject>,<inlinemediaobject>
            <imageobject>
              <imagedata fileref="Images/subflowactivity.gif"/>
            </imageobject>
          </inlinemediaobject>,<inlinemediaobject>
            <imageobject>
              <imagedata fileref="Images/blockactivity.gif"/>
            </imageobject>
          </inlinemediaobject>,<inlinemediaobject>
            <imageobject>
              <imagedata fileref="Images/gatewayexclusive.gif"/>
            </imageobject>
          </inlinemediaobject>,<inlinemediaobject>
            <imageobject>
              <imagedata fileref="Images/gatewayparallel.gif"/>
            </imageobject>
          </inlinemediaobject>,<inlinemediaobject>
            <imageobject>
              <imagedata fileref="Images/transition.gif"/>
            </imageobject>
          </inlinemediaobject>,<inlinemediaobject>
            <imageobject>
              <imagedata fileref="Images/unconditional.gif"/>
            </imageobject>
          </inlinemediaobject>,<inlinemediaobject>
            <imageobject>
              <imagedata fileref="Images/transitionotherwise.gif"/>
            </imageobject>
          </inlinemediaobject>,<inlinemediaobject>
            <imageobject>
              <imagedata fileref="Images/transitionexception.gif"/>
            </imageobject>
          </inlinemediaobject>,<inlinemediaobject>
            <imageobject>
              <imagedata fileref="Images/transitiondefaultexception.gif"/>
            </imageobject>
          </inlinemediaobject>) in order to insert different kinds of
        activities into the graph, and to connect them.</para>
      </listitem>

      <listitem condition="demo-emptytext">
        <para>Right click on the graph objects representing activities you've
        inserted to get the popup menu. Select Properties menuitem to get the
        property panel for editing activity properties (or simply double-click
        on the activity object in the graph).</para>

        <para>Depending on the activity type, and the number of outgoing
        transitions in the case of "gateway" (route) activity, you'll get
        different property panels (different Type tabs).</para>

        <informaltable frame="none" rowsep="0">
          <tgroup cols="2" colsep="0">
            <tbody>
              <row>
                <entry colsep="0" valign="middle"><mediaobject>
                    <imageobject>
                      <imagedata contentdepth="100%"
                                 fileref="Images/exmpl_actno.jpg" scalefit="1"
                                 width="100%"/>
                    </imageobject>
                  </mediaobject></entry>

                <entry valign="middle"><mediaobject>
                    <imageobject>
                      <imagedata contentdepth="100%"
                                 fileref="Images/exmpl_acttool.jpg"
                                 scalefit="1" valign="middle" width="100%"/>
                    </imageobject>
                  </mediaobject></entry>
              </row>

              <row>
                <entry colsep="0" valign="middle"><mediaobject>
                    <imageobject>
                      <imagedata contentdepth="100%"
                                 fileref="Images/exmpl_actroute.jpg"
                                 scalefit="1" width="100%"/>
                    </imageobject>
                  </mediaobject></entry>

                <entry valign="middle"><mediaobject>
                    <imageobject>
                      <imagedata contentdepth="100%"
                                 fileref="Images/exmpl_actstartevent.jpg"
                                 scalefit="1" valign="middle" width="100%"/>
                    </imageobject>
                  </mediaobject></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>

        <para>Browse through the tabs and edit activity's properties. For the
        tool activity, add a new Tool and select application reference, and
        define actual parameters.</para>

        <para>Be sure you applied all the changes by clicking the icon
        <inlinemediaobject>
            <imageobject>
              <imagedata fileref="Images/check.gif"/>
            </imageobject>
          </inlinemediaobject> from the dialog's toolbar.</para>
      </listitem>

      <listitem condition="demo-emptytext">
        <para>Right click on the graph objects representing transitions you've
        inserted to get the popup menu. Select Properties menuitem to get the
        property panel for editing transition properties (you can also simply
        double-click on the transition object in the graph):</para>

        <informaltable frame="none" rowsep="0">
          <tgroup cols="2" colsep="0">
            <tbody>
              <row>
                <entry colsep="0" valign="middle"><para>If necessary, change
                transition condition's type.</para> <para>If necessary, define
                condition expression by the help of the icon next to the text
                area for defining expression (it'll offer you the list of the
                variables you can use for the conditions).</para> <para>Click
                on the icon <inlinemediaobject>
                    <imageobject>
                      <imagedata fileref="Images/check.gif"/>
                    </imageobject>
                  </inlinemediaobject> from the dialog's toolbar in order to
                apply the changes.</para></entry>

                <entry valign="middle"><mediaobject>
                    <imageobject>
                      <imagedata contentdepth="100%"
                                 fileref="Images/exmpl_trans.jpg" scalefit="1"
                                 valign="middle" width="100%"/>
                    </imageobject>
                  </mediaobject></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </listitem>

      <listitem condition="demo-emptytext">
        <para>Use the icons from the Graph's toolbox (<inlinemediaobject>
            <imageobject>
              <imagedata fileref="Images/dataobject.gif"/>
            </imageobject>
          </inlinemediaobject>,<inlinemediaobject>
            <imageobject>
              <imagedata fileref="Images/annotation.gif"/>
            </imageobject>
          </inlinemediaobject>,<inlinemediaobject>
            <imageobject>
              <imagedata fileref="Images/association.gif"/>
            </imageobject>
          </inlinemediaobject>,<inlinemediaobject>
            <imageobject>
              <imagedata fileref="Images/association_nodirection.gif"/>
            </imageobject>
          </inlinemediaobject>,<inlinemediaobject>
            <imageobject>
              <imagedata fileref="Images/association_bidirection.gif"/>
            </imageobject>
          </inlinemediaobject>) in order to insert different kinds of
        artifacts into the graph, and to connect them.</para>
      </listitem>

      <listitem condition="demo-emptytext">
        <para>Right click on the graph objects representing artifacts you've
        inserted to get the popup menu. Select Properties menuitem to get the
        property panel for editing artifact properties (or simply double-click
        on the artifact object in the graph).</para>

        <para>Enter meaningful names for data object artifacts, and text
        annotation for the annotation type artifacts.</para>

        <informaltable frame="none" rowsep="0">
          <tgroup cols="2" colsep="0">
            <tbody>
              <row>
                <entry colsep="0" valign="middle"><mediaobject>
                    <imageobject>
                      <imagedata contentdepth="100%"
                                 fileref="Images/exmpl_artdataobject.jpg"
                                 scalefit="1" width="100%"/>
                    </imageobject>
                  </mediaobject></entry>

                <entry valign="middle"><mediaobject>
                    <imageobject>
                      <imagedata contentdepth="100%"
                                 fileref="Images/exmpl_artannotation.jpg"
                                 scalefit="1" valign="middle" width="100%"/>
                    </imageobject>
                  </mediaobject></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>

        <para>Be sure you applied all the changes by clicking the icon
        <inlinemediaobject>
            <imageobject>
              <imagedata fileref="Images/check.gif"/>
            </imageobject>
          </inlinemediaobject> from the dialog's toolbar.</para>
      </listitem>

      <listitem condition="demo-emptytext">
        <para>If necessary, right click on the graph objects representing
        associations you've inserted to get the popup menu. Select Properties
        menuitem to get the property panel for editing transition properties
        (you can also simply double-click on the association object in the
        graph):</para>

        <informaltable frame="none" rowsep="0">
          <tgroup cols="2" colsep="0">
            <tbody>
              <row>
                <entry colsep="0" valign="middle"><para>If necessary, change
                association's Id, Name or Direction.</para> <para>Click on the
                icon <inlinemediaobject>
                    <imageobject>
                      <imagedata fileref="Images/check.gif"/>
                    </imageobject>
                  </inlinemediaobject> from the dialog's toolbar in order to
                apply the changes.</para></entry>

                <entry valign="middle"><mediaobject>
                    <imageobject>
                      <imagedata contentdepth="100%"
                                 fileref="Images/exmpl_association.jpg"
                                 scalefit="1" valign="middle" width="100%"/>
                    </imageobject>
                  </mediaobject></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </listitem>

      <listitem condition="demo-emptytext">
        <para>After you finished with editing, you should check the Package
        for validity by clicking on the icon <inlinemediaobject>
            <imageobject>
              <imagedata fileref="Images/packagecheck.gif"/>
            </imageobject>
          </inlinemediaobject> from the main toolbar, or by selecting menuitem
        Package-&gt;Check validity.</para>

        <para>If there are errors or warnings about XPDL model invalidity, the
        Problems panel will display all the necessary information in order to
        fix it.</para>
      </listitem>

      <listitem condition="demo-emptytext">
        <para>Do not forget to save the changes you've made: click on the icon
        <inlinemediaobject>
            <imageobject>
              <imagedata fileref="Images/save.gif"/>
            </imageobject>
          </inlinemediaobject> from the main toolbar or select menuitem
        Package-&gt;Save. The changes will be saved in already defined XPDL
        file.</para>
      </listitem>
    </itemizedlist>

    <para condition="demo-emptytext">At the end, the result of the modeling
    should be something like in the following picture:</para>

    <figure>
      <title>Leave Request Process</title>

      <mediaobject>
        <imageobject>
          <imagedata align="center" contentdepth="100%"
                     fileref="Images/leave_request_process.jpg" scalefit="1"
                     valign="middle" width="100%"/>
        </imageobject>
      </mediaobject>
    </figure>
  </chapter>

  <chapter>
    <title>Configuration</title>

    <para condition="demo-details">TWE is very configurable in a sense that
    there are many options that can be changed through TWE's property
    files.</para>

    <para condition="demo-emptytext">Almost every component (graph, xpdl view,
    package tree, ...) has its own property file, but there are also some
    property files for the TWE's core system components.</para>

    <para condition="demo-emptytext">The relevant property files of the core
    system components are:</para>

    <orderedlist condition="demo-emptytext">
      <listitem>
        <para>togwebasic.properties</para>
      </listitem>

      <listitem>
        <para>componentmanager.properties</para>
      </listitem>

      <listitem>
        <para>togwecontroller.properties</para>
      </listitem>

      <listitem>
        <para>jawetypes.properties</para>
      </listitem>

      <listitem>
        <para>togweeditor.properties</para>
      </listitem>

      <listitem>
        <para>transitionhandler.properties</para>
      </listitem>

      <listitem>
        <para>xpdlvalidator.properties</para>
      </listitem>
    </orderedlist>

    <para condition="demo-emptytext">Other property files are component
    specific settings, and these files are:</para>

    <itemizedlist condition="demo-emptytext">
      <listitem>
        <para>infobar.properties</para>
      </listitem>

      <listitem>
        <para>togwegraphcontroller.properties</para>
      </listitem>

      <listitem>
        <para>togwexpdlview.properties</para>
      </listitem>

      <listitem>
        <para>extpkgrelations.properties</para>
      </listitem>

      <listitem>
        <para>packagenavigator.properties</para>
      </listitem>

      <listitem>
        <para>detailedpackagenavigator.properties</para>
      </listitem>

      <listitem>
        <para>propertiespanelcomponent.properties</para>
      </listitem>

      <listitem>
        <para>searchnavigator.properties</para>
      </listitem>

      <listitem>
        <para>problemsnavigator.properties</para>
      </listitem>

      <listitem>
        <para>wfxml.properties</para>
      </listitem>

      <listitem>
        <para>ldap.properties</para>
      </listitem>
    </itemizedlist>

    <para condition="demo-emptytext">The most important of these additional
    files is probably togwegraphcontroller.properties file. There are settings
    for graph which is, of course, the most important component.</para>

    <para condition="demo-emptytext">The properties of non-core components are
    already explained in a sections explaining components itself, so further
    text will be related only to configuration of core system
    components.</para>

    <para condition="demo-emptytext"><emphasis>NOTE:</emphasis> Most of the
    settings start with #. This means that they are put under comment and that
    default settings will be used. In order to change settings, remove # and
    change settings value</para>

    <sect1 condition="demo-emptytext" xml:id="togwebasic.properties">
      <title>Property file <emphasis>togwebasic.properties</emphasis></title>

      <para>This property file contains some basic TWE settings like:</para>

      <itemizedlist>
        <listitem>
          <para><emphasis>Font.Size</emphasis> and
          <emphasis>Font.Name</emphasis> are used for font settings (default
          font is Sans Serif, size 11).</para>
        </listitem>

        <listitem>
          <para><emphasis>StartingLocale</emphasis> sets local settings to be
          used. Language depends on this settings. The default value is
          "default", and it uses English language. If you leave this property
          empty, your system settings will be used, which means if there is a
          language property file for your system settings, it will be
          used.</para>
        </listitem>

        <listitem>
          <para><emphasis>LookAndFeelClassName</emphasis> sets UI manager.
          Default value for this setting is empty, which means that native UI
          manager will be used. The possible values for this setting could
          e.g. be
          <emphasis>javax.swing.plaf.metal.MetalLookAndFeel,</emphasis>
          <emphasis>com.sun.java.swing.plaf.motif.MotifLookAndFeel,
          ...</emphasis></para>
        </listitem>

        <listitem>
          <para><emphasis>UseXPDLPrefix </emphasis>determines whether to use
          xpdl name space prefix when saving XPDL file. Default value for this
          property is "tue".</para>
        </listitem>

        <listitem>
          <para><emphasis>DefaultTransientPackages </emphasis>contains a list
          of the absolute paths to XPDL files which will be loaded into TWE as
          the 'Transient' ones. By default, no transient packages are
          loaded.</para>
        </listitem>

        <listitem>
          <para><emphasis>FileLocking</emphasis> - if set to true, TWE will
          lock open XPDL files. Main XPDL file will be exclusively locked, and
          external package's XPDL files will have a shared lock.</para>

          <note>
            <para>This property is relevant only for Windows OS</para>
          </note>
        </listitem>
      </itemizedlist>
    </sect1>

    <sect1 condition="demo-emptytext">
      <title>Property file
      <emphasis>componentmanager.properties</emphasis></title>

      <para>This configuration file contains information about which component
      (Graph, XPDL View, Navigator, ...) will be used in a runtime. It also
      defines default tab area for the component, and default placement order
      of the component inside the tab.</para>

      <para>To specify that a certain component should be used in a runtime,
      you must define at least two properties:</para>

      <orderedlist>
        <listitem>
          <para>The first property defines the component to add. E.g. to add
          Graph component, we would define something like:</para>

          <para><emphasis>Component.Add.GraphController=org.enhydra.jawe.components.graph.GraphController
          </emphasis></para>

          <para>The value of this property is the name of the Java class
          representing TWE component.</para>
        </listitem>

        <listitem>
          <para>The second property defines settings to be used to configure
          the component. E.g. for the Graph component defined in 1), we would
          define something like:</para>

          <para><emphasis>Settings.GraphController =
          org.enhydra.jawe.components.graph.TogWEGraphControllerSettings</emphasis></para>

          <para>The value of this property is the name of the Java class
          representing TWE settings for the given component.</para>
        </listitem>
      </orderedlist>

      <para>The parameters that end with <emphasis>.ComponentOrder</emphasis>
      are used for setting tab order for each of the TWE frame sections
      (areas). E.g. to add Graph component to be initially the second one in
      the 'Main' tab, it should be something like:</para>

      <para><emphasis>Main.ComponentOrder = XPDLViewController
      GraphController</emphasis></para>

      <para>Note that parameters <emphasis>UpperStatus</emphasis> and
      <emphasis>LowerStatus</emphasis> do not have action order, because these
      areas contain only one component.</para>
    </sect1>

    <sect1 condition="demo-emptytext" xml:id="togwecontroller.properties">
      <title>Property file
      <emphasis>togwecontroller.properties</emphasis></title>

      <para>This file defines TWE's frame organization (how will it be divided
      in areas), main menu, tool bar and info bar settings, and TWE's default
      actions and possibilities. There are a lot of parameters that define
      these features.</para>

      <para>The following parameters can have either value true, or value
      false:</para>

      <itemizedlist>
        <listitem>
          <para><emphasis>AllowInvalidPackageSaving </emphasis> - if set to
          true, saving of invalid packages (XPDL files) is allowed even if the
          package's <emphasis>Publication status</emphasis> property is
          defined as <emphasis>Released.</emphasis></para>
        </listitem>

        <listitem>
          <para><emphasis>AskOnDeletion</emphasis> - if set to true, TWE asks
          for a user confirmation before deleting any element.</para>
        </listitem>

        <listitem>
          <para><emphasis>AskOnDeletionOfReferencedElements</emphasis> - if
          set to true, and previous property is set to false, TWE asks for a
          user confirmation only before deleting elements referenced by other
          elements.</para>
        </listitem>

        <listitem>
          <para><emphasis>InitialXPDLValidation</emphasis> - if set to true,
          XPDL file will be checked for errors at a time it is loaded into
          TWE</para>
        </listitem>

        <listitem>
          <para><emphasis>DesignTimeValidation</emphasis> - if set to true,
          each time after an action that changes XPDL model is performed, the
          XPDL will be checked for errors.</para>
        </listitem>

        <listitem>
          <para><emphasis>StartMaximized</emphasis> - if set to true, TWE is
          started in maximized window.</para>
        </listitem>

        <listitem>
          <para><emphasis>ShowTooltip</emphasis> - if set to true, tooltips
          are displayed.</para>
        </listitem>
      </itemizedlist>

      <para>The parameter <emphasis>UndoHistorySize </emphasis>should have an
      integer value, and it defines the number of XPDL model related actions
      that can be undone/redone. If this number is less than zero, TWE will be
      configured to have unlimited undo/redo history.</para>

      <para>There are also other parameters that can have different string
      values:</para>

      <itemizedlist>
        <listitem>
          <para><emphasis>Encoding </emphasis> - defines encoding of files
          saved with TWE.</para>

          <para>For example: <programlisting>Encoding = UTF-8</programlisting></para>
        </listitem>

        <listitem>
          <para>DoNotAskOnDeletionOfReferencedElementTypes - if the property
          AskOnDeletion is set to false, and the property
          AskOnDeletionOfReferencedElements is set to true, the value of this
          property defines for which referenced elements TWE won't ask for a
          user confirmation before deleting the element.</para>

          <para>For example:</para>

          <programlisting>DoNotAskOnDeletionOfReferencedElementTypes = Activity Transition</programlisting>
        </listitem>

        <listitem>
          <para>TitleString - defines which information and in which order
          will appear in the applications' titlebar. There are 7 different
          placeholders that can be used to construct titlebar content:</para>

          <itemizedlist>
            <listitem>
              <para>{filename} - will be replaced with the path to the file
              being currently edited</para>
            </listitem>

            <listitem>
              <para>{pkgId} - will be replaced with the value of Id attribute
              of the main XPDL (Package) element</para>
            </listitem>

            <listitem>
              <para>{pkgName} - will be replaced with the value of Name
              attribute of the main XPDL (Package) element . If name is not
              defined, it will be replaced with the value of Id
              attribute.</para>
            </listitem>

            <listitem>
              <para>{pkgVer} - will be replaced with the value of Version
              attribute of Package's RedefinableHeader.</para>
            </listitem>

            <listitem>
              <para>{appName} - will be replaced with the language dependent
              value for the editor's name</para>
            </listitem>

            <listitem>
              <para>{appVersion} - will be replaced with the information about
              the editor's version</para>
            </listitem>

            <listitem>
              <para>{appConfig} - will be replaced with the current
              application configuration mode appended with language dependent
              string for the key "ConfigurationKey"</para>
            </listitem>
          </itemizedlist>

          <para>The following example configuration for titlebar:</para>

          <programlisting>TitleString = {filename} - {pkgName} {pkgVer} - {appName} {appVer} ({appConfig})</programlisting>

          <para>will make titlebar displaying something like:</para>

          <para>d:\test\test.xpdl - My Test Package 1.1 - Together Workflow
          Editor 5.1-1 (Default configuration)</para>
        </listitem>
      </itemizedlist>

      <para>The following parameters are defining initial TWE frame
      settings:</para>

      <itemizedlist>
        <listitem>
          <para><emphasis>FrameSettings</emphasis> - this parameter defines
          how will the main application frame be divided. As already explained
          there are several application areas. Amongst others, there are areas
          called <emphasis>main</emphasis>, <emphasis>tree</emphasis>,
          <emphasis>special</emphasis> and <emphasis>other</emphasis>. The
          example of valid value for this parameter is:</para>

          <programlisting>FrameSettings = V; special H tree; main H other</programlisting>

          <para>which means that the frame will be first divided vertically.
          The left part of the frame will be divided horizontally, where
          <emphasis>special</emphasis> area will be in the upper and
          <emphasis>tree</emphasis> area in the lower part, and also the right
          part will be divided horizontally, where <emphasis>main</emphasis>
          area will be in the upper and <emphasis>other</emphasis> area in the
          lower part.</para>
        </listitem>

        <listitem>
          <para><emphasis>MainDividerLocation</emphasis> - this property is an
          integer value that defines the initial location for the main frame
          divider. In the example above, it is the vertical divider that
          divides the frame into the left and the right part.</para>
        </listitem>

        <listitem>
          <para><emphasis>FirstSmallDividerLocation</emphasis> - this property
          is an integer value that defines the initial location for the first
          sub-frame divider. In the example above, it is the horizontal
          divider that divides the left sub-frame into the upper part
          <emphasis>special</emphasis> and the lower part
          <emphasis>tree</emphasis>.</para>
        </listitem>

        <listitem>
          <para><emphasis>SecondSmallDividerLocation</emphasis> - this
          property is an integer value that defines the initial location for
          the second sub-frame divider. In the example above, it is the
          horizontal divider that divides the right sub-frame into the upper
          part <emphasis>main</emphasis> and the lower part
          <emphasis>other</emphasis>.</para>
        </listitem>
      </itemizedlist>

      <para>There are a lot of parameters that are defining toolbar and
      menubar content and order, ...</para>

      <para>E.g. to change the order of menu items in the File menu, or to
      leave out some items, you can modify the following:</para>

      <para><emphasis>SubMenu.ActionOrder.File = NewPackage Open Reopen Close
      - Save SaveAs - @RecentFiles - Exit</emphasis></para>
    </sect1>

    <sect1 condition="demo-emptytext">
      <title>Property file <emphasis>jawetypes.properties</emphasis></title>

      <para>Here are described elements used in TWE: their types and
      information about them (what should be their color).</para>

      <para>For example, the following section defines the properties for an
      activity which type is <emphasis>BlockActivity</emphasis></para>

      <programlisting>#JaWETypes.ActivityType.Id.block = ACTIVITY_BLOCK
#JaWETypes.ActivityType.LangDepName.block = BlockActivityKey
#JaWETypes.ActivityType.Icon.block = org/enhydra/jawe/images/blockactivity.gif
#JaWETypes.ActivityType.Color.block = R=255,G=165,B=121
#JaWETypes.ActivityType.XPDLTemplate.block = 
</programlisting>

      <para>Changing the color used to represent this kind of activity will
      have effect only to the graph component.</para>

      <para>There is another advanced feature of TWE which can be utilized
      through jawetypes.properties file. You can define custom XPDL object
      types, and even provide the XPDL template fragment to define properties
      they should have. E.g. if you want to define new type of activity called
      loop activity, you can have the following configuration:</para>

      <para><programlisting>JaWETypes.ActivityType.Id.loop = ACTIVITY_LOOP
JaWETypes.ActivityType.LangDepName.loop = LoopKey
JaWETypes.ActivityType.Icon.loop = org/enhydra/jawe/samples/loopactivity/
images/loopactivity.gif
JaWETypes.ActivityType.Color.loop = R=255,G=155,B=15
JaWETypes.ActivityType.XPDLTemplate.loop = sampleactloop.xml</programlisting>where
      sampleactloop.xml have to be placed under templates subfloder of the
      configuration you are using. The content of sampleloop.xml file can be
      something like:</para>

      <para><programlisting>&lt;Activity&gt;
   &lt;BlockActivity BlockId=""/&gt;
   &lt;ExtendedAttributes&gt;
      &lt;ExtendedAttribute Name="LoopCondition" Value=""/&gt;
      &lt;ExtendedAttribute Name="LoopType" Value="While"/&gt;
      &lt;ExtendedAttribute Name="BackToPool" Value="false"/&gt;
      &lt;ExtendedAttribute Name="SetTemporary" Value="false"/&gt;
   &lt;/ExtendedAttributes&gt;
&lt;/Activity&gt;</programlisting>To define custom language strings, you
      should edit jawelanguagemisc.properties file in the target configuration
      folder, and add appropriate [key,value] pairs. For the previous example,
      you should add a only following [key,value] par:</para>

      <para><programlisting>LoopKey = Loop</programlisting>If you need
      language specific entries for other languages, you just put
      corresponding property file into the target configuration folder, and
      define the same property. E.g. you define jawelanguagemisc_de.properties
      file if you need German translation.</para>

      <para>This newly defined activity will automatically appear in the
      Graph's component toolbox ones you start TWE for this configuration
      mode.</para>
    </sect1>

    <sect1 condition="demo-emptytext">
      <title>Property file <emphasis>togweeditor.properties</emphasis></title>

      <para>This file defines the properties for the dialog component used to
      display XPDL element property panels:</para>

      <itemizedlist>
        <listitem>
          <para><emphasis>InlinePanel.ShowModifiedWarning </emphasis> - if set
          to true, and if user wants to leave the property panel (by using
          show previous, show next, show parent element panel actions or
          actions for closing the dialog) of the element for which he
          previously changed some properties (within the panel), the user is
          asked if he wants to save the changes, leave the panel without
          saving changes or to cancel the action.</para>
        </listitem>

        <listitem>
          <para><emphasis>InlinePanel.DisplayTitle </emphasis> - if set to
          true, panel will display element name beneath toolbar.</para>
        </listitem>

        <listitem>
          <para><emphasis>HistorySize </emphasis> - defines the size of the
          previous/next panel history. If set to the value less than zero, the
          history is unlimited.</para>
        </listitem>

        <listitem>
          <para><emphasis>Toolbar.ActionOrder.defaultToolbar </emphasis> -
          defines the content and the order of the dialog's toolbar
          buttons.</para>
        </listitem>
      </itemizedlist>

      <para>The following parameters are related to the preferred number of
      lines in text areas for defining various expressions. The first
      parameter is related to transition condition, initial value, deadline,
      ... expressions and 2nd one for actual parameter expressions:</para>

      <programlisting>#PreferredNumberOfLinesForExpression=4

#XMLActualParametersPanel.preferredNumberOfLinesForExpression=4</programlisting>

      <para>There are properties which can be adjusted to fine-tune the basic
      element property panels L&amp;F, such as alignment, TOP, BOTTOM, RIGHT,
      LEFT empty space in the panels, the width and height of the text boxes,
      etc. These are defined by the following set of the properties:</para>

      <programlisting>XMLBasicPanel.RightAllignment=false
XMLBasicPanel.EmptyBorder.TOP=0
XMLBasicPanel.EmptyBorder.LEFT=3
XMLBasicPanel.EmptyBorder.BOTTOM=4
XMLBasicPanel.EmptyBorder.RIGHT=3
XMLBasicPanel.SimplePanelTextWidth=250
XMLBasicPanel.SimplePanelTextHeight=20</programlisting>

      <para>You are able to customize so called "group" panels, used to
      display some complex elements, in order to hide some complex element
      sub-elements. For example, in order not to display Activity's Id,
      Deadlines, Priority and Limit, you should set the property
      <emphasis>HideSubElements.XMLGroupPanel.Activity</emphasis> to the
      following value:</para>

      <programlisting>HideSubElements.XMLGroupPanel.Activity = Id Deadlines Priority Limit</programlisting>

      <para>You are able to customize which elements of some collection
      shouldn't be displayed within so called "table" panels. For example, if
      you don't want to display extended attributes which name attribute is
      "SpecEA" or "EASpec", you can define the property:<programlisting>HideElements.XMLTablePanel.ExtendedAttributes.Name = SpecEA EASpec</programlisting></para>

      <para>You are able to customize so called "table" panels, used to
      display some complex element collections, in order to specify which
      sub-elements will be shown as a table columns. For example, when
      displaying activities, you can specify to show Activity's Id, Name,
      Performer, Type, Start mode, Finish mode and Deadlines:</para>

      <para><emphasis>ShowColumns.XMLTablePanel.Activities = Id Name Performer
      Type StartMode FinishMode Deadlines</emphasis></para>

      <para>There is another customization possible for the so called "combo
      box" panel. Hence, you can define for which elements the combo box will
      be disabled (by default nothing is disabled). For example, if you want
      to disable combo boxes for displaying Activity's Performer and
      Transition's From and To properties, you should specify the
      following:</para>

      <programlisting>XMLComboPanel.DisableCombo = Performer From To</programlisting>

      <para>As with all other components, you are also able to define the
      action order inside a toolbar.</para>
    </sect1>

    <sect1 condition="demo-emptytext">
      <title>Property file
      <emphasis>transitionhandler.properties</emphasis></title>

      <para>This file enables limitation of number of incoming or outgoing
      transition for each specific activity type.</para>

      <para>For block activity the following parameters are important:</para>

      <itemizedlist>
        <listitem>
          <para>Transitions.moreOutgoing.Activity.Type.ACTIVITY_BLOCK</para>

          <para>If the value of this parameter is set to true, the block
          activity can have more than one outgoing transition. If set to
          false, it can have only one outgoing transition.</para>
        </listitem>

        <listitem>
          <para>Transitions.moreIncoming.Activity.Type.ACTIVITY_BLOCK</para>

          <para>If the value of this parameter is set to true, the block
          activity can have more than one incoming transition. If set to
          false, it can have only one incoming transition.</para>
        </listitem>
      </itemizedlist>

      <para>For generic activity the following parameters are
      important:</para>

      <itemizedlist>
        <listitem>
          <para>Transitions.moreOutgoing.Activity.Type.ACTIVITY_NO</para>

          <para>If the value of this parameter is set to true, the No
          implementation activity can have more than one outgoing transition.
          If set to false, it can have only one outgoing transition.</para>
        </listitem>

        <listitem>
          <para>Transitions.moreIncoming.Activity.Type.ACTIVITY_NO</para>

          <para>If the value of this parameter is set to true, the No
          implementation activity can have more than one incoming transition.
          If set to false, it can have only one incoming transition.</para>
        </listitem>
      </itemizedlist>

      <para>For route activity the following parameters are important:</para>

      <itemizedlist>
        <listitem>
          <para>Transitions.moreOutgoing.Activity.Type.ACTIVITY_ROUTE</para>

          <para>If the value of this parameter is set to true, the route
          activity can have more than one outgoing transition. If set to
          false, tit can have only one outgoing transition.</para>
        </listitem>

        <listitem>
          <para>Transitions.moreIncoming.Activity.Type.ACTIVITY_ROUTE</para>

          <para>If the value of this parameter is set to true, the route
          activity can have more than one incoming transition. If set to
          false, it can have only one incoming transition.</para>
        </listitem>
      </itemizedlist>

      <para>For sub-flow activity the following parameters are
      important:</para>

      <itemizedlist>
        <listitem>
          <para>Transitions.moreOutgoing.Activity.Type.ACTIVITY_SUBFLOW</para>

          <para>If the value of this parameter is set to true, the sub-flow
          activity can have more than one outgoing transition. If set to
          false, it can have only one outgoing transition.</para>
        </listitem>

        <listitem>
          <para>Transitions.moreIncoming.Activity.Type.ACTIVITY_SUBFLOW</para>

          <para>If the value of this parameter is set to true, the sub-flow
          activity can have more than one incoming transition. If set to
          false, it can have only one incoming transition.</para>
        </listitem>
      </itemizedlist>

      <para>For tools activity the following parameters are important:</para>

      <itemizedlist>
        <listitem>
          <para>Transitions.moreOutgoing.Activity.Type.ACTIVITY_TOOL</para>

          <para>If the value of this parameter is set to true, the tool
          activity can have more than one outgoing transition. If set to
          false, it can have only one outgoing transition.</para>
        </listitem>

        <listitem>
          <para>Transitions.moreIncoming.Activity.Type.ACTIVITY_TOOL</para>

          <para>If the value of this parameter is set to true, the tool
          activity can have more than one incoming transition. If set to
          false, it can have only one incoming transition.</para>
        </listitem>
      </itemizedlist>

      <para>The XPDL validator will validate XPDLs also according to the
      previously mentioned properties.</para>
    </sect1>

    <sect1 condition="demo-emptytext">
      <title>Property file
      <emphasis>xpdlvalidator.properties</emphasis></title>

      <para>This file contains several settings that determine some details
      about validation of XPDL files:</para>

      <itemizedlist>
        <listitem>
          <para><emphasis>AllowUndefinedStart</emphasis> - if set to false,
          TWE will require that process and activity set graphs must have at
          least one starting activity. Otherwise, you will be able to create
          graphs without starting points, and TWE will not complain. You may
          have noticed that TWE also considers activity with only circular
          incoming transition to be the starting point of the graph, so this
          regards only to graph structures similar to the one bellow:</para>

          <figure>
            <title>Undefined start example</title>

            <mediaobject>
              <imageobject>
                <imagedata contentdepth="100%"
                           fileref="Images/allow_undefined_start.gif"
                           scalefit="1" width="100%"/>
              </imageobject>
            </mediaobject>
          </figure>
        </listitem>

        <listitem>
          <para><emphasis>AllowUndefinedEnd</emphasis> - if set to false, TWE
          will require that process and activity set graphs must have at least
          one ending activity. Otherwise, you will be able to create graphs
          without ending points, and TWE will not complain. You may have
          noticed that TWE also considers activity with only circular outgoing
          transition to be the ending point of the graph, so this regards only
          to graph structures similar to the one bellow:</para>

          <figure>
            <title>Undefined end example</title>

            <mediaobject>
              <imageobject>
                <imagedata contentdepth="100%"
                           fileref="Images/allow_undefined_end.gif"
                           scalefit="1" width="100%"/>
              </imageobject>
            </mediaobject>
          </figure>
        </listitem>

        <listitem>
          <para><emphasis>ValidateSubFlowReferences </emphasis> - if set to
          true, TWE will consider an error if SubFlow activity does not
          reference to the valid process from the XPDL or one of the XPDLs
          referenced through external package concept.</para>

          <para>If you know that you will create XPDLs where you'll use
          SubFlow activities to reference a remote process definition, you
          should set this property to false, in order not to have validation
          errors reported.</para>
        </listitem>

        <listitem>
          <para><emphasis>ValidatePerformerExpressions </emphasis> - if set to
          true, TWE will consider a warning if activity's performer is not a
          reference to an existing Participant and it's expression does not
          look like valid performer expression.</para>
        </listitem>

        <listitem>
          <para><emphasis>ValidateActualParameterExpressions </emphasis> - if
          set to true, TWE will consider a warning if actual parameter is not
          a reference to an existing variable (DataField or FormalParameter)
          and it's expression does not look like valid actual parameter
          expression.</para>
        </listitem>

        <listitem>
          <para><emphasis>ValidateInitialValueExpressions </emphasis> - if set
          to true, TWE will consider a warning if variables' initial value
          expression does not look like valid initial value expression.</para>
        </listitem>

        <listitem>
          <para><emphasis>ValidateConditionExpressions </emphasis> - if set to
          true, TWE will consider a warning if transition's condition does not
          look like valid expression.</para>
        </listitem>

        <listitem>
          <para><emphasis>ValidateDeadlineExpressions </emphasis> - if set to
          true, TWE will consider a warning if deadline condition does not
          look like valid expression.</para>
        </listitem>

        <listitem>
          <para><emphasis>ValidateUnusedVariables </emphasis> - if set to
          true, TWE will consider a warning if XPDL variable (DataField or
          WorkflowProcess's FormalParameter) are not used anywhere (as actual
          parameter or inside expression).</para>
        </listitem>

        <listitem>
          <para><emphasis>ValidateConditionByType </emphasis> - if set to
          true, TWE will generate a warning in following cases:</para>

          <itemizedlist>
            <listitem>
              <para>Condition type is not defined, and there is condition
              expression defined</para>
            </listitem>

            <listitem>
              <para>Condition type is 'DEFAULT_EXCEPTION' and there is
              condition expression defined</para>
            </listitem>

            <listitem>
              <para>Condition type is 'OTHERWISE' and there is condition
              expression defined</para>
            </listitem>

            <listitem>
              <para>Condition type is 'EXCEPTION' and there is no condition
              expression defined</para>
            </listitem>

            <listitem>
              <para>Condition type is 'CONDITION' and there is no condition
              expression defined</para>
            </listitem>
          </itemizedlist>
        </listitem>
      </itemizedlist>
    </sect1>
  </chapter>

  <chapter>
    <title>Customization</title>

    <sect1>
      <title>Need for customization</title>

      <para>In order to make the life easier for the XPDL developers, and to
      make developing of XPDLs less error prone, it could be a good idea to
      customize TWE. One way of customization can be introduction of new
      activity types (e.g. automated activities for sending e-mails with
      customized property panels for entering all the information, a special
      kind of deadline element, a special XPDL template for creating a new
      workflow process, ...).</para>

      <para>Thanks to its internal architecture, TWE can be easily customized
      in order to support these requirements.</para>
    </sect1>

    <sect1>
      <title>Example - activity for sending an e-mail</title>

      <para>To illustrate previous statement, let's say that in all of our
      processes, we are intensivelly using Tool activity for sending
      e-mails.</para>

      <para>If we use standard TWE implementation, everytime we want to insert
      such activity in the process (e.g. via Graph component), we first need
      to insert a standard Tool activitiy using TWE's Graph component toolbox.
      After that, we need to open the property panel for the activity, go to
      the Type section, and create a new Tool for this activity. When new Tool
      is created, we need to edit it, where we need to select a reference to
      the Application definition for sending e-mails, and than to create as
      many ActualParameters for the Tool as there are FormalParameters for the
      Send E-Mail Application definition. And finally, we need to enter
      appropriate values for this ActualParameters (either a references to the
      variables, or some text expressions).</para>

      <para>You have to admit that there is a lot of work to do, and it can be
      quite anoying if you have to do it many times. Also, it is error
      prone.</para>

      <para>What we can do is to extend standard TWE functionallity, and to
      introduce a new type of an activity for sending e-mails, which will be
      the customization of the standard Tool activity. We can offer a new
      button in Graph's toolbar for creating such kind of an activity. This
      button would have a special icon, and e-mail-ing activity when inserted
      into graph would also have this icon to be diferentiated amongst others.
      Also, when such activity is created, its XPDL content would be
      automatically pre-filled, so it would always have a Tool which would
      reference the Application for sending an e-mails, and this Tool would
      already have a default values for all necessary ActualParameters. But
      this is not all, we can also offer a special property panel for entering
      e-mail parameters (ActualParameters) - e.g, we can have a combo-box with
      a list of e-mail addresses (which could be filled through the LDAP), we
      can have a text box for entering mail subject, and a text area for
      entering mail content.</para>
    </sect1>

    <sect1>
      <title>Available customizations</title>

      <para>TWE distribution comes with several customized configurations. You
      can switch from one configuration to another one if you select
      Settings-&gt;Configuration and select desired configuration. TWE will be
      re-configured to use selected configuration.</para>

      <para>Available configurations are:</para>

      <itemizedlist>
        <listitem>
          <para>default - default TWE configuration.</para>
        </listitem>

        <listitem>
          <para>shark - configuration specific to TWE usage with Shark engine.
          Includes special property panels for editing some of extended
          attributes, shark specific restrictions and validation according to
          these restrictions.</para>
        </listitem>

        <listitem>
          <para>samples-loopactivity - sample configuration that introduces
          new type of activity along with the special icon for this activity
          and special property panel for editing its properties.</para>
        </listitem>
      </itemizedlist>
    </sect1>
  </chapter>

  <chapter>
    <title>Extended Attribute Reference</title>

    <para>TWE uses XPDL ability to store some additional information through
    extended attributes. TWE might add special extended attributes to package,
    external package, workflow process, activity and transition
    elements.</para>

    <para>Extended attribute that can be added to any custom main XPDL object
    (Activity, Application,DataField, Transition, WorkflowProcess, Package,
    etc.) is:</para>

    <itemizedlist>
      <listitem>
        <para>JaWE_TYPE - it specifies the custom type Id of the
        element</para>
      </listitem>
    </itemizedlist>

    <para>Extended attributes added for package element are:</para>

    <itemizedlist>
      <listitem>
        <para>EDITING_TOOL - used to mark that XPDL was edited by TWE</para>
      </listitem>

      <listitem>
        <para>EDITING_TOOL_VERSION - stores information about TWE
        version</para>
      </listitem>

      <listitem>
        <para>JaWE_CONFIGURATION - stores information about TWE configuration
        used to create XPDL</para>
      </listitem>
    </itemizedlist>

    <para>In the versions before 4.x, before we switched to XPDL 2
    specification, there were extended attributes that were used by TWE's
    Graph component in order to hold the information about the graphical
    properties of elements, such as position, orientation, order, ...</para>

    <para>These attributes are not used by TWE any more, since graphical
    information is now stored in corresponding XPDL 2 specification
    elements.</para>

    <para>However, these attributes are important when TWE 4.x opens TWE 3.x
    or older XPDL files, and affect the conversion from XPDL 1 to XPDL
    2.</para>

    <para>Here is a list of those "old" extended attributes:</para>

    <para>The ones that were added to workflow processes element are:</para>

    <itemizedlist condition="demo-details">
      <listitem>
        <para>JaWE_GRAPH_BLOCK_PARTICIPANT_ORIENTATION - information about
        orientation of participants (swim-lanes) in activity set's
        graph</para>
      </listitem>

      <listitem condition="demo-emptytext">
        <para>JaWE_GRAPH_WORKFLOW_PARTICIPANT_ORIENTATION - information about
        orientation of participants (swim-lanes) in worfklow process's
        graph</para>
      </listitem>

      <listitem condition="demo-emptytext">
        <para>JaWE_GRAPH_BLOCK_PARTICIPANT_ORDER - holds information about
        participant order for activity sets in this process</para>
      </listitem>

      <listitem condition="demo-emptytext">
        <para>JaWE_GRAPH_WORKFLOW_PARTICIPANT_ORDER - holds information about
        participant order for workflow process</para>
      </listitem>

      <listitem condition="demo-emptytext">
        <para>JaWE_GRAPH_START_OF_BLOCK - information about start bubble
        inside activity set</para>
      </listitem>

      <listitem condition="demo-emptytext">
        <para>JaWE_GRAPH_END_OF_BLOCK - information about end bubble inside
        activity set</para>
      </listitem>

      <listitem condition="demo-emptytext">
        <para>JaWE_GRAPH_START_OF_WORKFLOW - information about start bubble
        inside workflow process</para>
      </listitem>

      <listitem condition="demo-emptytext">
        <para>JaWE_GRAPH_END_OF_WORKFLOW - information about end bubble inside
        workflow process</para>
      </listitem>
    </itemizedlist>

    <para condition="demo-emptytext">The ones that were added to activities
    are:</para>

    <itemizedlist condition="demo-emptytext">
      <listitem>
        <para>JaWE_GRAPH_PARTICIPANT_ID - holds information about swim-lane
        (representation of the XPDL Participant, or some special kind of
        swim-lanes for defining activity performer as an expression) that
        holds activity.</para>
      </listitem>

      <listitem condition="demo-emptytext">
        <para>JaWE_GRAPH_OFFSET - information about location of
        activity</para>
      </listitem>
    </itemizedlist>

    <para condition="demo-emptytext">The ones that were added to transitions
    are:</para>

    <itemizedlist condition="demo-emptytext">
      <listitem>
        <para>JaWE_GRAPH_TRANSITION_STYLE - information about drawing style
        for a transition</para>
      </listitem>

      <listitem>
        <para>JaWE_GRAPH_BREAK_POINTS - information about break point offsets
        of a transition</para>
      </listitem>
    </itemizedlist>
  </chapter>

  <chapter>
    <title>Build Guide</title>

    <para>By the end of this chapter you will know the prerequisites for
    installation, how and where to download the latest release binaries and
    source codes of Together Workflow Editor, how to install it on MS Windows
    or Linux and be able to use the provided XPDL examples.</para>

    <sect1>
      <title>Getting the source code</title>

      <para>The source code of the project can be obtained either via SVN
      (please read instructions how to check out sources at <link
      xlink:href="http://sourceforge.net/projects/jawe/develop"
      xmlns:xlink="http://www.w3.org/1999/xlink">SourceForge</link>) or by
      downloading the latest twe-x.y-z.src.zip/twe-x.y-z.src.tar.gz package
      from <link xlink:href="http://sourceforge.net/projects/jawe/files"
      xmlns:xlink="http://www.w3.org/1999/xlink">SourceForge</link>.</para>
    </sect1>

    <sect1>
      <title>Prerequisites</title>

      <itemizedlist>
        <listitem>
          <para>Windows</para>

          <itemizedlist>
            <listitem>
              <para>Java Development Kit (JDK) version 7 or later</para>
            </listitem>
          </itemizedlist>
        </listitem>

        <listitem>
          <para>Fedora (Linux)</para>

          <itemizedlist>
            <listitem>
              <para>bash</para>
            </listitem>

            <listitem>
              <para>tar</para>
            </listitem>

            <listitem>
              <para>make</para>
            </listitem>

            <listitem>
              <para>rpm-build</para>
            </listitem>

            <listitem>
              <para>Java Development Kit (JDK) version 7 or later</para>
            </listitem>
          </itemizedlist>
        </listitem>
      </itemizedlist>
    </sect1>

    <sect1>
      <title>Preparing the build environment</title>

      <para>Execute the configure script from the root directory of the
      project source. Specific JAVA version can be set for building (different
      from the one registered with your system) by executing:</para>

      <para><itemizedlist>
          <listitem>
            <para>Windows</para>

            <para>configure -jdkhome %JAVA_HOME%</para>
          </listitem>

          <listitem>
            <para>Fedora (Linux)</para>

            <para>./configure -jdkhome %JAVA_HOME%</para>
          </listitem>
        </itemizedlist>(Where JAVA_HOME is the path to your JDK
      installation)</para>

      <para>Possible parameters for the configure script are:</para>

      <programlisting>configure              - Creates build.properties file with default values
                         for all possible parameters. It can work only if 
                         there is a default JAVA registered with the system.
configure -help        - Displays Help screen
configure -version     - Sets the version number for the project.
configure -release     - Sets the release number for the project.
configure -buildid     - Sets the build id for the project.
configure -jdkhome     - Sets the "JAVA HOME" location of Java to be used 
                         to compile the project.
configure -instdir     - Sets the location of the installation dir used when
                         executing make script with install target specified.
configure -rebranding  - ONLY FOR WINDOWS. Flag that determines if the project 
                         will be "rebranded" with the context of branding folder. 
                         Possible values [true/false].
configure -brandingdir - Sets the location of the branding folder used when 
                         re-branding application.
configure -language    - ONLY FOR WINDOWS. Used by NSIS when creating setup 
                         (normally used for rebranding). 
                         Possible values [English/Portuguese/PortugueseBR].
configure -appname     - Sets the short name for the editor (default is twe).
configure -projectname - Sets the name for the editor 
                        (default is Together Workflow Editor).

Multiple parameters can be specified at once.


Example:

configure -version 4.5 -release 1 -buildid 20120301-0808 -jdkhome C:/jdk1.7 -instdir C:/JaWE</programlisting>

      <para>The configure script will create/change the build.properties file
      based on the parameters provided. This file can also be manually changed
      to adjust your environment/parameters for building the project from the
      sources.</para>
    </sect1>

    <sect1>
      <title>Compiling and building</title>

      <para>Execute the make script with the buildAll target from the root
      directory of the project source. When the building process finishes, the
      project binaries will be in output/twe-[version]-[release]
      folder.</para>

      <para>Possible build targets for the make script are:</para>

      <para><programlisting>make help            - Displays Help screen
make buildAll        - Builds and configures TWE with documentation
make buildNoDoc      - Builds and configures TWE without documentation
make buildDoc        - Builds documentation only
make debug           - Builds TWE JAR files with included debug information
make install         - Installs and configures TWE into directory defined 
                       by parameter install.dir in build.properties file. 
                       This parameter can be set by using command: 
                       configure -instdir PATH_TO_DIR.
                       It should be called only after make buildAll target 
                       is executed!
make clean           - Removes the output and distribution folder (in order 
                       to start a new compilation from scratch)
make distributions   - Builds and configures TWE with all documentations 
                       and creates distribution package
</programlisting></para>
    </sect1>

    <sect1>
      <title>Packaging distributions</title>

      <para>Assuming that the environment is already configured as described
      previously, to create the project distribution packages, execute:</para>

      <programlisting>make distributions</programlisting>

      <para>When the building process finishes, the <emphasis
      role="bold"><emphasis role="bold">distribution</emphasis></emphasis>
      folder will be created in the root directory of the project source
      containing the appropriate OS specific binary distributions.</para>

      <para>On Windows, to have the resulting <!--JAR files and--> ".exe" file
      automatically signed, the file called <emphasis
      role="bold">sign.properties</emphasis> should be placed in the root
      directory of the projects source with the following properties:</para>

      <para><programlisting>sign.tool       - absolute path to the sign tool executable file
sign.privatekey - absolute path to the private key used for signing
sign.pwd        - password for signing
sign.alias      - sign alias</programlisting>example sign.properties
      file:</para>

      <para><programlisting>sign.tool=D:/signtool/signtool.exe
sign.privatekey=D:/signtool/privatekey.pfx
sign.pwd=agles87t24e25NDwas
sign.alias=pvktmp:3852567a-45er-567y-w456-23456789sdft</programlisting>Sign
      alias can be produced by the usage of Java's keytool by executing the
      command:</para>

      <para><emphasis role="bold">keytool -v -list -storetype pkcs12
      -storepass PRIVATE-KEY-PASSWORD -keystore
      PATH-TO-PRIVATE-KEY</emphasis></para>

      <para>where PRIVATE-KEY-PASSWORD is the same as the property sign.pwd
      from sign.properties file described above, and PATH-TO-PRIVATE-KEY is
      the same as the property sign.privatekey from this properties
      file.</para>
    </sect1>

    <sect1>
      <title>Rebranding</title>

      <para>TWE build procedure enables you to create so called "branded"
      version of TWE distribution files.</para>

      <para>It means that at the end you can get the distribution files fully
      "branded" as if the product is under your own ownership. E.g. instead of
      calling the product "Together Workflow Editor", you can call it "XYZ
      Workflow Editor", and during the build procedure replace all other
      things neccessary for the "branding".</para>

      <para>To build branded product, first you have to configure TWE by
      executing the following configure command in %TWE_HOME% folder:</para>

      <para><programlisting>configure -rebranding true</programlisting>If you
      also want to use a different language in the windows setup wizard, you
      should execute e.g. the following:</para>

      <para><programlisting>configure -language Portuguese</programlisting></para>

      <para>NOTE: currently possible values are English, Portuguese and
      PortugueseBR.</para>

      <para>Then you can also specify the short name for the application, e.g.
      instead of the default "twe" you can specify "mywe":</para>

      <programlisting>configure -appname mywe</programlisting>

      <para>And the full name for the application, e.g. instead of default
      "Together Workflow Editor" you can specify "MyWEditor":</para>

      <programlisting>configure -projectname "MyWEditor"</programlisting>

      <para>Finally, you have to specify the branding folder where you will
      put your files that will be used for re-branding process:</para>

      <programlisting>configure -brandingdir d:/tmp/branding</programlisting>

      <para>You can copy the sample files from %TWE_HOME%/branding folder to
      that folder to see the sample branding files.</para>

      <para>There are several sub-folders in %TWE_HOME%/branding folder which
      content needs to be edited,removed or appended in order to rebrand the
      application distribution. The following table explains the meaning of
      the sub-folders and how can you perform TWE branding by changing their
      content:</para>

      <table>
        <title>Explanation for %TWE_HOME%/branding</title>

        <tgroup cols="2">
          <thead>
            <row>
              <entry align="center">Branding sub-directory</entry>

              <entry align="center">Description</entry>
            </row>
          </thead>

          <tbody>
            <row>
              <entry><para>aboutbox</para></entry>

              <entry><para>Edit aboutbox.properties file to define what will
              be shown in the TWE's aboutbox If you don't want to show license
              information in the aboutbox, change the value of showLicenseInfo
              property to false. </para><para>Example aboutbox.properties file
              is put here to show you how to do it - it specifies XYZ editor
              instead of TWE editor.</para></entry>
            </row>

            <row>
              <entry><para>activityicons</para></entry>

              <entry><para>If you put any icons into this folder, these will
              be the icons you will be able to chose for the "Icon" property
              from Activity's property panel. If you don't put any icons here,
              the default set of icons will be used from this panel.
              </para><para>6 sample icons are added here to show the use
              case.</para></entry>
            </row>

            <row>
              <entry><para>config</para></entry>

              <entry><para>During rebrandign process, the output will contain
              only original default TWE configuration and configurations
              specified in this folder. The configurations from this folder
              can override files from default configuration and add new
              configurations.</para><para>If you want to change existing
              default TWE configuration, you should add new folder into this
              sub-folder with the name "default" that would contain modified
              TWE property files. Also, 'defaultconfig' file in the root of
              config folder specify which configuration will be used during
              TWE startup.</para><para>Example file in-here shows how to set
              default startup configuration to 'default' and contains 2
              configuration files which are modified (compared to original
              ones): </para><para> a) towebasic.properties:</para><para> - the
              default language is set to Portuguese</para><para> - configured
              not to have default transient packages </para><para> b)
              togwegraphcontroller.properties </para><para> - configured to
              show grid </para><para> - configured to show transition
              conditions </para><para> - configured to show text at right of
              the activity box </para><para> - changed graph background color
              </para><para> - changed graph grid color </para><para> c)
              jawetypes.properties </para><para> - configured to use 2 custom
              activities </para></entry>
            </row>

            <row>
              <entry><para>doc</para></entry>

              <entry><para>If you want to change documentation and pictures
              appearing in the documentation, in this folder you should put
              the modified twe-doc.xml file and in Images sub-folder you
              should put all the pictures from the original folder you want to
              override. </para><para>Example twe-doc.xml file is a very short
              version of standard User Manual, and changes all the occurences
              of TWE with XYZ, all occurences of Together Workflow Editor with
              XYZ Workflow Editor, all occurences of Together Teamsolutions
              Co., Ltd. with XYZ Company, all the URLs to together site with
              URLs to google site, etc. </para><para>Example images folder
              provides a single images to override - the image in its original
              form contains TWE logo. </para><para>For the list of all the
              re-placable images you should look into %TWE_HOME%\doc\Images
              folder</para></entry>
            </row>

            <row>
              <entry><para>examples</para></entry>

              <entry><para>If you put anything in this folder, the original
              examples folder will be replaced by this one.
              </para><para>Example shows one XPDL file which normally is not
              the part of TWE distribution.</para></entry>
            </row>

            <row>
              <entry><para>i18n</para></entry>

              <entry><para>If you put language property file(s) here, it will
              override the original one, or will add one if it does not exist
              in the original distribution.</para><para>Example provides
              JaWE_pt.properties file where all the occurences of TWE and
              Together are replaced by XYZ </para></entry>
            </row>

            <row>
              <entry><para>images</para></entry>

              <entry><para>If you put image here, it will override the
              original image coming with distribution. </para><para>Example
              images put into this folder are the ones for the splash screen,
              jawe frame icon and icon for the generic activity.
              </para><para>For the list of all the replacable images you
              should look at
              folder:</para><para>%TWE_HOME%\modules\Utilities\src\org\enhydra\jawe\images
              </para></entry>
            </row>

            <row>
              <entry><para>installation</para></entry>

              <entry><para>Here you can put your own images and language files
              for the TWE installer.</para><para>Example shows the names of
              the images you can replace and modification of Brazilian
              Portuguese language/branding file which refers to the editor as
              to XYZ Editor. </para></entry>
            </row>

            <row>
              <entry><para>lib</para></entry>

              <entry><para>If you need to add additional jar to be used, or
              you want to override an existing one, put it in this
              folder.</para></entry>
            </row>

            <row>
              <entry><para>license</para></entry>

              <entry><para>In this folder you put your own license. This
              license can appear in the about dialog if you set proper
              configuration switch in aboutbox.properties file (read remarks
              for aboutbox folder) and in the root folder of editor binary
              distribution. </para><para>Example contains dummy license file
              with XYZ license.</para></entry>
            </row>

            <row>
              <entry><para>registry</para></entry>

              <entry><para>This folder contains icons that will be used to
              register application in windows registry. </para><para>Example
              shows icon for XPDL file extension and icon for the editor
              itself.</para></entry>
            </row>
          </tbody>
        </tgroup>
      </table>

      <para>After modifying the content of branding folders, simply continue
      with normal distribution packaging procedure, and the resulting output
      files in distribution folder will be rebranded.</para>
    </sect1>

    <!--    <sect1>
      <title>Legal Notices</title>

      <para></para>

      <sect2>
        <title>Source code</title>

        <para></para>
      </sect2>

      <sect2>
        <title>Derived work and resulting binaries</title>

        <para></para>
      </sect2>
    </sect1>
-->
  </chapter>

  <chapter>
    <title>Release Notes</title>

    <section>
      <title>Release5.1-1</title>

      <itemizedlist>
        <listitem>
          <para>New configuration parameter to specify preferred number of
          lines for text areas where expressions are defined
          (PreferredNumberOfLinesForExpression)</para>
        </listitem>

        <listitem>
          <para>New configuration parameter to specify preferred number of
          lines for text areas where actual parameter expressions are defined
          (XMLActualParametersPanel.preferredNumberOfLinesForExpression)</para>
        </listitem>

        <listitem>
          <para>Now XMLMultiLineTextPanelWithOptionalChoiceButtons panel
          constructor accepts parameter to specify how many lines are
          preferred for text area</para>
        </listitem>

        <listitem>
          <para>Hidding and disabling main divider if application is
          configured to have only one area</para>
        </listitem>

        <listitem>
          <para>On non-Windows OSs files we are not using RandomFileAccess
          class to open/save files anymore. Anyway, on non-Windows OSs it
          wasn't possible to lock files, and there was a problem with this
          approach in some cases - the file wasn't saved if another
          application changed it meanwhile.</para>
        </listitem>

        <listitem>
          <para>Added possibility to use TWE from command-line to write the
          process graph in one of the following formats: jpg, svg and pdf.
          Documentation updated with new section describing this
          feature.</para>
        </listitem>

        <listitem>
          <para>Added possibility to configure the content and order of
          application's title text with 7 possible placeholders. Documentation
          updated to describe new configuration entry (TitleString entry in
          togwecontroller.properties).</para>
        </listitem>

        <listitem>
          <para>Fix bug with font size for artifact and gateways: now the font
          size is respecting system settings</para>
        </listitem>

        <listitem>
          <para>LDAP component now supporting different ldap protocols (e.g.
          ldap and ldaps) (also new parameter in ldap.properties to be able to
          pre-configure it)</para>
        </listitem>

        <listitem>
          <para>Shark mode: support for new extended attribute
          "IS_ACTIVITY_SCOPE_ONLY"</para>
        </listitem>

        <listitem>
          <para>Now XPDL is not marked as "Not saved" in the case opened XPDL
          has different values for EDITING_TOOL or EDITING_TOOL_VERSION
          extended attribute of package</para>
        </listitem>

        <listitem>
          <para>Improved rebranding process (ability to specify
          app.name/project.name/brandingdir parameters using configuration
          script). Now also possible to do re-branding on Linux.</para>
        </listitem>

        <listitem>
          <para>Linux tar.gz distributions now built under windows</para>
        </listitem>

        <listitem>
          <para>Improvement regarding silent uninstallation</para>
        </listitem>
      </itemizedlist>
    </section>

    <section>
      <title>Release5.0-1</title>

      <itemizedlist>
        <listitem>
          <para>Shark mode:</para>

          <itemizedlist>
            <listitem>
              <para>Improved Email configuration section:</para>

              <para>* New checkbox to enable/disable configuration - disabling
              means removing all related extended attributes</para>

              <para>* Attachments and Attachment names joined into the single
              control</para>

              <para>* Changed names of the controls</para>
            </listitem>

            <listitem>
              <para>Support for SMTPNewProcFileSysLogErrorHandler</para>
            </listitem>

            <listitem>
              <para>Support for SMTPLimitHandler</para>
            </listitem>

            <listitem>
              <para>Support for XPILLogEventAuditManager</para>
            </listitem>

            <listitem>
              <para>Now always displaying possible process extended
              attributes</para>
            </listitem>

            <listitem>
              <para>Now supporting new way of defining SMTPEventAuditManager
              extended attributes (different names for activity/process EAS +
              possiblity to define default SMTP attributes on process and
              package level for the activity and on the package level for the
              process)</para>
            </listitem>

            <listitem>
              <para>Now supporting deadline handling via ext attributes</para>
            </listitem>

            <listitem>
              <para>Code refactored regarding SMTP handling (event audit,
              error, limit, deadline)</para>
            </listitem>

            <listitem>
              <para>Changed "system" variable naming and validation according
              to new Shark features (SharkPanelGenerator and
              SharkXPDLValidator changes)</para>
            </listitem>

            <listitem>
              <para>Example (shark) XPDLs changed according to the changes
              made in Shark</para>
            </listitem>

            <listitem>
              <para>Support for configuration choice variables</para>
            </listitem>

            <listitem>
              <para>Support for SHARK STRING VARIABLES</para>
            </listitem>

            <listitem>
              <para>Support for system variables</para>
            </listitem>

            <listitem>
              <para>Now validating uniqueness of variables considering Shark's
              system variables and configuration parameters</para>
            </listitem>

            <listitem>
              <para>Now validating variables' InitialValue
              circular/self/implicit circular references</para>
            </listitem>

            <listitem>
              <para>Fixed bug in Shark's tooltip manager</para>
            </listitem>
          </itemizedlist>
        </listitem>

        <listitem>
          <para>Improved ActualParameters panel</para>
        </listitem>

        <listitem>
          <para>Now validating variables' InitialValue expressions</para>
        </listitem>

        <listitem>
          <para>Added more icons that can be used when setting Activity's
          cutom icon</para>
        </listitem>

        <listitem>
          <para>New application and XPDL icons</para>
        </listitem>

        <listitem>
          <para>Now icons in the taskbar are grouped</para>
        </listitem>

        <listitem>
          <para>New way of signing with timestamping implemented (different
          servers possible for timestamping)</para>
        </listitem>
      </itemizedlist>
    </section>

    <section>
      <title>Release 4.8-1</title>

      <itemizedlist>
        <listitem>
          <para>TXM updated to version 1.7-1</para>
        </listitem>

        <listitem>
          <para>TRR updated to version 1.5-1</para>
        </listitem>

        <listitem>
          <para>WfXML component: now actions enabled/disabled depending on
          selection and in the case of WfXML is connected to Shark engine,
          depending on Shark's upload/update logic</para>
        </listitem>

        <listitem>
          <para>WfXML component: when connected to Shark engine, can't update
          URL/Name/Description/Version/Status</para>
        </listitem>

        <listitem>
          <para>Shark mode: Support for SESSION_HANDLE, SHARK_VERSION,
          SHARK_RELEASE, SHARK_BUILDID variables</para>
        </listitem>

        <listitem>
          <para>Shark mode: Support for DYNAMICSCRIPT attribute for variables
          (including validation for self/cross/implicit-cross
          references)</para>
        </listitem>

        <listitem>
          <para>Shark mode: Email configuration section for manual activity
          element and workflow process element (used with
          SMTPEventAuditManager). Nice GUI and XPDL validation. Tooltip
          information provided.</para>
        </listitem>

        <listitem>
          <para>Shark mode: supported CHECK_FOR_COMPLETION extended
          attribute</para>
        </listitem>

        <listitem>
          <para>Shark mode: Improved validation. Now when validating special
          extended attributes (for client GUI forms and for
          SMTPEventAuditManager), "NON_EXISTING_VARIABLE_REFERENCE" ERRORS are
          considered WARNINGS if there is an extended attribute at
          WorkflowProcess/Package level that allows undefined variables
          (Formal/Actual parameter matching validation still considers such
          cases an ERROR cases)</para>
        </listitem>

        <listitem>
          <para>Shark mode: Introduced validation for Application definitions
          depending on ToolAgentClass extended attribute value (Shark tool
          agent dependent validation)</para>
        </listitem>

        <listitem>
          <para>Shark mode: Improved GUI for Application definitions</para>
        </listitem>

        <listitem>
          <para>New GUI for TaskApplication and SubFlow activity modeling
          (actual-&gt;formal parameters)</para>
        </listitem>

        <listitem>
          <para>Added new actions to start and stop design time XPDL
          validation (useful to stop it when dealing with big XPDLs)</para>
        </listitem>

        <listitem>
          <para>Added possibility to all panels to display tooltip</para>
        </listitem>

        <listitem>
          <para>Enhanced GUI</para>
        </listitem>

        <listitem>
          <para>Improved ProblemsNavigator</para>
        </listitem>

        <listitem>
          <para>Now when opening/reopening XPDL file, if possible, JaWE
          automatically switches to the mode written in XPDL file
          itself</para>
        </listitem>

        <listitem>
          <para>Property panel for artifacts changed: now panel contains only
          neccessary properties depending on artifact type (Annotation or
          DataObject)</para>
        </listitem>

        <listitem>
          <para>Supported BasicType DATE and TIME data types</para>
        </listitem>
      </itemizedlist>
    </section>

    <section>
      <title>Release 4.7-1</title>

      <itemizedlist>
        <listitem>
          <para>TXM updated to version 1.6-1</para>
        </listitem>

        <listitem>
          <para>TRR updated to version 1.4-1</para>
        </listitem>

        <listitem>
          <para>Ant library updated to version 1.8.4</para>
        </listitem>

        <listitem>
          <para>Common I/O library updated to version 2.4</para>
        </listitem>

        <listitem>
          <para>docbook-xsl library updated to version 1.77.1</para>
        </listitem>

        <listitem>
          <para>iText5 library updated to version 5.3.2</para>
        </listitem>

        <listitem>
          <para>jgraph library updated to version 5.14.0.0</para>
        </listitem>

        <listitem>
          <para>Improved XPDL icon</para>
        </listitem>

        <listitem>
          <para>Shark configuration: now graph component is not showing grid
          and not showing transition conditions by default</para>
        </listitem>
      </itemizedlist>
    </section>

    <section>
      <title>Release 4.6-1</title>

      <itemizedlist>
        <listitem>
          <para>TXM updated to version 1.5-1</para>
        </listitem>

        <listitem>
          <para>TRR updated to version 1.3-1</para>
        </listitem>

        <listitem>
          <para>Installation fixed so now TWE configuration can be switched
          ("Default", "Loop activity sample", "Shark") no matter how User
          Access Controls (UAC) are configured on Windows machine</para>
        </listitem>

        <listitem>
          <para>Start menu/desktop/taskbar icons improved</para>
        </listitem>
      </itemizedlist>
    </section>

    <section>
      <title>Release 4.5-1</title>

      <itemizedlist>
        <listitem>
          <para>Updated TXM to version 1.4-1</para>
        </listitem>

        <listitem>
          <para>Updated TRR to version 1.2-1</para>
        </listitem>

        <listitem>
          <para>Changes in the builds/structure according to standards</para>
        </listitem>

        <listitem>
          <para>Java 7 is now prerequisite</para>
        </listitem>
      </itemizedlist>
    </section>

    <section>
      <title>Release 4.4-1</title>

      <itemizedlist>
        <listitem>
          <para>Updated TXM to version 1.3-1</para>
        </listitem>

        <listitem>
          <para>Updated commons-io library to version 2.1</para>
        </listitem>

        <listitem>
          <para>Updated itext5 to version 5.13</para>
        </listitem>

        <listitem>
          <para>Updated DOCBOOK DTD to version 5.0</para>
        </listitem>

        <listitem>
          <para>Updated 3-line titlepage of documentation (PDF)</para>
        </listitem>

        <listitem>
          <para>Project structure changed according to the new standard (no
          dependency output anymore, components output instead).</para>
        </listitem>

        <listitem>
          <para>Linux builds improved</para>
        </listitem>

        <listitem>
          <para>NSIS and exe installation improvement</para>
        </listitem>

        <listitem>
          <para>Shark mode: Reporting an error if Name fields of
          WorkflowProcess/Activity, Id fields of WorkflowProcess/Activity or
          ExceptionName field length is inappropriate</para>
        </listitem>

        <listitem>
          <para>Allowing saving of XPDLs with validation warnings in
          "Released" XPDL Publication Status</para>
        </listitem>

        <listitem>
          <para>WfXML: URL sample displayed</para>
        </listitem>

        <listitem>
          <para>Icon and Title now appears in Help-&gt;Manual dialog</para>
        </listitem>

        <listitem>
          <para>Java7 compatibility: - refactored getType/setType methods of
          JaWEComponent interface to getComponentType/setComponentType -
          replaced propriatary SUN classes for JPEG handling (from
          com.sun.image.codec.jpeg package) with ImageIO API
          (SaveAsJPG.java)</para>
        </listitem>
      </itemizedlist>
    </section>

    <section>
      <title>Release 4.3-1</title>

      <itemizedlist>
        <listitem>
          <para>LDAPPageSize option added to the configuration - now searches
          will not return partial results because of LDAP server's size
          limit</para>
        </listitem>
      </itemizedlist>
    </section>

    <section>
      <title>Release 4.2-1</title>

      <itemizedlist>
        <listitem>
          <para>Code modified to support WfXML access through HTTPS</para>
        </listitem>

        <listitem>
          <para>Now only producing twe.zip for TWS dependency</para>
        </listitem>

        <listitem>
          <para>Build process changed (preparations for new TAB based
          release):</para>

          <itemizedlist>
            <listitem>
              <para>now possible to manualy specify "buildid" configuration
              parameter (e.g. configure -buildid 20110721-0808)</para>
            </listitem>

            <listitem>
              <para>build scripts corrected so the sources can be built if
              they are in the folder which contains spaces in the path</para>
            </listitem>

            <listitem>
              <para>try/catch blocks removed from documentation build.xml
              file</para>
            </listitem>

            <listitem>
              <para>components folder in the distribution output/components
              files in the sources (TAB support)</para>
            </listitem>
          </itemizedlist>
        </listitem>

        <listitem>
          <para>TXM library updated to version 1.2-1</para>
        </listitem>
      </itemizedlist>
    </section>

    <section>
      <title>Release 4.1-1</title>

      <itemizedlist>
        <listitem>
          <para>Apache Ant libraries updated to version 1.8.2 (ant.jar and
          ant-launcher.jar)</para>

          <itemizedlist>
            <listitem>
              <para>Removed nodeps.jar</para>
            </listitem>
          </itemizedlist>
        </listitem>

        <listitem>
          <para>Xerces library updated to version 2.11.0
          (xercesImpl.jar).</para>
        </listitem>

        <listitem>
          <para>Apache Common I/O library updated to version 2.0.1
          (commons-io.jar).</para>
        </listitem>

        <listitem>
          <para>XML Commons library updated to version 1.4_01
          (xml-apis.jar).</para>
        </listitem>

        <listitem>
          <para>Xml Graphics Commons library updated to version 1.4
          (xmlgraphics-commons.jar).</para>
        </listitem>

        <listitem>
          <para>FOP library updated to version 1.0 (fop.jar).</para>
        </listitem>

        <listitem>
          <para>iText library upgraded to version 5.0.6 (itext.jar).</para>
        </listitem>

        <listitem>
          <para>DocBook-XSL libraries updated to version 1.76.1
          (docbook-xsl).</para>
        </listitem>

        <listitem>
          <para>Added fix for "Save as PDF" bug.</para>
        </listitem>

        <listitem>
          <para>Added support for silent installation.</para>
        </listitem>

        <listitem>
          <para>Updated contact email to
          <email>twe@togetherteam.co.th.</email></para>
        </listitem>

        <listitem>
          <para>Updated build script to support building of debug version and
          added "debug" folder to output.</para>
        </listitem>

        <listitem>
          <para>Removed Java API documentation from distribution zip/ tar.gz/
          exe/ rpm files.</para>
        </listitem>

        <listitem>
          <para>Added fix for bug with copying processes/ activity sets from
          "transient" packages.</para>
        </listitem>

        <listitem>
          <para>Added fix: not creating unnecessary NodeGraphicsInfo element
          for Pools when process/activity set gets copied.</para>
        </listitem>

        <listitem>
          <para>Updated JAR's MANIFEST information</para>
        </listitem>

        <listitem>
          <para>Added Together Read Registry (TRR) library version
          1.0-1</para>

          <itemizedlist>
            <listitem>
              <para>Removed readregistry.nsi</para>
            </listitem>
          </itemizedlist>
        </listitem>

        <listitem>
          <para>Standardized the project sources:</para>

          <itemizedlist>
            <listitem>
              <para>Updated directory names, filenames and output directory
              structure.</para>
            </listitem>
          </itemizedlist>
        </listitem>

        <listitem>
          <para>Removed Together Application Server (TAS) dependency
          target.</para>
        </listitem>

        <listitem>
          <para>Added support for "Script" Activity type (TaskScript from
          XPDL).</para>
        </listitem>

        <listitem>
          <para>Updated to improve property panels for DataField and
          FormalParameter elements.</para>
        </listitem>

        <listitem>
          <para>Updated property panels for
          ActualParameter/InitialValue/DeadlineDuration/Condition
          elements</para>
        </listitem>

        <listitem>
          <para>Added various improvements.</para>
        </listitem>
      </itemizedlist>
    </section>

    <section>
      <title>Release 4.0-1</title>

      <itemizedlist>
        <listitem>
          <para>Now supporting XPDL 2.1 and BPMN</para>
        </listitem>

        <listitem>
          <para>Using jxpdl.jar file, the output of Together XPDL Model
          (TXM)/jXPDL project. This contains the XPDL 2 model classes that
          were previously the part of Enhydra Shark (Together Workflow Server)
          project.</para>
        </listitem>

        <listitem>
          <para>Automatic migration of XPDL 1.0 files into XPDL 2.1
          files:</para>

          <itemizedlist>
            <listitem>
              <para>Inserting pools and lanes for each workflow process
              definition</para>
            </listitem>

            <listitem>
              <para>Migrating Ids for activities and activity sets - must be
              unique on the package level (done by TXM)</para>
            </listitem>

            <listitem>
              <para>Migrating Tool activities into Task-Application
              activities, if there are more than one tool for the activity -
              new activities get created and connected sequentially (done by
              TXM)</para>
            </listitem>

            <listitem>
              <para>Migrating activities (other than Route activities) with
              Join type different than XOR and Split type different than AND
              by creating additional Route (gateway) activities that are
              containing those Join/Split types, and connecting them
              sequentially (done by TXM)</para>
            </listitem>

            <listitem>
              <para>Migrating Route activities with different Join/Split type
              into two seperate activities and connecting them sequentially
              (done by TXM)</para>
            </listitem>

            <listitem>
              <para>Migrating old Deadline's DeadlineCondition into
              DeadlineDuration sub-element, according to new schema (done by
              TXM)</para>
            </listitem>

            <listitem>
              <para>Migrating old XOR/AND Join/Split types into
              Exclusive/Parallel, according to new schema (done by TXM)</para>
            </listitem>

            <listitem>
              <para>Removing FormalParameter Index attribute, according to new
              schema (done by TXM)</para>
            </listitem>

            <listitem>
              <para>Migrating IsArray attribute value (of DataField element)
              from TRUE into true and from FALSE into false, according to new
              schema (done by TXM)</para>
            </listitem>

            <listitem>
              <para>Migrating Activity's Start/Finish mode elements into
              appropriate attributes according to new schema (done by
              TXM)</para>
            </listitem>

            <listitem>
              <para>Migrating Activity's Performer element into Performers
              element according to new schema (done by TXM)</para>
            </listitem>

            <listitem>
              <para>Migrating order of WorkflowProcess sub-elements
              (DataFields,Participants,Applications -&gt; Participants,
              Applications, DataFields) (done by TXM)</para>
            </listitem>
          </itemizedlist>
        </listitem>

        <listitem>
          <para>Using BPMN graphical notation for Graph component</para>
        </listitem>

        <listitem>
          <para>Partial XPDL2.1/BPMN support:</para>

          <itemizedlist>
            <listitem>
              <para>Using Pools and Lanes (supported nesting of lanes)</para>
            </listitem>

            <listitem>
              <para>Support for Artifacts (DataObject and Annotation type) and
              Associations</para>
            </listitem>

            <listitem>
              <para>Support for Start and End event Activities</para>
            </listitem>

            <listitem>
              <para>Support for Task-Application activities (Tool activities
              from XPDL 2.1 converted into Task-Application activities)</para>
            </listitem>

            <listitem>
              <para>Support for Graphical notation elements that hold
              information about position, color, etc. of the objects (removed
              extended attributes previously used for that purpose)</para>
            </listitem>
          </itemizedlist>
        </listitem>

        <listitem>
          <para>Introduced possibility to change graphical element colors and
          sizes (information written into appropriate XPDL2.1 entities)</para>
        </listitem>

        <listitem>
          <para>Sub-Flow and Block activity now showing their graphs when
          single-clicking on the rectangle area that graphically describes
          such activities</para>
        </listitem>

        <listitem>
          <para>New actions to show and hide transition conditions
          (expressions) in/from the graph</para>
        </listitem>

        <listitem>
          <para>New actions to show/hide artifacts and associations in/from
          the graph</para>
        </listitem>

        <listitem>
          <para>Property panels for elements adjusted according to new XPDL
          2.1 schema/specification</para>
        </listitem>

        <listitem>
          <para>Validation adjusted according to new XPDL 2.1
          schema/specification</para>
        </listitem>

        <listitem>
          <para>Documentation updated</para>
        </listitem>

        <listitem>
          <para>XPDL2.1 samples added (now there are old XPDL1.0 samples,and
          corresponding XPDL2.1 samples)</para>
        </listitem>

        <listitem>
          <para>Build procedure updated</para>
        </listitem>

        <listitem>
          <para>twe-includes.xlsx file with the list of 3rd party libraries
          updated</para>
        </listitem>

        <listitem>
          <para>Removed wfmopen configuration since WfMOpen engine still does
          not support XPDL 2</para>
        </listitem>

        <listitem>
          <para>Removed purexpdl configuration - does not make sense any more
          since TWE 4.x does not use extended attributes for storing graphical
          information (standard XPDL 2 elements are used now)</para>
        </listitem>
      </itemizedlist>
    </section>

    <section>
      <title>Release 3.3-1</title>

      <itemizedlist>
        <listitem>
          <para>Updated sharkxpdlmodel.jar to version 3.3-1</para>
        </listitem>

        <listitem>
          <para>Docbook upgraded to the version 1.75-2, removed enhydra
          specific stuff</para>
        </listitem>

        <listitem>
          <para>Xalan 2.7-1 added to the project and used instead of saxon to
          generate docbook docu</para>
        </listitem>

        <listitem>
          <para>jEdit-Syntax binary code replaced with "home-build" version of
          projects' CVS sources. (The problem was that the downloaded 2.2.1
          version source code didn't match the binaries) Several *.java source
          files updated to the new package names</para>
        </listitem>

        <listitem>
          <para>Saxon removed from the project</para>
        </listitem>

        <listitem>
          <para>batik-xxx.jar files removed from the project (using batik.jar
          comming with FOP) - build scripts modified</para>
        </listitem>

        <listitem>
          <para>Added new XPDL (real life) samples</para>
        </listitem>

        <listitem>
          <para>Release notes merged into the single docbook documentation
          file</para>
        </listitem>

        <listitem>
          <para>Fix: issues with defining Record and Union type
          variables</para>
        </listitem>

        <listitem>
          <para>Link to homepage changed to the new address</para>
        </listitem>

        <listitem>
          <para>Company name in various source files changed to Together
          Teamsolutions Co., Ltd.</para>
        </listitem>

        <listitem>
          <para>Source distribution does not contain unnecessary temporary
          files and build.properties file anymore</para>
        </listitem>

        <listitem>
          <para>Added copyright and GPL V3 comment at top of every source file
          where missing (including *.xml, *.properties, *.xpdl...
          files)</para>
        </listitem>

        <listitem>
          <para>BuildID.txt file added to the binary output - it specifies the
          time when the release was built</para>
        </listitem>

        <listitem>
          <para>Distribution packaging changed:</para>

          <para><itemizedlist>
              <listitem>
                <para>twe-doc-x.y-z.zip and twe-screen-x.y-z.zip now also end
                up into community folder</para>
              </listitem>

              <listitem>
                <para>Webstart distribution now packed into
                twe-x.y-z.webstart.zip file</para>
              </listitem>

              <listitem>
                <para>Documentation in documentation folder of the
                distribution is now unpacked</para>
              </listitem>

              <listitem>
                <para>twe-doc-current.pdf with the same content as the current
                version of project docu ends up into community folder</para>
              </listitem>

              <listitem>
                <para>BuildID.txt file ends up into internal folder</para>
              </listitem>

              <listitem>
                <para>Added TAS dependency build (the same as originals but
                with the name not including version and release, and with both
                Windows and Linux scripts included)</para>
              </listitem>

              <listitem>
                <para>Added twe.zip and twe.tar.gz to TWS dependency build
                (the same as originals but with the name not including version
                and release)</para>
              </listitem>
            </itemizedlist></para>
        </listitem>

        <listitem>
          <para>Docbook documentation file twe.xml renamed to
          twe-doc.xml</para>
        </listitem>

        <listitem>
          <para>Docbook docu updated</para>

          <itemizedlist>
            <listitem>
              <para>Documentation content updated</para>
            </listitem>

            <listitem>
              <para>Added section into documentation Build guide about all
              possible configure/make targets</para>
            </listitem>

            <listitem>
              <para>Build guide updated with the part related to
              sign.properties</para>
            </listitem>

            <listitem>
              <para>Changed license to FDL version 1.3</para>
            </listitem>

            <listitem>
              <para>Fixed docbook docu and build scripts to solve picture and
              table sizing issues in PDFs</para>
            </listitem>

            <listitem>
              <para>Fixed issues with programlisting elements (taking care
              that lines are not too long)</para>
            </listitem>
          </itemizedlist>
        </listitem>

        <listitem>
          <para>Program group entry for API docu removed</para>
        </listitem>

        <listitem>
          <para>XPDL sample files opened and saved with the newest version of
          editor</para>
        </listitem>

        <listitem>
          <para>Standardized make/configure targets</para>
        </listitem>

        <listitem>
          <para>Improved make/configure scripts for windows and linux</para>
        </listitem>

        <listitem>
          <para>Improved build procedure so it doesn't fail if sign.properties
          file does not contain right information</para>
        </listitem>

        <listitem>
          <para>improved NSIS script - now size of TWE is displayed in Control
          panel Add/Remove</para>
        </listitem>

        <listitem>
          <para>twe-includes.xlsx file with the list of 3rd party libraries
          updated.</para>
        </listitem>

        <listitem>
          <para>Branding context and build procedure updated</para>
        </listitem>

        <listitem>
          <para>Removed -optimized parameter for configure script</para>
        </listitem>

        <listitem>
          <para>Project license now goes to licenses folder, together with
          other licenses</para>
        </listitem>

        <listitem>
          <para>Fixed issue with building RPM distributions from SVN sources
          on Linux</para>
        </listitem>

        <listitem>
          <para>Build number (in about box) does not contain C anymore</para>
        </listitem>

        <listitem>
          <para>When XPDL file gets created by the editor, Vendor name now set
          to (c) Together Teamsolutions Co., Ltd.</para>
        </listitem>
      </itemizedlist>
    </section>

    <section>
      <title>Release 3.2-2</title>

      <itemizedlist>
        <listitem>
          <para>Added copyright and GPL V3 comment at top of every source
          file</para>
        </listitem>

        <listitem>
          <para>Updated sharkxpdlmodel.jar to version 3.2-2</para>
        </listitem>

        <listitem>
          <para>Fix in Utils.java class - path with empty space problem and
          findPropertyFiles() method usage in eclipse</para>
        </listitem>
      </itemizedlist>
    </section>

    <section>
      <title>Release 3.2-1</title>

      <itemizedlist>
        <listitem>
          <para>code restructured</para>
        </listitem>

        <listitem>
          <para>updated base component's JAR files to more recent versions
          (batik, ant, itext, xerces, saxon, fop, java help, jedit syntax and
          JGraph). Code modified accordingly.</para>
        </listitem>

        <listitem>
          <para>updated build scripts (build procedure changes)</para>
        </listitem>

        <listitem>
          <para>new splash screen</para>
        </listitem>

        <listitem>
          <para>project moved to source forge</para>
        </listitem>
      </itemizedlist>
    </section>

    <section>
      <title>Release 3.1-3</title>

      <itemizedlist>
        <listitem>
          <para>updated build scripts</para>
        </listitem>

        <listitem>
          <para>sharkxpdlmodel.jar version 3.1-3 included</para>
        </listitem>
      </itemizedlist>
    </section>

    <section>
      <title>Release 3.1-2</title>

      <itemizedlist>
        <listitem>
          <para>updated build scripts</para>
        </listitem>
      </itemizedlist>
    </section>

    <section>
      <title>Release 3.1-1</title>

      <itemizedlist>
        <listitem>
          <para>updated build scripts</para>
        </listitem>

        <listitem>
          <para>minor changes</para>
        </listitem>
      </itemizedlist>
    </section>

    <section>
      <title>Release 3.0-2</title>

      <itemizedlist>
        <listitem>
          <para>introduced possibility to start JaWE in non-frame/dialog
          mode</para>
        </listitem>

        <listitem>
          <para>NSIS tool is updated to version 2.46</para>
        </listitem>

        <listitem>
          <para>readregistry.nsi script is improved - readregistry.exe is able
          to get information about Java from 64bit part of the
          registry.</para>
        </listitem>
      </itemizedlist>
    </section>

    <section>
      <title>Release 3.0-1</title>

      <itemizedlist>
        <listitem>
          <para>Moved completely to open-source, with license changed to GPL
          V3</para>
        </listitem>

        <listitem>
          <para>All the sources available on OW2 including the ones for
          branding TWE</para>
        </listitem>

        <listitem>
          <para>Included missing features of JPEd (editor based on previous
          community version of TWE):</para>

          <para><itemizedlist>
              <listitem>
                <para>No annoying 30 seconds splash screen</para>

                <para>since now community version of TWE has all the fatures
                professional version had, and does not display annoying splash
                screen</para>
              </listitem>

              <listitem>
                <para>Do not lose layout during load/save operations:</para>

                <para>this version of TWE by default doesn't lose layouting
                information, there is a special "configuration" called "Pure
                XPDL" where all TWE specific extended attributes are not
                persisted into XPDL, including the ones that cause lost of
                layouting information during load/save)</para>
              </listitem>

              <listitem>
                <para>The Plugins interface allows you to write wizards,
                custom XPDL elements editors, custom tooltips, custom views.
                With it you can easily make jped company requirements</para>

                <para>TWE architecture is pluggable, thus one can write any
                kind of plug-ins, can provide custom XPDL element editors
                (additional ones comparing to JPEd and previous TWE community
                version exist in this new version), can configure different
                tooltip generator etc...</para>
              </listitem>

              <listitem>
                <para>Generate PDF reports of your workflow. Get a complete
                view of your workflow in a ready to print format. Plugins can
                be used also to customize PDF outputs.</para>

                <para>The part of the code is taken from JPEd and included in
                TWE</para>
              </listitem>

              <listitem>
                <para>A fully customizable interface, using properties file
                and system properties: - Restrict the availabe actions in
                interface or to extend them at glance, depending your target
                users. - Easily create a custom layout that is easier to
                manipulate for end-users. - Combined with a wizard plugin, you
                can prefill an XPDL or auto update it, letting user
                concentrate only on you core buisness.</para>

                <para>TWE has ability to configure user interface through
                property files, to restrict/extend available actions or to
                define which parts of XPDL to hide to the user, define
                layouts, and also by custom core plug-ins.</para>

                <para>It has a powerful templating mechanism, where one can
                easily add a new type of prefilled XPDL object, and in the
                case of activities to easily include it in the toolbox just by
                configuration and property files</para>
              </listitem>

              <listitem>
                <para>Generate real vectorial (SVG) output of graph, including
                the Ids of activity, participants and transitions. (Zoom at
                any level with any SVG enabled tool or use it in a workflow
                engine web interface to highlight current status with just a
                simple svg stylesheet.)</para>

                <para>This part of code was taken from JPEd and included in
                TWE</para>
              </listitem>

              <listitem>
                <para>Quick search dropdowns make it easy to handle long list
                of participants</para>

                <para>Already existed in TWE community</para>
              </listitem>

              <listitem>
                <para>For shark users, an integrated form editor which also
                add additional informations in tooltips and PDF</para>

                <para>TWE has a special shark configuration, where not only
                this feature is provided, but also customized panels adjusted
                to Shark's extended attributes and other options, special
                Shark XPDL validation, etc.</para>

                <para>The same thing is done for WfMOpen (special WfMOpen
                configuration)</para>
              </listitem>

              <listitem>
                <para>See the XPDL fragment of each element you are editing,
                know exactly what you are doing at XPDL level in each
                dialog.</para>

                <para>In TWE, XPDL View shows the fragment of any selected
                element in XPDL</para>
              </listitem>

              <listitem>
                <para>Condition editor, gives you a dropdown box to select
                workflow variables and provides syntax highlighting for
                scripted conditions</para>

                <para>This feature existed in TWE professional version and
                thus appears in this version now.</para>
              </listitem>

              <listitem>
                <para>Customize JPEd logo to fit your company need, provide a
                splash logo when editor is loading, using a simple System
                property</para>

                <para>TWE sources now have a "branding" capability. You can
                brand the whole project (icons, setup, splash logo, about box
                information) and get setup.exe file for installing such
                product</para>
              </listitem>
            </itemizedlist></para>
        </listitem>

        <listitem>
          <para>XPDL Model code moved to Shark (LGPL licensed) and now taken
          from Shark</para>
        </listitem>
      </itemizedlist>
    </section>

    <section>
      <title>Release 2.5-1</title>

      <itemizedlist>
        <listitem>
          <para>Highlighting java/javascript syntax in fields for entering
          expression criteria (Transition conditions, deadline expressions,
          actual parameters)</para>
        </listitem>

        <listitem>
          <para>Activity's performer field now comes with higlight editor for
          java/javascript, and buttons to chose participant and
          variables</para>
        </listitem>

        <listitem>
          <para>Problems component view now depends on selection
          (Package/Workflow Process/ActivitySet)</para>
        </listitem>

        <listitem>
          <para>Improved expression's validation</para>
        </listitem>

        <listitem>
          <para>Implemented table sorting</para>
        </listitem>

        <listitem>
          <para>Improved D&amp;D of table entries</para>
        </listitem>
      </itemizedlist>
    </section>

    <section>
      <title>Release 2.4-1</title>

      <itemizedlist>
        <listitem>
          <para>Shark configuration adjustement to new shark 2.2-1version:
          PROCESS_ID and ACTIVITY_ID can be used in transition condition's and
          as actual parameters</para>
        </listitem>

        <listitem>
          <para>Implemented possibility to switch DataField to a
          FormalParameter and vice-versa</para>
        </listitem>

        <listitem>
          <para>Core extended to support new ext. attribute types per their
          parent object (Activity, Application, ...)</para>
        </listitem>

        <listitem>
          <para>Improved property panels</para>
        </listitem>

        <listitem>
          <para>Serbian property file renamed to have extension "sr" instead
          of "sh"</para>
        </listitem>

        <listitem>
          <para>Fixed bug with external packages (when newly opened XPDL has
          the external package with the same Id but different location as the
          one opened before)</para>
        </listitem>
      </itemizedlist>
    </section>

    <section>
      <title>Release 2.3-2</title>

      <itemizedlist>
        <listitem>
          <para>Implementation-Version attribute included into MANIFEST of jar
          files</para>
        </listitem>

        <listitem>
          <para>Improved installation procedure - language dependent stuff and
          links to the application from start menu</para>
        </listitem>

        <listitem>
          <para>Fixed bug in SharkXPDLObjectFactory - wasn't able to properly
          use Activity's "Variables" tab</para>
        </listitem>

        <listitem>
          <para>Fixed: bug in ExternalPkgRelations component (NPE when
          selecting Arbitrary Expression Participipant)</para>
        </listitem>
      </itemizedlist>
    </section>

    <section>
      <title>Release 2.3-1</title>

      <itemizedlist>
        <listitem>
          <para>Added new component for LDAP participant handling (the old
          action from the menu bar removed)</para>
        </listitem>

        <listitem>
          <para>Option buttons displayed for the language and configuration
          choices (the selected language/configuration is marked)</para>
        </listitem>

        <listitem>
          <para>Language switch is now possible in run-time</para>
        </listitem>

        <listitem>
          <para>Added configuration file which contains information about
          configuration name to be displayed for the configuration choices and
          in the title bar.</para>
        </listitem>

        <listitem>
          <para>Architectural changes to support add-on architecture</para>
        </listitem>

        <listitem>
          <para>Community version now can also display the result of
          References and Search action</para>
        </listitem>

        <listitem>
          <para>Core code is improved so now it is possible to add new object
          types without coding (just by configuration). Now we use XML
          templates for new object types (XPDL fragments).</para>
        </listitem>

        <listitem>
          <para>Top tree elements now have '-' displayed if they contain
          sub-elements</para>
        </listitem>

        <listitem>
          <para>Portuguese translation included</para>
        </listitem>

        <listitem>
          <para>Solved language usage issues with parser, JOptionPane,
          JFileChooser, missing strings,etc.</para>
        </listitem>

        <listitem>
          <para>Added additional language property file where you can define
          additional language specific properties per the
          configuration.</para>
        </listitem>

        <listitem>
          <para>Fixed: bug when adding external package which contains
          processes with activity sets and when "automatic layouting" is
          turned on.Fixed: bug in handling of transient packages that appeared
          when you have transient package in the pool and you try to open XPDL
          from unexisting file - this caused all packages to unload from
          XMLInterface and after it happens it was possible to have two XPDLs
          with same Id in TWE.</para>
        </listitem>
      </itemizedlist>
    </section>

    <section>
      <title>Release 2.2-1</title>

      <itemizedlist>
        <listitem>
          <para>Implemented Search capability for searching XPDL elements
          based on specified criteria.</para>
        </listitem>

        <listitem>
          <para>In TWE's default configuration/mode, workflow_patterns.xpdl is
          present in Transient package pool</para>
        </listitem>

        <listitem>
          <para>Improvement: when configured to save XPDLs with namespace
          prefix and if XPDL didn't have xpdl namespace defined TWE now
          automatically adds this namespace.</para>
        </listitem>

        <listitem>
          <para>More icons for XPDL entities are shown in
          DetailedPackageNavigator view</para>
        </listitem>

        <listitem>
          <para>New configuration parameter for validating if variable
          (DataField or WorkflowProcess's FormalParameter) is not used
          anywhere in XPDL (nor as actual parameter or inside expression). If
          it is not used, warning is reported when validating XPDL.</para>
        </listitem>

        <listitem>
          <para>Icons defined for all entries in menu bar</para>
        </listitem>

        <listitem>
          <para>Some shortcut/accelerator keys have changed</para>
        </listitem>

        <listitem>
          <para>Expand all/Collapse all are now context sensitive in relation
          to selected tree-node</para>
        </listitem>

        <listitem>
          <para>Top tree elements now have '-' displayed if they contain
          sub-elements</para>
        </listitem>

        <listitem>
          <para>Switched to 2.9 version of xerces</para>
        </listitem>

        <listitem>
          <para>Spanish translation included</para>
        </listitem>

        <listitem>
          <para>XMLInterface changed - removed method getIdFromFile (it is now
          a static method of XMLUtil class)</para>
        </listitem>

        <listitem>
          <para>Code corrections based on FindBugs report</para>
        </listitem>

        <listitem>
          <para>Fixed: bug with reading of language property files from jar
          file - if there are spaces in the path where TWE is installed they
          were not read</para>
        </listitem>

        <listitem>
          <para>Fixed: bug in XMLCheckBoxPanel - whenever mouse was over, an
          apply button was enabled as if something has changed in a
          panel</para>
        </listitem>

        <listitem>
          <para>Fixed: bug that was introduced in previous version and
          appeares when there are external packages defined and Id of the main
          package is changed</para>
        </listitem>

        <listitem>
          <para>Fixed: when trying to save read-only document TWE didn't
          complain but the changes were not saved to a document</para>
        </listitem>

        <listitem>
          <para>Fixed bug in Shark configuration - bug fix in Shark
          configuration (related with deletion of ext. attribs)</para>
        </listitem>
      </itemizedlist>
    </section>

    <section>
      <title>Release 2.1-1-bugfix build 20061110</title>

      <itemizedlist>
        <listitem>
          <para>fixed bug in Transient Package Pool componenet that was
          manifesting during usage of Common expression and Free Text
          expression participants</para>
        </listitem>

        <listitem>
          <para>fixed bug in Shark configuration - when you delete variable
          from 'Variable' tab, it was not removed from the table</para>
        </listitem>
      </itemizedlist>
    </section>

    <section>
      <title>Release 2.1-1</title>

      <itemizedlist>
        <listitem>
          <para>added Transient Packag Pool component for
          displaying/adding/removing transient packages, and introduced
          configuration option to define transient packages that will be
          loaded by default on TWE startup</para>
        </listitem>

        <listitem>
          <para>added additional graph actions to select activities for
          selected transitions and vice versa</para>
        </listitem>

        <listitem>
          <para>improved shark configuration (added new features to better
          support shark professional version and new shark web admin
          application)</para>
        </listitem>

        <listitem>
          <para>improved documentation</para>
        </listitem>

        <listitem>
          <para>demo version gets demo documentation</para>
        </listitem>

        <listitem>
          <para>when creating new Package, xpdl namespace is added by
          default</para>
        </listitem>

        <listitem>
          <para>improved windows setup.exe distribution - user is asked if he
          wants to add desktop and qucik launch shortcut</para>
        </listitem>

        <listitem>
          <para>code re-organization</para>
        </listitem>

        <listitem>
          <para>Fixed: bug in XMLInterfaceForJDK13-&gt;getPackageById()
          method</para>
        </listitem>
      </itemizedlist>
    </section>

    <section>
      <title>Release 2.0-6</title>

      <itemizedlist>
        <listitem>
          <para>property file location moved from %USER_HOME%/.JaWE to
          %TWE_HOME%/conf/xxx.</para>
        </listitem>

        <listitem>
          <para>enabled re-configuration at runtime - possible configurations
          are placed in sub-folders of %TWE_HOME%/conf, default configuration
          is written in %TWE_HOME%/conf/defaultconf</para>
        </listitem>

        <listitem>
          <para>beside default configuration, added shark configuration,
          wfmopen configuration, samples-loopactivity and purexpdl
          configuration</para>
        </listitem>

        <listitem>
          <para>shark configuration is adjustment of jawe to shark-engine
          restrictions + swing admin ext. attribs. Automatic change of ext.
          attribs when variable Id changes; validation on this special ext.
          attribs and validation according to shark restrictions</para>
        </listitem>

        <listitem>
          <para>wfmopen configuration is adjustment of jawe to wfmopen-engine
          restrictions + special ext. attribs. validation on this special ext.
          attribs and validation according to wfmopen restrictions</para>
        </listitem>

        <listitem>
          <para>improved simple graph layout action's algorithm (never goes
          back in the swimline whenever possible, when there is a split inside
          same swimline - new rows are created, handling of start/end bubbles
          improved)</para>
        </listitem>

        <listitem>
          <para>included David Delbecq's improved drop-down list (switching
          from menu-items to search-able list when there are 30 or more items)
          for inserting participants and selecting activity sets in graph
          component</para>
        </listitem>

        <listitem>
          <para>included David Delbecq's improved drop-down list (switching
          from menu-items to search-able list when there are 30 or more items)
          for selecting packages and workflow processes in info-bar</para>
        </listitem>

        <listitem>
          <para>Search panel renamed to References</para>
        </listitem>

        <listitem>
          <para>Documentation links in windows setup now reference full HTML
          document</para>
        </listitem>

        <listitem>
          <para>API entry in Windows dist is renamed to Together Workflow
          Editor Profesional API</para>
        </listitem>

        <listitem>
          <para>TWE stores new ext. attrib. information in XPDL for
          determining configuration used to create this XPDL</para>
        </listitem>

        <listitem>
          <para>added possibility to chose icon for the activity from the list
          of available icons</para>
        </listitem>

        <listitem>
          <para>added workflow_patterns.xpdl file (originally created for
          shark distribution)</para>
        </listitem>

        <listitem>
          <para>defined keyboard shortcuts for almost all menu items</para>
        </listitem>

        <listitem>
          <para>improved automatic insertion of start/end markers</para>
        </listitem>

        <listitem>
          <para>code re-organization (introduction of new classes and
          configuration properties)</para>
        </listitem>

        <listitem>
          <para>Fixed: rare bug in Graph component when start/end bubbles are
          the only one placed within FreeTextExpression participant</para>
        </listitem>
      </itemizedlist>
    </section>

    <section>
      <title>Release 2.0-5</title>

      <itemizedlist>
        <listitem>
          <para>introduced possibility to chose when adding external packages
          if external package will be "transient" (it won't be saved into the
          file, but its purpose will be to provide a container where from you
          can copy common elements)</para>
        </listitem>

        <listitem>
          <para>introduction of compound icons (no need to define special icon
          for errors and warnings)</para>
        </listitem>

        <listitem>
          <para>Minor code changes/reorganization.</para>
        </listitem>

        <listitem>
          <para>improved automatical insertion of Start/End markers</para>
        </listitem>

        <listitem>
          <para>improved property panel for defining workflow relevant data:
          sub-panel for entering initial value is now bigger</para>
        </listitem>

        <listitem>
          <para>improved usage of LDAP connection: better support of
          ActiveDirectory search, added LDAPReferralHandling property,
          password field hidden</para>
        </listitem>

        <listitem>
          <para>Fixed: bugs in usage of LDAP connection for inserting
          participants (user+password authentication didn't work, search scope
          didn't work)</para>
        </listitem>

        <listitem>
          <para>Fixed: Graph component's tooltip bug in Zoom In/Out
          mode.</para>
        </listitem>
      </itemizedlist>
    </section>

    <section>
      <title>Release 2.0-4</title>

      <itemizedlist>
        <listitem>
          <para>New possibility to save XPDLs with xpdl namespace prefix (TWE
          by default configured to do so)</para>
        </listitem>

        <listitem>
          <para>Added language property files for French and German
          language.</para>
        </listitem>

        <listitem>
          <para>Minor code changes/reorganization.</para>
        </listitem>

        <listitem>
          <para>Now using Xerces 2.8</para>
        </listitem>

        <listitem>
          <para>Fixed: problem with overlapping dialogs after loading XPDL
          file.</para>
        </listitem>

        <listitem>
          <para>Fixed: Enter key didn't work in a table panels</para>
        </listitem>
      </itemizedlist>
    </section>

    <section>
      <title>Release 2.0-3</title>

      <itemizedlist>
        <listitem>
          <para>Added language property file for Serbian language.</para>
        </listitem>

        <listitem>
          <para>Code changes/reorganization.</para>
        </listitem>

        <listitem>
          <para>Fixed: if there were many participants in XPDL, pop-up menu
          for showing participants that can be inserted into graph couldn't
          show all of them.</para>
        </listitem>

        <listitem>
          <para>Fixed: TWE didn't change the references when the Id of
          TypeDeclaration is changed.</para>
        </listitem>
      </itemizedlist>
    </section>

    <section>
      <title>Release 2.0-2</title>

      <itemizedlist>
        <listitem>
          <para>added WfXML authentication.</para>
        </listitem>

        <listitem>
          <para>default condition type for newly inserted transitions (via
          graph) is not set which means that by default unconditional
          transition is being inserted (previously default type was
          'Condition')</para>
        </listitem>

        <listitem>
          <para>added new validation option called 'ValidateConditionByType'
          (which default value is true); when set to true, TWE will generate
          warning in following cases:</para>

          <para><itemizedlist>
              <listitem>
                <para>transition's condition type is not set (unconditional
                transition) and there is condition expression defined</para>
              </listitem>

              <listitem>
                <para>transition's condition type is set to 'Condition'
                (conditional transition) and there is no condition expression
                defined</para>
              </listitem>

              <listitem>
                <para>transition's condition type is set to 'Exception'
                (exceptional transition) and there is no condition expression
                defined</para>
              </listitem>

              <listitem>
                <para>transition's condition type is set to 'Otherwise' and
                there is condition expression defined</para>
              </listitem>

              <listitem>
                <para>transition's condition type is set to 'Default
                exception' and there is condition expression defined</para>
              </listitem>
            </itemizedlist></para>
        </listitem>

        <listitem>
          <para>allowed deletion of invalid ExternalPackage elements (when
          there is no external package referenced)</para>
        </listitem>

        <listitem>
          <para>improved conversion of XPDL files from old JaWE versions -&gt;
          Start/End markers are now properly positioned</para>
        </listitem>

        <listitem>
          <para>generally improved XPDL validation</para>
        </listitem>

        <listitem>
          <para>improved procedure of closing changed XPDLs - now TWE doesn't
          ask you to enter the file name if this is an XPDL opened from an
          existing file</para>
        </listitem>

        <listitem>
          <para>logging manager implementiation is now using Java logging
          instead system.out</para>
        </listitem>

        <listitem>
          <para>fixed NPE in LDAP connection</para>
        </listitem>

        <listitem>
          <para>fixed rare bug with repositioning of Objects in the table or
          list</para>
        </listitem>

        <listitem>
          <para>fixed bug with the displaying names of a certain extended
          attributes (e.g. if you defined ext. attrib. with name 'm',
          afterwards you'll see 'minute' instead of 'm' displayed in ext.
          attrib. property panel)</para>
        </listitem>

        <listitem>
          <para>fixed bug with Graph validation of Start/End markers during
          the save of Packages marked as 'Released' (TWE allowed saving of
          incorrect package)</para>
        </listitem>

        <listitem>
          <para>fixed bug with XPDL validation of Tool's Actual-&gt;Formal
          parameter mapping during the save of Packages marked as 'Released'
          (TWE allowed saving of incorrect package)</para>
        </listitem>

        <listitem>
          <para>fixed problem with de-selection of graph during undo</para>
        </listitem>
      </itemizedlist>
    </section>
  </chapter>

  <appendix>
    <title>GNU Free Documentation License</title>

    <para><programlisting>                GNU Free Documentation License
                 Version 1.3, 3 November 2008


 Copyright (C) 2000, 2001, 2002, 2007, 2008 Free Software Foundation, Inc.
     &lt;http://fsf.org/&gt;
 Everyone is permitted to copy and distribute verbatim copies
 of this license document, but changing it is not allowed.

0. PREAMBLE

The purpose of this License is to make a manual, textbook, or other
functional and useful document "free" in the sense of freedom: to
assure everyone the effective freedom to copy and redistribute it,
with or without modifying it, either commercially or noncommercially.
Secondarily, this License preserves for the author and publisher a way
to get credit for their work, while not being considered responsible
for modifications made by others.

This License is a kind of "copyleft", which means that derivative
works of the document must themselves be free in the same sense.  It
complements the GNU General Public License, which is a copyleft
license designed for free software.

We have designed this License in order to use it for manuals for free
software, because free software needs free documentation: a free
program should come with manuals providing the same freedoms that the
software does.  But this License is not limited to software manuals;
it can be used for any textual work, regardless of subject matter or
whether it is published as a printed book.  We recommend this License
principally for works whose purpose is instruction or reference.


1. APPLICABILITY AND DEFINITIONS

This License applies to any manual or other work, in any medium, that
contains a notice placed by the copyright holder saying it can be
distributed under the terms of this License.  Such a notice grants a
world-wide, royalty-free license, unlimited in duration, to use that
work under the conditions stated herein.  The "Document", below,
refers to any such manual or work.  Any member of the public is a
licensee, and is addressed as "you".  You accept the license if you
copy, modify or distribute the work in a way requiring permission
under copyright law.

A "Modified Version" of the Document means any work containing the
Document or a portion of it, either copied verbatim, or with
modifications and/or translated into another language.

A "Secondary Section" is a named appendix or a front-matter section of
the Document that deals exclusively with the relationship of the
publishers or authors of the Document to the Document's overall
subject (or to related matters) and contains nothing that could fall
directly within that overall subject.  (Thus, if the Document is in
part a textbook of mathematics, a Secondary Section may not explain
any mathematics.)  The relationship could be a matter of historical
connection with the subject or with related matters, or of legal,
commercial, philosophical, ethical or political position regarding
them.

The "Invariant Sections" are certain Secondary Sections whose titles
are designated, as being those of Invariant Sections, in the notice
that says that the Document is released under this License.  If a
section does not fit the above definition of Secondary then it is not
allowed to be designated as Invariant.  The Document may contain zero
Invariant Sections.  If the Document does not identify any Invariant
Sections then there are none.

The "Cover Texts" are certain short passages of text that are listed,
as Front-Cover Texts or Back-Cover Texts, in the notice that says that
the Document is released under this License.  A Front-Cover Text may
be at most 5 words, and a Back-Cover Text may be at most 25 words.

A "Transparent" copy of the Document means a machine-readable copy,
represented in a format whose specification is available to the
general public, that is suitable for revising the document
straightforwardly with generic text editors or (for images composed of
pixels) generic paint programs or (for drawings) some widely available
drawing editor, and that is suitable for input to text formatters or
for automatic translation to a variety of formats suitable for input
to text formatters.  A copy made in an otherwise Transparent file
format whose markup, or absence of markup, has been arranged to thwart
or discourage subsequent modification by readers is not Transparent.
An image format is not Transparent if used for any substantial amount
of text.  A copy that is not "Transparent" is called "Opaque".

Examples of suitable formats for Transparent copies include plain
ASCII without markup, Texinfo input format, LaTeX input format, SGML
or XML using a publicly available DTD, and standard-conforming simple
HTML, PostScript or PDF designed for human modification.  Examples of
transparent image formats include PNG, XCF and JPG.  Opaque formats
include proprietary formats that can be read and edited only by
proprietary word processors, SGML or XML for which the DTD and/or
processing tools are not generally available, and the
machine-generated HTML, PostScript or PDF produced by some word
processors for output purposes only.

The "Title Page" means, for a printed book, the title page itself,
plus such following pages as are needed to hold, legibly, the material
this License requires to appear in the title page.  For works in
formats which do not have any title page as such, "Title Page" means
the text near the most prominent appearance of the work's title,
preceding the beginning of the body of the text.

The "publisher" means any person or entity that distributes copies of
the Document to the public.

A section "Entitled XYZ" means a named subunit of the Document whose
title either is precisely XYZ or contains XYZ in parentheses following
text that translates XYZ in another language.  (Here XYZ stands for a
specific section name mentioned below, such as "Acknowledgements",
"Dedications", "Endorsements", or "History".)  To "Preserve the Title"
of such a section when you modify the Document means that it remains a
section "Entitled XYZ" according to this definition.

The Document may include Warranty Disclaimers next to the notice which
states that this License applies to the Document.  These Warranty
Disclaimers are considered to be included by reference in this
License, but only as regards disclaiming warranties: any other
implication that these Warranty Disclaimers may have is void and has
no effect on the meaning of this License.

2. VERBATIM COPYING

You may copy and distribute the Document in any medium, either
commercially or noncommercially, provided that this License, the
copyright notices, and the license notice saying this License applies
to the Document are reproduced in all copies, and that you add no
other conditions whatsoever to those of this License.  You may not use
technical measures to obstruct or control the reading or further
copying of the copies you make or distribute.  However, you may accept
compensation in exchange for copies.  If you distribute a large enough
number of copies you must also follow the conditions in section 3.

You may also lend copies, under the same conditions stated above, and
you may publicly display copies.


3. COPYING IN QUANTITY

If you publish printed copies (or copies in media that commonly have
printed covers) of the Document, numbering more than 100, and the
Document's license notice requires Cover Texts, you must enclose the
copies in covers that carry, clearly and legibly, all these Cover
Texts: Front-Cover Texts on the front cover, and Back-Cover Texts on
the back cover.  Both covers must also clearly and legibly identify
you as the publisher of these copies.  The front cover must present
the full title with all words of the title equally prominent and
visible.  You may add other material on the covers in addition.
Copying with changes limited to the covers, as long as they preserve
the title of the Document and satisfy these conditions, can be treated
as verbatim copying in other respects.

If the required texts for either cover are too voluminous to fit
legibly, you should put the first ones listed (as many as fit
reasonably) on the actual cover, and continue the rest onto adjacent
pages.

If you publish or distribute Opaque copies of the Document numbering
more than 100, you must either include a machine-readable Transparent
copy along with each Opaque copy, or state in or with each Opaque copy
a computer-network location from which the general network-using
public has access to download using public-standard network protocols
a complete Transparent copy of the Document, free of added material.
If you use the latter option, you must take reasonably prudent steps,
when you begin distribution of Opaque copies in quantity, to ensure
that this Transparent copy will remain thus accessible at the stated
location until at least one year after the last time you distribute an
Opaque copy (directly or through your agents or retailers) of that
edition to the public.

It is requested, but not required, that you contact the authors of the
Document well before redistributing any large number of copies, to
give them a chance to provide you with an updated version of the
Document.


4. MODIFICATIONS

You may copy and distribute a Modified Version of the Document under
the conditions of sections 2 and 3 above, provided that you release
the Modified Version under precisely this License, with the Modified
Version filling the role of the Document, thus licensing distribution
and modification of the Modified Version to whoever possesses a copy
of it.  In addition, you must do these things in the Modified Version:

A. Use in the Title Page (and on the covers, if any) a title distinct
   from that of the Document, and from those of previous versions
   (which should, if there were any, be listed in the History section
   of the Document).  You may use the same title as a previous version
   if the original publisher of that version gives permission.
B. List on the Title Page, as authors, one or more persons or entities
   responsible for authorship of the modifications in the Modified
   Version, together with at least five of the principal authors of the
   Document (all of its principal authors, if it has fewer than five),
   unless they release you from this requirement.
C. State on the Title page the name of the publisher of the
   Modified Version, as the publisher.
D. Preserve all the copyright notices of the Document.
E. Add an appropriate copyright notice for your modifications
   adjacent to the other copyright notices.
F. Include, immediately after the copyright notices, a license notice
   giving the public permission to use the Modified Version under the
   terms of this License, in the form shown in the Addendum below.
G. Preserve in that license notice the full lists of Invariant Sections
   and required Cover Texts given in the Document's license notice.
H. Include an unaltered copy of this License.
I. Preserve the section Entitled "History", Preserve its Title, and add
   to it an item stating at least the title, year, new authors, and
   publisher of the Modified Version as given on the Title Page.  If
   there is no section Entitled "History" in the Document, create one
   stating the title, year, authors, and publisher of the Document as
   given on its Title Page, then add an item describing the Modified
   Version as stated in the previous sentence.
J. Preserve the network location, if any, given in the Document for
   public access to a Transparent copy of the Document, and likewise
   the network locations given in the Document for previous versions
   it was based on.  These may be placed in the "History" section.
   You may omit a network location for a work that was published at
   least four years before the Document itself, or if the original
   publisher of the version it refers to gives permission.
K. For any section Entitled "Acknowledgements" or "Dedications",
   Preserve the Title of the section, and preserve in the section all
   the substance and tone of each of the contributor acknowledgements
   and/or dedications given therein.
L. Preserve all the Invariant Sections of the Document,
   unaltered in their text and in their titles.  Section numbers
   or the equivalent are not considered part of the section titles.
M. Delete any section Entitled "Endorsements".  Such a section
   may not be included in the Modified Version.
N. Do not retitle any existing section to be Entitled "Endorsements"
   or to conflict in title with any Invariant Section.
O. Preserve any Warranty Disclaimers.

If the Modified Version includes new front-matter sections or
appendices that qualify as Secondary Sections and contain no material
copied from the Document, you may at your option designate some or all
of these sections as invariant.  To do this, add their titles to the
list of Invariant Sections in the Modified Version's license notice.
These titles must be distinct from any other section titles.

You may add a section Entitled "Endorsements", provided it contains
nothing but endorsements of your Modified Version by various
parties--for example, statements of peer review or that the text has
been approved by an organization as the authoritative definition of a
standard.

You may add a passage of up to five words as a Front-Cover Text, and a
passage of up to 25 words as a Back-Cover Text, to the end of the list
of Cover Texts in the Modified Version.  Only one passage of
Front-Cover Text and one of Back-Cover Text may be added by (or
through arrangements made by) any one entity.  If the Document already
includes a cover text for the same cover, previously added by you or
by arrangement made by the same entity you are acting on behalf of,
you may not add another; but you may replace the old one, on explicit
permission from the previous publisher that added the old one.

The author(s) and publisher(s) of the Document do not by this License
give permission to use their names for publicity for or to assert or
imply endorsement of any Modified Version.


5. COMBINING DOCUMENTS

You may combine the Document with other documents released under this
License, under the terms defined in section 4 above for modified
versions, provided that you include in the combination all of the
Invariant Sections of all of the original documents, unmodified, and
list them all as Invariant Sections of your combined work in its
license notice, and that you preserve all their Warranty Disclaimers.

The combined work need only contain one copy of this License, and
multiple identical Invariant Sections may be replaced with a single
copy.  If there are multiple Invariant Sections with the same name but
different contents, make the title of each such section unique by
adding at the end of it, in parentheses, the name of the original
author or publisher of that section if known, or else a unique number.
Make the same adjustment to the section titles in the list of
Invariant Sections in the license notice of the combined work.

In the combination, you must combine any sections Entitled "History"
in the various original documents, forming one section Entitled
"History"; likewise combine any sections Entitled "Acknowledgements",
and any sections Entitled "Dedications".  You must delete all sections
Entitled "Endorsements".


6. COLLECTIONS OF DOCUMENTS

You may make a collection consisting of the Document and other
documents released under this License, and replace the individual
copies of this License in the various documents with a single copy
that is included in the collection, provided that you follow the rules
of this License for verbatim copying of each of the documents in all
other respects.

You may extract a single document from such a collection, and
distribute it individually under this License, provided you insert a
copy of this License into the extracted document, and follow this
License in all other respects regarding verbatim copying of that
document.


7. AGGREGATION WITH INDEPENDENT WORKS

A compilation of the Document or its derivatives with other separate
and independent documents or works, in or on a volume of a storage or
distribution medium, is called an "aggregate" if the copyright
resulting from the compilation is not used to limit the legal rights
of the compilation's users beyond what the individual works permit.
When the Document is included in an aggregate, this License does not
apply to the other works in the aggregate which are not themselves
derivative works of the Document.

If the Cover Text requirement of section 3 is applicable to these
copies of the Document, then if the Document is less than one half of
the entire aggregate, the Document's Cover Texts may be placed on
covers that bracket the Document within the aggregate, or the
electronic equivalent of covers if the Document is in electronic form.
Otherwise they must appear on printed covers that bracket the whole
aggregate.


8. TRANSLATION

Translation is considered a kind of modification, so you may
distribute translations of the Document under the terms of section 4.
Replacing Invariant Sections with translations requires special
permission from their copyright holders, but you may include
translations of some or all Invariant Sections in addition to the
original versions of these Invariant Sections.  You may include a
translation of this License, and all the license notices in the
Document, and any Warranty Disclaimers, provided that you also include
the original English version of this License and the original versions
of those notices and disclaimers.  In case of a disagreement between
the translation and the original version of this License or a notice
or disclaimer, the original version will prevail.

If a section in the Document is Entitled "Acknowledgements",
"Dedications", or "History", the requirement (section 4) to Preserve
its Title (section 1) will typically require changing the actual
title.


9. TERMINATION

You may not copy, modify, sublicense, or distribute the Document
except as expressly provided under this License.  Any attempt
otherwise to copy, modify, sublicense, or distribute it is void, and
will automatically terminate your rights under this License.

However, if you cease all violation of this License, then your license
from a particular copyright holder is reinstated (a) provisionally,
unless and until the copyright holder explicitly and finally
terminates your license, and (b) permanently, if the copyright holder
fails to notify you of the violation by some reasonable means prior to
60 days after the cessation.

Moreover, your license from a particular copyright holder is
reinstated permanently if the copyright holder notifies you of the
violation by some reasonable means, this is the first time you have
received notice of violation of this License (for any work) from that
copyright holder, and you cure the violation prior to 30 days after
your receipt of the notice.

Termination of your rights under this section does not terminate the
licenses of parties who have received copies or rights from you under
this License.  If your rights have been terminated and not permanently
reinstated, receipt of a copy of some or all of the same material does
not give you any rights to use it.


10. FUTURE REVISIONS OF THIS LICENSE

The Free Software Foundation may publish new, revised versions of the
GNU Free Documentation License from time to time.  Such new versions
will be similar in spirit to the present version, but may differ in
detail to address new problems or concerns.  See
http://www.gnu.org/copyleft/.

Each version of the License is given a distinguishing version number.
If the Document specifies that a particular numbered version of this
License "or any later version" applies to it, you have the option of
following the terms and conditions either of that specified version or
of any later version that has been published (not as a draft) by the
Free Software Foundation.  If the Document does not specify a version
number of this License, you may choose any version ever published (not
as a draft) by the Free Software Foundation.  If the Document
specifies that a proxy can decide which future versions of this
License can be used, that proxy's public statement of acceptance of a
version permanently authorizes you to choose that version for the
Document.

11. RELICENSING

"Massive Multiauthor Collaboration Site" (or "MMC Site") means any
World Wide Web server that publishes copyrightable works and also
provides prominent facilities for anybody to edit those works.  A
public wiki that anybody can edit is an example of such a server.  A
"Massive Multiauthor Collaboration" (or "MMC") contained in the site
means any set of copyrightable works thus published on the MMC site.

"CC-BY-SA" means the Creative Commons Attribution-Share Alike 3.0 
license published by Creative Commons Corporation, a not-for-profit 
corporation with a principal place of business in San Francisco, 
California, as well as future copyleft versions of that license 
published by that same organization.

"Incorporate" means to publish or republish a Document, in whole or in 
part, as part of another Document.

An MMC is "eligible for relicensing" if it is licensed under this 
License, and if all works that were first published under this License 
somewhere other than this MMC, and subsequently incorporated in whole or 
in part into the MMC, (1) had no cover texts or invariant sections, and 
(2) were thus incorporated prior to November 1, 2008.

The operator of an MMC Site may republish an MMC contained in the site
under CC-BY-SA on the same site at any time before August 1, 2009,
provided the MMC is eligible for relicensing.


ADDENDUM: How to use this License for your documents

To use this License in a document you have written, include a copy of
the License in the document and put the following copyright and
license notices just after the title page:

    Copyright (c)  YEAR  YOUR NAME.
    Permission is granted to copy, distribute and/or modify this document
    under the terms of the GNU Free Documentation License, Version 1.3
    or any later version published by the Free Software Foundation;
    with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.
    A copy of the license is included in the section entitled "GNU
    Free Documentation License".

If you have Invariant Sections, Front-Cover Texts and Back-Cover Texts,
replace the "with...Texts." line with this:

    with the Invariant Sections being LIST THEIR TITLES, with the
    Front-Cover Texts being LIST, and with the Back-Cover Texts being LIST.

If you have Invariant Sections without Cover Texts, or some other
combination of the three, merge those two alternatives to suit the
situation.

If your document contains nontrivial examples of program code, we
recommend releasing these examples in parallel under your choice of
free software license, such as the GNU General Public License,
to permit their use in free software.
</programlisting></para>
  </appendix>
</book>
