# Together Workflow Editor 
# Copyright (C) 2010 Together Teamsolutions Co., Ltd.
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or 
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful, 
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program. If not, see http://www.gnu.org/licenses
#
#######################################################################

#!/bin/bash
#
#
#

function help {
   echo "configure             - Creates build.properties file with default values for all possible parameters."
   echo "                        It can work only if there is a default JAVA registered with the system."
   echo "configure -help       - Displays Help screen"
   echo "configure -version    - Sets the version number for the project."
   echo "configure -release    - Sets the release number for the project."
   echo "configure -jdkhome    - Sets the "JAVA HOME" location of Java to be used to compile the project."
   echo "configure -instdir    - Sets the location of the installation dir used when executing make script"
   echo "                        with install target specified."
   echo
   echo "Multiple parameters can be specified at ones."
   echo
   echo
   echo "Example:"
   echo
   echo "./configure -version 3.3 -release 1 -jdkhome /usr/jdk1.6 -instdir /tmp/JaWE"
}

for n in $*
do
	case $n in
		--help | -help) help
			exit 0
		;;      
	esac            
done                    
                        
version=3.3
release=1
install_DOT_dir=

cd $(dirname $0)        
                        
if
	[[ -r ./build.properties ]]
then
	fname=/tmp/.build.properties$$.tmp
	grep -v "^[ 	]*#" ./build.properties |
		grep -v ^$ |
		sed -e 's/\./_DOT_/g' >$fname
	. $fname
	rm  $fname
else
        touch ./build.properties
fi

for n in $*             
do
	#if  the previous option needs an argument, assign it
                        
	if
		[[ -n $previous ]]
	then
		eval "$previous=\$n"
		previous=
		continue
	fi
	optarg=$(expr "x$n" : 'x[^=]*=\(.*\)')
	case $n in
		-version | --version)	previous=version;;
		-version=* | --version=*)	version=$optarg;;
		
		-release | --release)	previous=release;;
		-release=* | --release=*)	release=$optarg;;
		
		-jdkhome | --jdkhome)		previous=jdk_DOT_dir;;
		-jdkhome=* | --jdkhome=*)	jdk_DOT_dir=$optarg;;

		-instdir | --instdir)		previous=install_DOT_dir;;
		-instdir=* | --instdir=*)	install_DOT_dir=$optarg;;

	-*)
		{
			echo "$0: Error: unrecognized option $n" >&2
			help
			{(exit 1); exit 1;};
		} ;;
	*=*)
		eval "$n"
	    ;;

	*)
	    {
		echo "$0: error: unrecognized param: $n." >&2
		help
		{ (exit 1); exit 1; };
	    } ;;
    esac
done

if test -n "$jdk_DOT_dir"; then
    jdk_DOT_dir=`echo $jdk_DOT_dir|sed -e 's|_DOT_|\.|g'`
    version=`echo $version|sed -e 's|_DOT_|\.|g'`
else
    if test -n "$JAVA_HOME"; then
      jdk_DOT_dir=$JAVA_HOME
    else
      which_javac=`which javac 2>/dev/null`
       if test -n "$which_javac"; then
	   cd `dirname $which_javac`/..
	   jdk_DOT_dir=$PWD
	   cd -
       else
	   {
	       echo "$0: error: JAVA_HOME not defined
   Try \`$0 --help' for more information." >&2
	       { (exit 1); exit 1; };
	   }
       fi
    fi
fi




if test -d $jdk_DOT_dir -a -x $jdk_DOT_dir/bin/javac ; then
	prefix=${prefix:=/usr/local}
	prefix=$(echo $prefix | sed 's/_DOT_/./g')
    cat >Makefile <<EOF
#
VERSION=$version
PROJECT=twe
PREFIX=$prefix
CLASSPATH=\
$PWD/util/ant/ant.jar:\
$PWD/util/ant/ant-launcher.jar:\
$PWD/util/ant/antcontrib.jar:\
$jdk_DOT_dir/lib/tools.jar

JAVA_HOME=$jdk_DOT_dir
JAVAC=$jdk_DOT_dir/bin/javac
JAVA=$jdk_DOT_dir/bin/java
PATH=$jdk_DOT_dir/bin:\$(shell echo \$\$PATH)

help: FORCE
	@\$(JAVA) -cp \$(CLASSPATH) org.apache.tools.ant.Main \$@

buildAll: FORCE
	@\$(JAVA) -cp \$(CLASSPATH) org.apache.tools.ant.Main \$@

buildAllDebug: FORCE
	@\$(JAVA) -cp \$(CLASSPATH) org.apache.tools.ant.Main \$@

buildNoDoc: FORCE
	@\$(JAVA) -cp \$(CLASSPATH) org.apache.tools.ant.Main \$@

buildNoDocDebug: FORCE
	@\$(JAVA) -cp \$(CLASSPATH) org.apache.tools.ant.Main \$@

buildDoc: FORCE
	@\$(JAVA) -cp \$(CLASSPATH) org.apache.tools.ant.Main \$@

dependencies: FORCE
	@\$(JAVA) -cp \$(CLASSPATH) org.apache.tools.ant.Main \$@

dependency_tws: FORCE
	@\$(JAVA) -cp \$(CLASSPATH) org.apache.tools.ant.Main \$@

dependency_tas: FORCE
	@\$(JAVA) -cp \$(CLASSPATH) org.apache.tools.ant.Main \$@

install: FORCE
	@\$(JAVA) -cp \$(CLASSPATH) org.apache.tools.ant.Main \$@

clean: FORCE
	@\$(JAVA) -cp \$(CLASSPATH) org.apache.tools.ant.Main \$@

buildOutput: FORCE
	@\$(JAVA) -cp \$(CLASSPATH) org.apache.tools.ant.Main \$@
  
buildOutputDebug: FORCE
	@\$(JAVA) -cp \$(CLASSPATH) org.apache.tools.ant.Main \$@

distributions: clean
	@chmod +x installation/unix/dist.sh
	@JAVA_HOME=\$(JAVA_HOME) installation/unix/dist.sh \$(VERSION) $release community

FORCE:

EOF
else
    {
	echo "$0: error: JAVA_HOME=$jdk_DOT_dir not valid
Try \`$0 --help' for more information." >&2
	{ (exit 1); exit 1; };
    }
fi
fnameOld=/tmp/$$build.properties.old
fname=/tmp/$$build.properties
cp -p ./build.properties $fnameOld
sed "
/^[ 	]*version=/c\\
version=$version
/^[ 	]*release=/c\\
release=$release
/^[ 	]*jdk.dir=/c\\
jdk.dir=$jdk_DOT_dir
/^[ 	]*install.dir=/c\\
install.dir=$install_DOT_dir

" $fnameOld >$fname

rm build.properties

sed  -e 's|_DOT_|\.|g' $fname >>build.properties
(
	for pName in jdk.dir version release install.dir
	do
		value=$(echo $pName | sed "s/\./_DOT_/g")
		if
			 ! grep "^[      ]*$pName=" $fname >/dev/null
		then
			if
				eval [[ -n \$$value ]]
			then
				eval echo "$pName=\$$value"
			fi
		fi
	done
)|sed -e 's|_DOT_|\.|g'>>build.properties
chmod a+r build.properties
rm $fname $fnameOld
